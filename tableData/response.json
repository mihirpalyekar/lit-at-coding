{
    "1016": {
        "difficulty": "MEDIUM",
        "id": 1016,
        "questionFrontendId": "974",
        "title": "Subarray Sums Divisible by K",
        "titleSlug": "subarray-sums-divisible-by-k",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Prefix Sum",
                "slug": "prefix-sum"
            }
        ],
        "companyNames": [
            "citadel",
            "tiktok",
            "microsoft",
            "bloomberg",
            "apple",
            "adobe",
            "google",
            "amazon"
        ],
        "frequencyCount": 8,
        "url": "https://leetcode.com/problems/subarray-sums-divisible-by-k/description"
    },
    "2869": {
        "difficulty": "MEDIUM",
        "id": 2869,
        "questionFrontendId": "2771",
        "title": "Longest Non-decreasing Subarray From Two Arrays",
        "titleSlug": "longest-non-decreasing-subarray-from-two-arrays",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            }
        ],
        "companyNames": [
            "citadel",
            "amazon"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/longest-non-decreasing-subarray-from-two-arrays/description"
    },
    "124": {
        "difficulty": "HARD",
        "id": 124,
        "questionFrontendId": "124",
        "title": "Binary Tree Maximum Path Sum",
        "titleSlug": "binary-tree-maximum-path-sum",
        "topicTags": [
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Tree",
                "slug": "tree"
            },
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Binary Tree",
                "slug": "binary-tree"
            }
        ],
        "companyNames": [
            "citadel",
            "meta",
            "tiktok",
            "microsoft",
            "oracle",
            "bloomberg",
            "apple",
            "adobe",
            "walmart_labs",
            "nvidia",
            "doordash",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 14,
        "url": "https://leetcode.com/problems/binary-tree-maximum-path-sum/description"
    },
    "740": {
        "difficulty": "MEDIUM",
        "id": 740,
        "questionFrontendId": "740",
        "title": "Delete and Earn",
        "titleSlug": "delete-and-earn",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            }
        ],
        "companyNames": [
            "citadel",
            "microsoft",
            "bloomberg",
            "apple",
            "adobe",
            "accenture",
            "google",
            "amazon"
        ],
        "frequencyCount": 8,
        "url": "https://leetcode.com/problems/delete-and-earn/description"
    },
    "1142": {
        "difficulty": "MEDIUM",
        "id": 1142,
        "questionFrontendId": "1197",
        "title": "Minimum Knight Moves",
        "titleSlug": "minimum-knight-moves",
        "topicTags": [
            {
                "name": "Breadth-First Search",
                "slug": "breadth-first-search"
            }
        ],
        "companyNames": [
            "citadel",
            "linkedin",
            "microsoft",
            "bloomberg",
            "nvidia",
            "google",
            "amazon"
        ],
        "frequencyCount": 7,
        "url": "https://leetcode.com/problems/minimum-knight-moves/description"
    },
    "2500": {
        "difficulty": "HARD",
        "id": 2500,
        "questionFrontendId": "2361",
        "title": "Minimum Costs Using the Train Line",
        "titleSlug": "minimum-costs-using-the-train-line",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            }
        ],
        "companyNames": [
            "citadel",
            "google"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/minimum-costs-using-the-train-line/description"
    },
    "3171": {
        "difficulty": "MEDIUM",
        "id": 3171,
        "questionFrontendId": "2918",
        "title": "Minimum Equal Sum of Two Arrays After Replacing Zeros",
        "titleSlug": "minimum-equal-sum-of-two-arrays-after-replacing-zeros",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            }
        ],
        "companyNames": [
            "citadel"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/minimum-equal-sum-of-two-arrays-after-replacing-zeros/description"
    },
    "2672": {
        "difficulty": "MEDIUM",
        "id": 2672,
        "questionFrontendId": "2533",
        "title": "Number of Good Binary Strings",
        "titleSlug": "number-of-good-binary-strings",
        "topicTags": [
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            }
        ],
        "companyNames": [
            "citadel"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/number-of-good-binary-strings/description"
    },
    "460": {
        "difficulty": "HARD",
        "id": 460,
        "questionFrontendId": "460",
        "title": "LFU Cache",
        "titleSlug": "lfu-cache",
        "topicTags": [
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Linked List",
                "slug": "linked-list"
            },
            {
                "name": "Design",
                "slug": "design"
            },
            {
                "name": "Doubly-Linked List",
                "slug": "doubly-linked-list"
            }
        ],
        "companyNames": [
            "citadel",
            "meta",
            "tiktok",
            "microsoft",
            "oracle",
            "goldman_sachs",
            "bloomberg",
            "apple",
            "adobe",
            "walmart_labs",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 13,
        "url": "https://leetcode.com/problems/lfu-cache/description"
    },
    "718": {
        "difficulty": "MEDIUM",
        "id": 718,
        "questionFrontendId": "718",
        "title": "Maximum Length of Repeated Subarray",
        "titleSlug": "maximum-length-of-repeated-subarray",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Binary Search",
                "slug": "binary-search"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Sliding Window",
                "slug": "sliding-window"
            },
            {
                "name": "Rolling Hash",
                "slug": "rolling-hash"
            },
            {
                "name": "Hash Function",
                "slug": "hash-function"
            }
        ],
        "companyNames": [
            "citadel",
            "microsoft",
            "bloomberg",
            "apple",
            "adobe",
            "google",
            "amazon"
        ],
        "frequencyCount": 7,
        "url": "https://leetcode.com/problems/maximum-length-of-repeated-subarray/description"
    },
    "3437": {
        "difficulty": "MEDIUM",
        "id": 3437,
        "questionFrontendId": "3186",
        "title": "Maximum Total Damage With Spell Casting",
        "titleSlug": "maximum-total-damage-with-spell-casting",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Two Pointers",
                "slug": "two-pointers"
            },
            {
                "name": "Binary Search",
                "slug": "binary-search"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            },
            {
                "name": "Counting",
                "slug": "counting"
            }
        ],
        "companyNames": [
            "citadel",
            "bloomberg"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/maximum-total-damage-with-spell-casting/description"
    },
    "1638": {
        "difficulty": "HARD",
        "id": 1638,
        "questionFrontendId": "1515",
        "title": "Best Position for a Service Centre",
        "titleSlug": "best-position-for-a-service-centre",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Geometry",
                "slug": "geometry"
            },
            {
                "name": "Randomized",
                "slug": "randomized"
            }
        ],
        "companyNames": [
            "citadel",
            "meta",
            "amazon",
            "uber"
        ],
        "frequencyCount": 4,
        "url": "https://leetcode.com/problems/best-position-for-a-service-centre/description"
    },
    "2685": {
        "difficulty": "MEDIUM",
        "id": 2685,
        "questionFrontendId": "2661",
        "title": "First Completely Painted Row or Column",
        "titleSlug": "first-completely-painted-row-or-column",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Matrix",
                "slug": "matrix"
            }
        ],
        "companyNames": [
            "citadel",
            "adobe"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/first-completely-painted-row-or-column/description"
    },
    "150": {
        "difficulty": "MEDIUM",
        "id": 150,
        "questionFrontendId": "150",
        "title": "Evaluate Reverse Polish Notation",
        "titleSlug": "evaluate-reverse-polish-notation",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Stack",
                "slug": "stack"
            }
        ],
        "companyNames": [
            "citadel",
            "linkedin",
            "meta",
            "microsoft",
            "oracle",
            "bloomberg",
            "apple",
            "adobe",
            "accenture",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 12,
        "url": "https://leetcode.com/problems/evaluate-reverse-polish-notation/description"
    },
    "647": {
        "difficulty": "MEDIUM",
        "id": 647,
        "questionFrontendId": "647",
        "title": "Palindromic Substrings",
        "titleSlug": "palindromic-substrings",
        "topicTags": [
            {
                "name": "Two Pointers",
                "slug": "two-pointers"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            }
        ],
        "companyNames": [
            "citadel",
            "linkedin",
            "meta",
            "microsoft",
            "oracle",
            "goldman_sachs",
            "bloomberg",
            "apple",
            "adobe",
            "walmart_labs",
            "accenture",
            "cisco",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 15,
        "url": "https://leetcode.com/problems/palindromic-substrings/description"
    },
    "946": {
        "difficulty": "MEDIUM",
        "id": 946,
        "questionFrontendId": "910",
        "title": "Smallest Range II",
        "titleSlug": "smallest-range-ii",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ],
        "companyNames": [
            "citadel",
            "adobe",
            "amazon"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/smallest-range-ii/description"
    },
    "121": {
        "difficulty": "EASY",
        "id": 121,
        "questionFrontendId": "121",
        "title": "Best Time to Buy and Sell Stock",
        "titleSlug": "best-time-to-buy-and-sell-stock",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            }
        ],
        "companyNames": [
            "citadel",
            "linkedin",
            "meta",
            "tiktok",
            "microsoft",
            "oracle",
            "goldman_sachs",
            "bloomberg",
            "apple",
            "adobe",
            "walmart_labs",
            "nvidia",
            "tcs",
            "accenture",
            "cisco",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 18,
        "url": "https://leetcode.com/problems/best-time-to-buy-and-sell-stock/description"
    },
    "1129": {
        "difficulty": "MEDIUM",
        "id": 1129,
        "questionFrontendId": "1048",
        "title": "Longest String Chain",
        "titleSlug": "longest-string-chain",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Two Pointers",
                "slug": "two-pointers"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ],
        "companyNames": [
            "citadel",
            "bloomberg",
            "apple",
            "adobe",
            "google",
            "amazon"
        ],
        "frequencyCount": 6,
        "url": "https://leetcode.com/problems/longest-string-chain/description"
    },
    "122": {
        "difficulty": "MEDIUM",
        "id": 122,
        "questionFrontendId": "122",
        "title": "Best Time to Buy and Sell Stock II",
        "titleSlug": "best-time-to-buy-and-sell-stock-ii",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            }
        ],
        "companyNames": [
            "citadel",
            "meta",
            "tiktok",
            "microsoft",
            "oracle",
            "goldman_sachs",
            "bloomberg",
            "apple",
            "adobe",
            "walmart_labs",
            "tcs",
            "accenture",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 15,
        "url": "https://leetcode.com/problems/best-time-to-buy-and-sell-stock-ii/description"
    },
    "146": {
        "difficulty": "MEDIUM",
        "id": 146,
        "questionFrontendId": "146",
        "title": "LRU Cache",
        "titleSlug": "lru-cache",
        "topicTags": [
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Linked List",
                "slug": "linked-list"
            },
            {
                "name": "Design",
                "slug": "design"
            },
            {
                "name": "Doubly-Linked List",
                "slug": "doubly-linked-list"
            }
        ],
        "companyNames": [
            "citadel",
            "linkedin",
            "meta",
            "tiktok",
            "microsoft",
            "oracle",
            "goldman_sachs",
            "bloomberg",
            "apple",
            "adobe",
            "walmart_labs",
            "nvidia",
            "doordash",
            "cisco",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 17,
        "url": "https://leetcode.com/problems/lru-cache/description"
    },
    "46": {
        "difficulty": "MEDIUM",
        "id": 46,
        "questionFrontendId": "46",
        "title": "Permutations",
        "titleSlug": "permutations",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Backtracking",
                "slug": "backtracking"
            }
        ],
        "companyNames": [
            "citadel",
            "linkedin",
            "meta",
            "tiktok",
            "microsoft",
            "oracle",
            "goldman_sachs",
            "bloomberg",
            "apple",
            "adobe",
            "walmart_labs",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 14,
        "url": "https://leetcode.com/problems/permutations/description"
    },
    "297": {
        "difficulty": "HARD",
        "id": 297,
        "questionFrontendId": "297",
        "title": "Serialize and Deserialize Binary Tree",
        "titleSlug": "serialize-and-deserialize-binary-tree",
        "topicTags": [
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Tree",
                "slug": "tree"
            },
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Breadth-First Search",
                "slug": "breadth-first-search"
            },
            {
                "name": "Design",
                "slug": "design"
            },
            {
                "name": "Binary Tree",
                "slug": "binary-tree"
            }
        ],
        "companyNames": [
            "citadel",
            "linkedin",
            "meta",
            "tiktok",
            "microsoft",
            "bloomberg",
            "apple",
            "adobe",
            "doordash",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 12,
        "url": "https://leetcode.com/problems/serialize-and-deserialize-binary-tree/description"
    },
    "98": {
        "difficulty": "MEDIUM",
        "id": 98,
        "questionFrontendId": "98",
        "title": "Validate Binary Search Tree",
        "titleSlug": "validate-binary-search-tree",
        "topicTags": [
            {
                "name": "Tree",
                "slug": "tree"
            },
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Binary Search Tree",
                "slug": "binary-search-tree"
            },
            {
                "name": "Binary Tree",
                "slug": "binary-tree"
            }
        ],
        "companyNames": [
            "citadel",
            "linkedin",
            "meta",
            "tiktok",
            "microsoft",
            "oracle",
            "bloomberg",
            "apple",
            "adobe",
            "walmart_labs",
            "nvidia",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 14,
        "url": "https://leetcode.com/problems/validate-binary-search-tree/description"
    },
    "239": {
        "difficulty": "HARD",
        "id": 239,
        "questionFrontendId": "239",
        "title": "Sliding Window Maximum",
        "titleSlug": "sliding-window-maximum",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Queue",
                "slug": "queue"
            },
            {
                "name": "Sliding Window",
                "slug": "sliding-window"
            },
            {
                "name": "Heap (Priority Queue)",
                "slug": "heap-priority-queue"
            },
            {
                "name": "Monotonic Queue",
                "slug": "monotonic-queue"
            }
        ],
        "companyNames": [
            "citadel",
            "meta",
            "tiktok",
            "microsoft",
            "oracle",
            "goldman_sachs",
            "bloomberg",
            "apple",
            "adobe",
            "tcs",
            "accenture",
            "doordash",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 15,
        "url": "https://leetcode.com/problems/sliding-window-maximum/description"
    },
    "370": {
        "difficulty": "MEDIUM",
        "id": 370,
        "questionFrontendId": "370",
        "title": "Range Addition",
        "titleSlug": "range-addition",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Prefix Sum",
                "slug": "prefix-sum"
            }
        ],
        "companyNames": [
            "citadel",
            "google"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/range-addition/description"
    },
    "865": {
        "difficulty": "HARD",
        "id": 865,
        "questionFrontendId": "489",
        "title": "Robot Room Cleaner",
        "titleSlug": "robot-room-cleaner",
        "topicTags": [
            {
                "name": "Backtracking",
                "slug": "backtracking"
            },
            {
                "name": "Interactive",
                "slug": "interactive"
            }
        ],
        "companyNames": [
            "citadel",
            "tiktok",
            "microsoft",
            "google",
            "amazon"
        ],
        "frequencyCount": 5,
        "url": "https://leetcode.com/problems/robot-room-cleaner/description"
    },
    "10": {
        "difficulty": "HARD",
        "id": 10,
        "questionFrontendId": "10",
        "title": "Regular Expression Matching",
        "titleSlug": "regular-expression-matching",
        "topicTags": [
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Recursion",
                "slug": "recursion"
            }
        ],
        "companyNames": [
            "citadel",
            "meta",
            "tiktok",
            "microsoft",
            "oracle",
            "bloomberg",
            "apple",
            "adobe",
            "airbnb",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 12,
        "url": "https://leetcode.com/problems/regular-expression-matching/description"
    },
    "12": {
        "difficulty": "MEDIUM",
        "id": 12,
        "questionFrontendId": "12",
        "title": "Integer to Roman",
        "titleSlug": "integer-to-roman",
        "topicTags": [
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "String",
                "slug": "string"
            }
        ],
        "companyNames": [
            "citadel",
            "linkedin",
            "meta",
            "tiktok",
            "microsoft",
            "oracle",
            "goldman_sachs",
            "bloomberg",
            "apple",
            "adobe",
            "accenture",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 14,
        "url": "https://leetcode.com/problems/integer-to-roman/description"
    },
    "37": {
        "difficulty": "HARD",
        "id": 37,
        "questionFrontendId": "37",
        "title": "Sudoku Solver",
        "titleSlug": "sudoku-solver",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Backtracking",
                "slug": "backtracking"
            },
            {
                "name": "Matrix",
                "slug": "matrix"
            }
        ],
        "companyNames": [
            "citadel",
            "meta",
            "tiktok",
            "microsoft",
            "oracle",
            "bloomberg",
            "apple",
            "adobe",
            "doordash",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 12,
        "url": "https://leetcode.com/problems/sudoku-solver/description"
    },
    "51": {
        "difficulty": "HARD",
        "id": 51,
        "questionFrontendId": "51",
        "title": "N-Queens",
        "titleSlug": "n-queens",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Backtracking",
                "slug": "backtracking"
            }
        ],
        "companyNames": [
            "citadel",
            "meta",
            "tiktok",
            "microsoft",
            "goldman_sachs",
            "bloomberg",
            "apple",
            "adobe",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 11,
        "url": "https://leetcode.com/problems/n-queens/description"
    },
    "123": {
        "difficulty": "HARD",
        "id": 123,
        "questionFrontendId": "123",
        "title": "Best Time to Buy and Sell Stock III",
        "titleSlug": "best-time-to-buy-and-sell-stock-iii",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            }
        ],
        "companyNames": [
            "citadel",
            "meta",
            "tiktok",
            "microsoft",
            "bloomberg",
            "apple",
            "adobe",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 10,
        "url": "https://leetcode.com/problems/best-time-to-buy-and-sell-stock-iii/description"
    },
    "221": {
        "difficulty": "MEDIUM",
        "id": 221,
        "questionFrontendId": "221",
        "title": "Maximal Square",
        "titleSlug": "maximal-square",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Matrix",
                "slug": "matrix"
            }
        ],
        "companyNames": [
            "citadel",
            "meta",
            "tiktok",
            "microsoft",
            "oracle",
            "goldman_sachs",
            "bloomberg",
            "apple",
            "adobe",
            "walmart_labs",
            "nvidia",
            "airbnb",
            "cisco",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 16,
        "url": "https://leetcode.com/problems/maximal-square/description"
    },
    "287": {
        "difficulty": "MEDIUM",
        "id": 287,
        "questionFrontendId": "287",
        "title": "Find the Duplicate Number",
        "titleSlug": "find-the-duplicate-number",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Two Pointers",
                "slug": "two-pointers"
            },
            {
                "name": "Binary Search",
                "slug": "binary-search"
            },
            {
                "name": "Bit Manipulation",
                "slug": "bit-manipulation"
            }
        ],
        "companyNames": [
            "citadel",
            "meta",
            "microsoft",
            "oracle",
            "goldman_sachs",
            "bloomberg",
            "apple",
            "adobe",
            "nvidia",
            "tcs",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 13,
        "url": "https://leetcode.com/problems/find-the-duplicate-number/description"
    },
    "295": {
        "difficulty": "HARD",
        "id": 295,
        "questionFrontendId": "295",
        "title": "Find Median from Data Stream",
        "titleSlug": "find-median-from-data-stream",
        "topicTags": [
            {
                "name": "Two Pointers",
                "slug": "two-pointers"
            },
            {
                "name": "Design",
                "slug": "design"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            },
            {
                "name": "Heap (Priority Queue)",
                "slug": "heap-priority-queue"
            },
            {
                "name": "Data Stream",
                "slug": "data-stream"
            }
        ],
        "companyNames": [
            "citadel",
            "meta",
            "tiktok",
            "microsoft",
            "oracle",
            "goldman_sachs",
            "bloomberg",
            "apple",
            "adobe",
            "nvidia",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 13,
        "url": "https://leetcode.com/problems/find-median-from-data-stream/description"
    },
    "329": {
        "difficulty": "HARD",
        "id": 329,
        "questionFrontendId": "329",
        "title": "Longest Increasing Path in a Matrix",
        "titleSlug": "longest-increasing-path-in-a-matrix",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Breadth-First Search",
                "slug": "breadth-first-search"
            },
            {
                "name": "Graph",
                "slug": "graph"
            },
            {
                "name": "Topological Sort",
                "slug": "topological-sort"
            },
            {
                "name": "Memoization",
                "slug": "memoization"
            },
            {
                "name": "Matrix",
                "slug": "matrix"
            }
        ],
        "companyNames": [
            "citadel",
            "meta",
            "tiktok",
            "microsoft",
            "bloomberg",
            "apple",
            "nvidia",
            "doordash",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 11,
        "url": "https://leetcode.com/problems/longest-increasing-path-in-a-matrix/description"
    },
    "399": {
        "difficulty": "MEDIUM",
        "id": 399,
        "questionFrontendId": "399",
        "title": "Evaluate Division",
        "titleSlug": "evaluate-division",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Breadth-First Search",
                "slug": "breadth-first-search"
            },
            {
                "name": "Union Find",
                "slug": "union-find"
            },
            {
                "name": "Graph",
                "slug": "graph"
            },
            {
                "name": "Shortest Path",
                "slug": "shortest-path"
            }
        ],
        "companyNames": [
            "citadel",
            "linkedin",
            "meta",
            "tiktok",
            "microsoft",
            "goldman_sachs",
            "bloomberg",
            "apple",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 11,
        "url": "https://leetcode.com/problems/evaluate-division/description"
    },
    "560": {
        "difficulty": "MEDIUM",
        "id": 560,
        "questionFrontendId": "560",
        "title": "Subarray Sum Equals K",
        "titleSlug": "subarray-sum-equals-k",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Prefix Sum",
                "slug": "prefix-sum"
            }
        ],
        "companyNames": [
            "citadel",
            "meta",
            "tiktok",
            "microsoft",
            "oracle",
            "goldman_sachs",
            "bloomberg",
            "apple",
            "adobe",
            "walmart_labs",
            "tcs",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 14,
        "url": "https://leetcode.com/problems/subarray-sum-equals-k/description"
    },
    "642": {
        "difficulty": "HARD",
        "id": 642,
        "questionFrontendId": "642",
        "title": "Design Search Autocomplete System",
        "titleSlug": "design-search-autocomplete-system",
        "topicTags": [
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Design",
                "slug": "design"
            },
            {
                "name": "Trie",
                "slug": "trie"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            },
            {
                "name": "Heap (Priority Queue)",
                "slug": "heap-priority-queue"
            },
            {
                "name": "Data Stream",
                "slug": "data-stream"
            }
        ],
        "companyNames": [
            "citadel",
            "tiktok",
            "microsoft",
            "bloomberg",
            "apple",
            "google",
            "amazon"
        ],
        "frequencyCount": 7,
        "url": "https://leetcode.com/problems/design-search-autocomplete-system/description"
    },
    "1036": {
        "difficulty": "MEDIUM",
        "id": 1036,
        "questionFrontendId": "994",
        "title": "Rotting Oranges",
        "titleSlug": "rotting-oranges",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Breadth-First Search",
                "slug": "breadth-first-search"
            },
            {
                "name": "Matrix",
                "slug": "matrix"
            }
        ],
        "companyNames": [
            "citadel",
            "meta",
            "tiktok",
            "microsoft",
            "oracle",
            "goldman_sachs",
            "bloomberg",
            "apple",
            "adobe",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 12,
        "url": "https://leetcode.com/problems/rotting-oranges/description"
    },
    "2729": {
        "difficulty": "HARD",
        "id": 2729,
        "questionFrontendId": "2702",
        "title": "Minimum Operations to Make Numbers Non-positive",
        "titleSlug": "minimum-operations-to-make-numbers-non-positive",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Binary Search",
                "slug": "binary-search"
            }
        ],
        "companyNames": [
            "citadel"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/minimum-operations-to-make-numbers-non-positive/description"
    },
    "15": {
        "difficulty": "MEDIUM",
        "id": 15,
        "questionFrontendId": "15",
        "title": "3Sum",
        "titleSlug": "3sum",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Two Pointers",
                "slug": "two-pointers"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ],
        "companyNames": [
            "citadel",
            "meta",
            "tiktok",
            "microsoft",
            "oracle",
            "goldman_sachs",
            "bloomberg",
            "apple",
            "adobe",
            "walmart_labs",
            "nvidia",
            "tcs",
            "accenture",
            "doordash",
            "cisco",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 18,
        "url": "https://leetcode.com/problems/3sum/description"
    },
    "42": {
        "difficulty": "HARD",
        "id": 42,
        "questionFrontendId": "42",
        "title": "Trapping Rain Water",
        "titleSlug": "trapping-rain-water",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Two Pointers",
                "slug": "two-pointers"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Stack",
                "slug": "stack"
            },
            {
                "name": "Monotonic Stack",
                "slug": "monotonic-stack"
            }
        ],
        "companyNames": [
            "citadel",
            "meta",
            "tiktok",
            "microsoft",
            "oracle",
            "goldman_sachs",
            "bloomberg",
            "apple",
            "adobe",
            "walmart_labs",
            "nvidia",
            "airbnb",
            "tcs",
            "cisco",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 17,
        "url": "https://leetcode.com/problems/trapping-rain-water/description"
    },
    "49": {
        "difficulty": "MEDIUM",
        "id": 49,
        "questionFrontendId": "49",
        "title": "Group Anagrams",
        "titleSlug": "group-anagrams",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ],
        "companyNames": [
            "citadel",
            "meta",
            "tiktok",
            "microsoft",
            "oracle",
            "goldman_sachs",
            "bloomberg",
            "apple",
            "adobe",
            "walmart_labs",
            "nvidia",
            "accenture",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 15,
        "url": "https://leetcode.com/problems/group-anagrams/description"
    },
    "127": {
        "difficulty": "HARD",
        "id": 127,
        "questionFrontendId": "127",
        "title": "Word Ladder",
        "titleSlug": "word-ladder",
        "topicTags": [
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Breadth-First Search",
                "slug": "breadth-first-search"
            }
        ],
        "companyNames": [
            "citadel",
            "linkedin",
            "meta",
            "tiktok",
            "microsoft",
            "bloomberg",
            "apple",
            "adobe",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 11,
        "url": "https://leetcode.com/problems/word-ladder/description"
    },
    "198": {
        "difficulty": "MEDIUM",
        "id": 198,
        "questionFrontendId": "198",
        "title": "House Robber",
        "titleSlug": "house-robber",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            }
        ],
        "companyNames": [
            "citadel",
            "linkedin",
            "meta",
            "tiktok",
            "microsoft",
            "goldman_sachs",
            "bloomberg",
            "apple",
            "adobe",
            "walmart_labs",
            "nvidia",
            "airbnb",
            "accenture",
            "cisco",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 17,
        "url": "https://leetcode.com/problems/house-robber/description"
    },
    "200": {
        "difficulty": "MEDIUM",
        "id": 200,
        "questionFrontendId": "200",
        "title": "Number of Islands",
        "titleSlug": "number-of-islands",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Breadth-First Search",
                "slug": "breadth-first-search"
            },
            {
                "name": "Union Find",
                "slug": "union-find"
            },
            {
                "name": "Matrix",
                "slug": "matrix"
            }
        ],
        "companyNames": [
            "citadel",
            "linkedin",
            "meta",
            "tiktok",
            "microsoft",
            "oracle",
            "goldman_sachs",
            "bloomberg",
            "apple",
            "adobe",
            "walmart_labs",
            "nvidia",
            "doordash",
            "cisco",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 17,
        "url": "https://leetcode.com/problems/number-of-islands/description"
    },
    "310": {
        "difficulty": "MEDIUM",
        "id": 310,
        "questionFrontendId": "310",
        "title": "Minimum Height Trees",
        "titleSlug": "minimum-height-trees",
        "topicTags": [
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Breadth-First Search",
                "slug": "breadth-first-search"
            },
            {
                "name": "Graph",
                "slug": "graph"
            },
            {
                "name": "Topological Sort",
                "slug": "topological-sort"
            }
        ],
        "companyNames": [
            "citadel",
            "microsoft",
            "apple",
            "adobe",
            "google",
            "amazon"
        ],
        "frequencyCount": 6,
        "url": "https://leetcode.com/problems/minimum-height-trees/description"
    },
    "380": {
        "difficulty": "MEDIUM",
        "id": 380,
        "questionFrontendId": "380",
        "title": "Insert Delete GetRandom O(1)",
        "titleSlug": "insert-delete-getrandom-o1",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Design",
                "slug": "design"
            },
            {
                "name": "Randomized",
                "slug": "randomized"
            }
        ],
        "companyNames": [
            "citadel",
            "linkedin",
            "meta",
            "tiktok",
            "microsoft",
            "oracle",
            "goldman_sachs",
            "bloomberg",
            "apple",
            "adobe",
            "nvidia",
            "cisco",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 15,
        "url": "https://leetcode.com/problems/insert-delete-getrandom-o1/description"
    },
    "588": {
        "difficulty": "HARD",
        "id": 588,
        "questionFrontendId": "588",
        "title": "Design In-Memory File System",
        "titleSlug": "design-in-memory-file-system",
        "topicTags": [
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Design",
                "slug": "design"
            },
            {
                "name": "Trie",
                "slug": "trie"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ],
        "companyNames": [
            "citadel",
            "meta",
            "tiktok",
            "microsoft",
            "oracle",
            "apple",
            "doordash",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 10,
        "url": "https://leetcode.com/problems/design-in-memory-file-system/description"
    },
    "2562": {
        "difficulty": "MEDIUM",
        "id": 2562,
        "questionFrontendId": "2466",
        "title": "Count Ways To Build Good Strings",
        "titleSlug": "count-ways-to-build-good-strings",
        "topicTags": [
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            }
        ],
        "companyNames": [
            "citadel",
            "oracle",
            "google",
            "amazon"
        ],
        "frequencyCount": 4,
        "url": "https://leetcode.com/problems/count-ways-to-build-good-strings/description"
    },
    "4": {
        "difficulty": "HARD",
        "id": 4,
        "questionFrontendId": "4",
        "title": "Median of Two Sorted Arrays",
        "titleSlug": "median-of-two-sorted-arrays",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Binary Search",
                "slug": "binary-search"
            },
            {
                "name": "Divide and Conquer",
                "slug": "divide-and-conquer"
            }
        ],
        "companyNames": [
            "citadel",
            "linkedin",
            "meta",
            "tiktok",
            "microsoft",
            "oracle",
            "goldman_sachs",
            "bloomberg",
            "apple",
            "adobe",
            "walmart_labs",
            "tcs",
            "accenture",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 16,
        "url": "https://leetcode.com/problems/median-of-two-sorted-arrays/description"
    },
    "11": {
        "difficulty": "MEDIUM",
        "id": 11,
        "questionFrontendId": "11",
        "title": "Container With Most Water",
        "titleSlug": "container-with-most-water",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Two Pointers",
                "slug": "two-pointers"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            }
        ],
        "companyNames": [
            "citadel",
            "meta",
            "tiktok",
            "microsoft",
            "oracle",
            "goldman_sachs",
            "bloomberg",
            "apple",
            "adobe",
            "walmart_labs",
            "tcs",
            "accenture",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 15,
        "url": "https://leetcode.com/problems/container-with-most-water/description"
    },
    "13": {
        "difficulty": "EASY",
        "id": 13,
        "questionFrontendId": "13",
        "title": "Roman to Integer",
        "titleSlug": "roman-to-integer",
        "topicTags": [
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "String",
                "slug": "string"
            }
        ],
        "companyNames": [
            "citadel",
            "linkedin",
            "meta",
            "microsoft",
            "oracle",
            "goldman_sachs",
            "bloomberg",
            "apple",
            "adobe",
            "tcs",
            "accenture",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 14,
        "url": "https://leetcode.com/problems/roman-to-integer/description"
    },
    "20": {
        "difficulty": "EASY",
        "id": 20,
        "questionFrontendId": "20",
        "title": "Valid Parentheses",
        "titleSlug": "valid-parentheses",
        "topicTags": [
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Stack",
                "slug": "stack"
            }
        ],
        "companyNames": [
            "citadel",
            "linkedin",
            "meta",
            "tiktok",
            "microsoft",
            "oracle",
            "goldman_sachs",
            "bloomberg",
            "apple",
            "adobe",
            "walmart_labs",
            "nvidia",
            "airbnb",
            "tcs",
            "accenture",
            "cisco",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 19,
        "url": "https://leetcode.com/problems/valid-parentheses/description"
    },
    "23": {
        "difficulty": "HARD",
        "id": 23,
        "questionFrontendId": "23",
        "title": "Merge k Sorted Lists",
        "titleSlug": "merge-k-sorted-lists",
        "topicTags": [
            {
                "name": "Linked List",
                "slug": "linked-list"
            },
            {
                "name": "Divide and Conquer",
                "slug": "divide-and-conquer"
            },
            {
                "name": "Heap (Priority Queue)",
                "slug": "heap-priority-queue"
            },
            {
                "name": "Merge Sort",
                "slug": "merge-sort"
            }
        ],
        "companyNames": [
            "citadel",
            "linkedin",
            "meta",
            "tiktok",
            "microsoft",
            "oracle",
            "goldman_sachs",
            "bloomberg",
            "apple",
            "adobe",
            "walmart_labs",
            "nvidia",
            "airbnb",
            "cisco",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 17,
        "url": "https://leetcode.com/problems/merge-k-sorted-lists/description"
    },
    "31": {
        "difficulty": "MEDIUM",
        "id": 31,
        "questionFrontendId": "31",
        "title": "Next Permutation",
        "titleSlug": "next-permutation",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Two Pointers",
                "slug": "two-pointers"
            }
        ],
        "companyNames": [
            "citadel",
            "linkedin",
            "meta",
            "tiktok",
            "microsoft",
            "goldman_sachs",
            "bloomberg",
            "apple",
            "adobe",
            "walmart_labs",
            "tcs",
            "accenture",
            "doordash",
            "cisco",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 17,
        "url": "https://leetcode.com/problems/next-permutation/description"
    },
    "34": {
        "difficulty": "MEDIUM",
        "id": 34,
        "questionFrontendId": "34",
        "title": "Find First and Last Position of Element in Sorted Array",
        "titleSlug": "find-first-and-last-position-of-element-in-sorted-array",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Binary Search",
                "slug": "binary-search"
            }
        ],
        "companyNames": [
            "citadel",
            "linkedin",
            "meta",
            "tiktok",
            "microsoft",
            "oracle",
            "goldman_sachs",
            "bloomberg",
            "apple",
            "adobe",
            "walmart_labs",
            "tcs",
            "accenture",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 16,
        "url": "https://leetcode.com/problems/find-first-and-last-position-of-element-in-sorted-array/description"
    },
    "39": {
        "difficulty": "MEDIUM",
        "id": 39,
        "questionFrontendId": "39",
        "title": "Combination Sum",
        "titleSlug": "combination-sum",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Backtracking",
                "slug": "backtracking"
            }
        ],
        "companyNames": [
            "citadel",
            "linkedin",
            "meta",
            "tiktok",
            "microsoft",
            "oracle",
            "bloomberg",
            "apple",
            "adobe",
            "walmart_labs",
            "airbnb",
            "tcs",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 15,
        "url": "https://leetcode.com/problems/combination-sum/description"
    },
    "44": {
        "difficulty": "HARD",
        "id": 44,
        "questionFrontendId": "44",
        "title": "Wildcard Matching",
        "titleSlug": "wildcard-matching",
        "topicTags": [
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            },
            {
                "name": "Recursion",
                "slug": "recursion"
            }
        ],
        "companyNames": [
            "citadel",
            "meta",
            "microsoft",
            "bloomberg",
            "apple",
            "adobe",
            "walmart_labs",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 10,
        "url": "https://leetcode.com/problems/wildcard-matching/description"
    },
    "47": {
        "difficulty": "MEDIUM",
        "id": 47,
        "questionFrontendId": "47",
        "title": "Permutations II",
        "titleSlug": "permutations-ii",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Backtracking",
                "slug": "backtracking"
            }
        ],
        "companyNames": [
            "citadel",
            "linkedin",
            "tiktok",
            "microsoft",
            "bloomberg",
            "apple",
            "adobe",
            "google",
            "amazon"
        ],
        "frequencyCount": 9,
        "url": "https://leetcode.com/problems/permutations-ii/description"
    },
    "48": {
        "difficulty": "MEDIUM",
        "id": 48,
        "questionFrontendId": "48",
        "title": "Rotate Image",
        "titleSlug": "rotate-image",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Matrix",
                "slug": "matrix"
            }
        ],
        "companyNames": [
            "citadel",
            "meta",
            "tiktok",
            "microsoft",
            "oracle",
            "goldman_sachs",
            "bloomberg",
            "apple",
            "adobe",
            "walmart_labs",
            "nvidia",
            "accenture",
            "cisco",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 16,
        "url": "https://leetcode.com/problems/rotate-image/description"
    },
    "54": {
        "difficulty": "MEDIUM",
        "id": 54,
        "questionFrontendId": "54",
        "title": "Spiral Matrix",
        "titleSlug": "spiral-matrix",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Matrix",
                "slug": "matrix"
            },
            {
                "name": "Simulation",
                "slug": "simulation"
            }
        ],
        "companyNames": [
            "citadel",
            "meta",
            "tiktok",
            "microsoft",
            "oracle",
            "goldman_sachs",
            "bloomberg",
            "apple",
            "adobe",
            "walmart_labs",
            "tcs",
            "accenture",
            "cisco",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 16,
        "url": "https://leetcode.com/problems/spiral-matrix/description"
    },
    "62": {
        "difficulty": "MEDIUM",
        "id": 62,
        "questionFrontendId": "62",
        "title": "Unique Paths",
        "titleSlug": "unique-paths",
        "topicTags": [
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Combinatorics",
                "slug": "combinatorics"
            }
        ],
        "companyNames": [
            "citadel",
            "meta",
            "tiktok",
            "microsoft",
            "oracle",
            "goldman_sachs",
            "bloomberg",
            "apple",
            "adobe",
            "tcs",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 13,
        "url": "https://leetcode.com/problems/unique-paths/description"
    },
    "71": {
        "difficulty": "MEDIUM",
        "id": 71,
        "questionFrontendId": "71",
        "title": "Simplify Path",
        "titleSlug": "simplify-path",
        "topicTags": [
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Stack",
                "slug": "stack"
            }
        ],
        "companyNames": [
            "citadel",
            "meta",
            "tiktok",
            "microsoft",
            "oracle",
            "bloomberg",
            "apple",
            "adobe",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 11,
        "url": "https://leetcode.com/problems/simplify-path/description"
    },
    "79": {
        "difficulty": "MEDIUM",
        "id": 79,
        "questionFrontendId": "79",
        "title": "Word Search",
        "titleSlug": "word-search",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Backtracking",
                "slug": "backtracking"
            },
            {
                "name": "Matrix",
                "slug": "matrix"
            }
        ],
        "companyNames": [
            "citadel",
            "meta",
            "tiktok",
            "microsoft",
            "oracle",
            "goldman_sachs",
            "bloomberg",
            "apple",
            "adobe",
            "walmart_labs",
            "tcs",
            "cisco",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 15,
        "url": "https://leetcode.com/problems/word-search/description"
    },
    "117": {
        "difficulty": "MEDIUM",
        "id": 117,
        "questionFrontendId": "117",
        "title": "Populating Next Right Pointers in Each Node II",
        "titleSlug": "populating-next-right-pointers-in-each-node-ii",
        "topicTags": [
            {
                "name": "Linked List",
                "slug": "linked-list"
            },
            {
                "name": "Tree",
                "slug": "tree"
            },
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Breadth-First Search",
                "slug": "breadth-first-search"
            },
            {
                "name": "Binary Tree",
                "slug": "binary-tree"
            }
        ],
        "companyNames": [
            "citadel",
            "microsoft",
            "bloomberg",
            "walmart_labs",
            "google",
            "amazon"
        ],
        "frequencyCount": 6,
        "url": "https://leetcode.com/problems/populating-next-right-pointers-in-each-node-ii/description"
    },
    "126": {
        "difficulty": "HARD",
        "id": 126,
        "questionFrontendId": "126",
        "title": "Word Ladder II",
        "titleSlug": "word-ladder-ii",
        "topicTags": [
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Backtracking",
                "slug": "backtracking"
            },
            {
                "name": "Breadth-First Search",
                "slug": "breadth-first-search"
            }
        ],
        "companyNames": [
            "citadel",
            "linkedin",
            "tiktok",
            "microsoft",
            "bloomberg",
            "apple",
            "google",
            "amazon"
        ],
        "frequencyCount": 8,
        "url": "https://leetcode.com/problems/word-ladder-ii/description"
    },
    "188": {
        "difficulty": "HARD",
        "id": 188,
        "questionFrontendId": "188",
        "title": "Best Time to Buy and Sell Stock IV",
        "titleSlug": "best-time-to-buy-and-sell-stock-iv",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            }
        ],
        "companyNames": [
            "citadel",
            "meta",
            "tiktok",
            "microsoft",
            "goldman_sachs",
            "bloomberg",
            "apple",
            "adobe",
            "nvidia",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 12,
        "url": "https://leetcode.com/problems/best-time-to-buy-and-sell-stock-iv/description"
    },
    "207": {
        "difficulty": "MEDIUM",
        "id": 207,
        "questionFrontendId": "207",
        "title": "Course Schedule",
        "titleSlug": "course-schedule",
        "topicTags": [
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Breadth-First Search",
                "slug": "breadth-first-search"
            },
            {
                "name": "Graph",
                "slug": "graph"
            },
            {
                "name": "Topological Sort",
                "slug": "topological-sort"
            }
        ],
        "companyNames": [
            "citadel",
            "meta",
            "tiktok",
            "microsoft",
            "oracle",
            "bloomberg",
            "apple",
            "adobe",
            "walmart_labs",
            "nvidia",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 13,
        "url": "https://leetcode.com/problems/course-schedule/description"
    },
    "209": {
        "difficulty": "MEDIUM",
        "id": 209,
        "questionFrontendId": "209",
        "title": "Minimum Size Subarray Sum",
        "titleSlug": "minimum-size-subarray-sum",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Binary Search",
                "slug": "binary-search"
            },
            {
                "name": "Sliding Window",
                "slug": "sliding-window"
            },
            {
                "name": "Prefix Sum",
                "slug": "prefix-sum"
            }
        ],
        "companyNames": [
            "citadel",
            "meta",
            "tiktok",
            "microsoft",
            "oracle",
            "goldman_sachs",
            "bloomberg",
            "apple",
            "adobe",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 12,
        "url": "https://leetcode.com/problems/minimum-size-subarray-sum/description"
    },
    "224": {
        "difficulty": "HARD",
        "id": 224,
        "questionFrontendId": "224",
        "title": "Basic Calculator",
        "titleSlug": "basic-calculator",
        "topicTags": [
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Stack",
                "slug": "stack"
            },
            {
                "name": "Recursion",
                "slug": "recursion"
            }
        ],
        "companyNames": [
            "citadel",
            "meta",
            "tiktok",
            "microsoft",
            "oracle",
            "bloomberg",
            "apple",
            "doordash",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 11,
        "url": "https://leetcode.com/problems/basic-calculator/description"
    },
    "269": {
        "difficulty": "HARD",
        "id": 269,
        "questionFrontendId": "269",
        "title": "Alien Dictionary",
        "titleSlug": "alien-dictionary",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Breadth-First Search",
                "slug": "breadth-first-search"
            },
            {
                "name": "Graph",
                "slug": "graph"
            },
            {
                "name": "Topological Sort",
                "slug": "topological-sort"
            }
        ],
        "companyNames": [
            "citadel",
            "meta",
            "tiktok",
            "microsoft",
            "oracle",
            "bloomberg",
            "airbnb",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 10,
        "url": "https://leetcode.com/problems/alien-dictionary/description"
    },
    "279": {
        "difficulty": "MEDIUM",
        "id": 279,
        "questionFrontendId": "279",
        "title": "Perfect Squares",
        "titleSlug": "perfect-squares",
        "topicTags": [
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Breadth-First Search",
                "slug": "breadth-first-search"
            }
        ],
        "companyNames": [
            "citadel",
            "meta",
            "microsoft",
            "bloomberg",
            "apple",
            "adobe",
            "walmart_labs",
            "accenture",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 11,
        "url": "https://leetcode.com/problems/perfect-squares/description"
    },
    "486": {
        "difficulty": "MEDIUM",
        "id": 486,
        "questionFrontendId": "486",
        "title": "Predict the Winner",
        "titleSlug": "predict-the-winner",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Recursion",
                "slug": "recursion"
            },
            {
                "name": "Game Theory",
                "slug": "game-theory"
            }
        ],
        "companyNames": [
            "citadel",
            "meta",
            "tiktok",
            "microsoft",
            "bloomberg",
            "apple",
            "adobe",
            "cisco",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 11,
        "url": "https://leetcode.com/problems/predict-the-winner/description"
    },
    "490": {
        "difficulty": "MEDIUM",
        "id": 490,
        "questionFrontendId": "490",
        "title": "The Maze",
        "titleSlug": "the-maze",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Breadth-First Search",
                "slug": "breadth-first-search"
            },
            {
                "name": "Matrix",
                "slug": "matrix"
            }
        ],
        "companyNames": [
            "citadel",
            "meta",
            "tiktok",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 6,
        "url": "https://leetcode.com/problems/the-maze/description"
    },
    "582": {
        "difficulty": "MEDIUM",
        "id": 582,
        "questionFrontendId": "582",
        "title": "Kill Process",
        "titleSlug": "kill-process",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Tree",
                "slug": "tree"
            },
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Breadth-First Search",
                "slug": "breadth-first-search"
            }
        ],
        "companyNames": [
            "citadel",
            "bloomberg",
            "amazon"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/kill-process/description"
    },
    "679": {
        "difficulty": "HARD",
        "id": 679,
        "questionFrontendId": "679",
        "title": "24 Game",
        "titleSlug": "24-game",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Backtracking",
                "slug": "backtracking"
            }
        ],
        "companyNames": [
            "citadel",
            "apple",
            "google",
            "amazon"
        ],
        "frequencyCount": 4,
        "url": "https://leetcode.com/problems/24-game/description"
    },
    "688": {
        "difficulty": "MEDIUM",
        "id": 688,
        "questionFrontendId": "688",
        "title": "Knight Probability in Chessboard",
        "titleSlug": "knight-probability-in-chessboard",
        "topicTags": [
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            }
        ],
        "companyNames": [
            "citadel",
            "goldman_sachs",
            "google",
            "amazon"
        ],
        "frequencyCount": 4,
        "url": "https://leetcode.com/problems/knight-probability-in-chessboard/description"
    },
    "735": {
        "difficulty": "MEDIUM",
        "id": 735,
        "questionFrontendId": "735",
        "title": "Asteroid Collision",
        "titleSlug": "asteroid-collision",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Stack",
                "slug": "stack"
            },
            {
                "name": "Simulation",
                "slug": "simulation"
            }
        ],
        "companyNames": [
            "citadel",
            "meta",
            "tiktok",
            "microsoft",
            "oracle",
            "goldman_sachs",
            "bloomberg",
            "apple",
            "adobe",
            "walmart_labs",
            "doordash",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 14,
        "url": "https://leetcode.com/problems/asteroid-collision/description"
    },
    "798": {
        "difficulty": "HARD",
        "id": 798,
        "questionFrontendId": "782",
        "title": "Transform to Chessboard",
        "titleSlug": "transform-to-chessboard",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Bit Manipulation",
                "slug": "bit-manipulation"
            },
            {
                "name": "Matrix",
                "slug": "matrix"
            }
        ],
        "companyNames": [
            "citadel",
            "google"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/transform-to-chessboard/description"
    },
    "833": {
        "difficulty": "HARD",
        "id": 833,
        "questionFrontendId": "815",
        "title": "Bus Routes",
        "titleSlug": "bus-routes",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Breadth-First Search",
                "slug": "breadth-first-search"
            }
        ],
        "companyNames": [
            "citadel",
            "meta",
            "tiktok",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 6,
        "url": "https://leetcode.com/problems/bus-routes/description"
    },
    "898": {
        "difficulty": "EASY",
        "id": 898,
        "questionFrontendId": "867",
        "title": "Transpose Matrix",
        "titleSlug": "transpose-matrix",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Matrix",
                "slug": "matrix"
            },
            {
                "name": "Simulation",
                "slug": "simulation"
            }
        ],
        "companyNames": [
            "citadel",
            "meta",
            "microsoft",
            "bloomberg",
            "apple",
            "adobe",
            "tcs",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 10,
        "url": "https://leetcode.com/problems/transpose-matrix/description"
    },
    "923": {
        "difficulty": "HARD",
        "id": 923,
        "questionFrontendId": "887",
        "title": "Super Egg Drop",
        "titleSlug": "super-egg-drop",
        "topicTags": [
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Binary Search",
                "slug": "binary-search"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            }
        ],
        "companyNames": [
            "citadel",
            "meta",
            "microsoft",
            "goldman_sachs",
            "apple",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 8,
        "url": "https://leetcode.com/problems/super-egg-drop/description"
    },
    "1250": {
        "difficulty": "MEDIUM",
        "id": 1250,
        "questionFrontendId": "1143",
        "title": "Longest Common Subsequence",
        "titleSlug": "longest-common-subsequence",
        "topicTags": [
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            }
        ],
        "companyNames": [
            "citadel",
            "meta",
            "tiktok",
            "microsoft",
            "oracle",
            "goldman_sachs",
            "bloomberg",
            "apple",
            "adobe",
            "walmart_labs",
            "tcs",
            "doordash",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 15,
        "url": "https://leetcode.com/problems/longest-common-subsequence/description"
    },
    "1397": {
        "difficulty": "MEDIUM",
        "id": 1397,
        "questionFrontendId": "1268",
        "title": "Search Suggestions System",
        "titleSlug": "search-suggestions-system",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Binary Search",
                "slug": "binary-search"
            },
            {
                "name": "Trie",
                "slug": "trie"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            },
            {
                "name": "Heap (Priority Queue)",
                "slug": "heap-priority-queue"
            }
        ],
        "companyNames": [
            "citadel",
            "tiktok",
            "microsoft",
            "oracle",
            "apple",
            "adobe",
            "doordash",
            "google",
            "amazon"
        ],
        "frequencyCount": 9,
        "url": "https://leetcode.com/problems/search-suggestions-system/description"
    },
    "2479": {
        "difficulty": "HARD",
        "id": 2479,
        "questionFrontendId": "2402",
        "title": "Meeting Rooms III",
        "titleSlug": "meeting-rooms-iii",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            },
            {
                "name": "Heap (Priority Queue)",
                "slug": "heap-priority-queue"
            },
            {
                "name": "Simulation",
                "slug": "simulation"
            }
        ],
        "companyNames": [
            "citadel",
            "meta",
            "tiktok",
            "bloomberg",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 7,
        "url": "https://leetcode.com/problems/meeting-rooms-iii/description"
    },
    "3225": {
        "difficulty": "MEDIUM",
        "id": 3225,
        "questionFrontendId": "2958",
        "title": "Length of Longest Subarray With at Most K Frequency",
        "titleSlug": "length-of-longest-subarray-with-at-most-k-frequency",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Sliding Window",
                "slug": "sliding-window"
            }
        ],
        "companyNames": [
            "citadel",
            "meta",
            "tiktok",
            "apple",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 7,
        "url": "https://leetcode.com/problems/length-of-longest-subarray-with-at-most-k-frequency/description"
    },
    "716": {
        "difficulty": "HARD",
        "id": 716,
        "questionFrontendId": "716",
        "title": "Max Stack",
        "titleSlug": "max-stack",
        "topicTags": [
            {
                "name": "Linked List",
                "slug": "linked-list"
            },
            {
                "name": "Stack",
                "slug": "stack"
            },
            {
                "name": "Design",
                "slug": "design"
            },
            {
                "name": "Doubly-Linked List",
                "slug": "doubly-linked-list"
            },
            {
                "name": "Ordered Set",
                "slug": "ordered-set"
            }
        ],
        "companyNames": [
            "linkedin",
            "bloomberg",
            "apple",
            "walmart_labs",
            "google",
            "amazon"
        ],
        "frequencyCount": 6,
        "url": "https://leetcode.com/problems/max-stack/description"
    },
    "364": {
        "difficulty": "MEDIUM",
        "id": 364,
        "questionFrontendId": "364",
        "title": "Nested List Weight Sum II",
        "titleSlug": "nested-list-weight-sum-ii",
        "topicTags": [
            {
                "name": "Stack",
                "slug": "stack"
            },
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Breadth-First Search",
                "slug": "breadth-first-search"
            }
        ],
        "companyNames": [
            "linkedin",
            "amazon"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/nested-list-weight-sum-ii/description"
    },
    "432": {
        "difficulty": "HARD",
        "id": 432,
        "questionFrontendId": "432",
        "title": "All O`one Data Structure",
        "titleSlug": "all-oone-data-structure",
        "topicTags": [
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Linked List",
                "slug": "linked-list"
            },
            {
                "name": "Design",
                "slug": "design"
            },
            {
                "name": "Doubly-Linked List",
                "slug": "doubly-linked-list"
            }
        ],
        "companyNames": [
            "linkedin",
            "meta",
            "microsoft",
            "bloomberg",
            "airbnb",
            "amazon",
            "uber"
        ],
        "frequencyCount": 7,
        "url": "https://leetcode.com/problems/all-oone-data-structure/description"
    },
    "339": {
        "difficulty": "MEDIUM",
        "id": 339,
        "questionFrontendId": "339",
        "title": "Nested List Weight Sum",
        "titleSlug": "nested-list-weight-sum",
        "topicTags": [
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Breadth-First Search",
                "slug": "breadth-first-search"
            }
        ],
        "companyNames": [
            "linkedin",
            "apple",
            "amazon"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/nested-list-weight-sum/description"
    },
    "1905": {
        "difficulty": "MEDIUM",
        "id": 1905,
        "questionFrontendId": "1797",
        "title": "Design Authentication Manager",
        "titleSlug": "design-authentication-manager",
        "topicTags": [
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Linked List",
                "slug": "linked-list"
            },
            {
                "name": "Design",
                "slug": "design"
            },
            {
                "name": "Doubly-Linked List",
                "slug": "doubly-linked-list"
            }
        ],
        "companyNames": [
            "linkedin",
            "oracle"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/design-authentication-manager/description"
    },
    "33": {
        "difficulty": "MEDIUM",
        "id": 33,
        "questionFrontendId": "33",
        "title": "Search in Rotated Sorted Array",
        "titleSlug": "search-in-rotated-sorted-array",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Binary Search",
                "slug": "binary-search"
            }
        ],
        "companyNames": [
            "linkedin",
            "meta",
            "tiktok",
            "microsoft",
            "oracle",
            "goldman_sachs",
            "bloomberg",
            "apple",
            "adobe",
            "walmart_labs",
            "nvidia",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 14,
        "url": "https://leetcode.com/problems/search-in-rotated-sorted-array/description"
    },
    "53": {
        "difficulty": "MEDIUM",
        "id": 53,
        "questionFrontendId": "53",
        "title": "Maximum Subarray",
        "titleSlug": "maximum-subarray",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Divide and Conquer",
                "slug": "divide-and-conquer"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            }
        ],
        "companyNames": [
            "linkedin",
            "meta",
            "tiktok",
            "microsoft",
            "oracle",
            "goldman_sachs",
            "bloomberg",
            "apple",
            "adobe",
            "walmart_labs",
            "nvidia",
            "tcs",
            "accenture",
            "cisco",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 17,
        "url": "https://leetcode.com/problems/maximum-subarray/description"
    },
    "56": {
        "difficulty": "MEDIUM",
        "id": 56,
        "questionFrontendId": "56",
        "title": "Merge Intervals",
        "titleSlug": "merge-intervals",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ],
        "companyNames": [
            "linkedin",
            "meta",
            "tiktok",
            "microsoft",
            "oracle",
            "goldman_sachs",
            "bloomberg",
            "apple",
            "adobe",
            "walmart_labs",
            "nvidia",
            "airbnb",
            "accenture",
            "doordash",
            "cisco",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 18,
        "url": "https://leetcode.com/problems/merge-intervals/description"
    },
    "205": {
        "difficulty": "EASY",
        "id": 205,
        "questionFrontendId": "205",
        "title": "Isomorphic Strings",
        "titleSlug": "isomorphic-strings",
        "topicTags": [
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "String",
                "slug": "string"
            }
        ],
        "companyNames": [
            "linkedin",
            "meta",
            "tiktok",
            "microsoft",
            "oracle",
            "goldman_sachs",
            "bloomberg",
            "apple",
            "adobe",
            "tcs",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 13,
        "url": "https://leetcode.com/problems/isomorphic-strings/description"
    },
    "244": {
        "difficulty": "MEDIUM",
        "id": 244,
        "questionFrontendId": "244",
        "title": "Shortest Word Distance II",
        "titleSlug": "shortest-word-distance-ii",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Two Pointers",
                "slug": "two-pointers"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Design",
                "slug": "design"
            }
        ],
        "companyNames": [
            "linkedin"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/shortest-word-distance-ii/description"
    },
    "152": {
        "difficulty": "MEDIUM",
        "id": 152,
        "questionFrontendId": "152",
        "title": "Maximum Product Subarray",
        "titleSlug": "maximum-product-subarray",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            }
        ],
        "companyNames": [
            "linkedin",
            "meta",
            "tiktok",
            "microsoft",
            "oracle",
            "goldman_sachs",
            "bloomberg",
            "apple",
            "adobe",
            "tcs",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 13,
        "url": "https://leetcode.com/problems/maximum-product-subarray/description"
    },
    "277": {
        "difficulty": "MEDIUM",
        "id": 277,
        "questionFrontendId": "277",
        "title": "Find the Celebrity",
        "titleSlug": "find-the-celebrity",
        "topicTags": [
            {
                "name": "Two Pointers",
                "slug": "two-pointers"
            },
            {
                "name": "Graph",
                "slug": "graph"
            },
            {
                "name": "Interactive",
                "slug": "interactive"
            }
        ],
        "companyNames": [
            "linkedin",
            "microsoft",
            "apple",
            "doordash",
            "google",
            "amazon"
        ],
        "frequencyCount": 6,
        "url": "https://leetcode.com/problems/find-the-celebrity/description"
    },
    "366": {
        "difficulty": "MEDIUM",
        "id": 366,
        "questionFrontendId": "366",
        "title": "Find Leaves of Binary Tree",
        "titleSlug": "find-leaves-of-binary-tree",
        "topicTags": [
            {
                "name": "Tree",
                "slug": "tree"
            },
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Binary Tree",
                "slug": "binary-tree"
            }
        ],
        "companyNames": [
            "linkedin",
            "adobe",
            "google",
            "amazon"
        ],
        "frequencyCount": 4,
        "url": "https://leetcode.com/problems/find-leaves-of-binary-tree/description"
    },
    "1186": {
        "difficulty": "MEDIUM",
        "id": 1186,
        "questionFrontendId": "1117",
        "title": "Building H2O",
        "titleSlug": "building-h2o",
        "topicTags": [
            {
                "name": "Concurrency",
                "slug": "concurrency"
            }
        ],
        "companyNames": [
            "linkedin",
            "google",
            "amazon"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/building-h2o/description"
    },
    "243": {
        "difficulty": "EASY",
        "id": 243,
        "questionFrontendId": "243",
        "title": "Shortest Word Distance",
        "titleSlug": "shortest-word-distance",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "String",
                "slug": "string"
            }
        ],
        "companyNames": [
            "linkedin",
            "apple",
            "amazon"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/shortest-word-distance/description"
    },
    "254": {
        "difficulty": "MEDIUM",
        "id": 254,
        "questionFrontendId": "254",
        "title": "Factor Combinations",
        "titleSlug": "factor-combinations",
        "topicTags": [
            {
                "name": "Backtracking",
                "slug": "backtracking"
            }
        ],
        "companyNames": [
            "linkedin",
            "meta",
            "tiktok",
            "bloomberg",
            "uber"
        ],
        "frequencyCount": 5,
        "url": "https://leetcode.com/problems/factor-combinations/description"
    },
    "605": {
        "difficulty": "EASY",
        "id": 605,
        "questionFrontendId": "605",
        "title": "Can Place Flowers",
        "titleSlug": "can-place-flowers",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            }
        ],
        "companyNames": [
            "linkedin",
            "meta",
            "microsoft",
            "bloomberg",
            "apple",
            "adobe",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 9,
        "url": "https://leetcode.com/problems/can-place-flowers/description"
    },
    "104": {
        "difficulty": "EASY",
        "id": 104,
        "questionFrontendId": "104",
        "title": "Maximum Depth of Binary Tree",
        "titleSlug": "maximum-depth-of-binary-tree",
        "topicTags": [
            {
                "name": "Tree",
                "slug": "tree"
            },
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Breadth-First Search",
                "slug": "breadth-first-search"
            },
            {
                "name": "Binary Tree",
                "slug": "binary-tree"
            }
        ],
        "companyNames": [
            "linkedin",
            "meta",
            "tiktok",
            "microsoft",
            "oracle",
            "bloomberg",
            "apple",
            "adobe",
            "accenture",
            "cisco",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 13,
        "url": "https://leetcode.com/problems/maximum-depth-of-binary-tree/description"
    },
    "215": {
        "difficulty": "MEDIUM",
        "id": 215,
        "questionFrontendId": "215",
        "title": "Kth Largest Element in an Array",
        "titleSlug": "kth-largest-element-in-an-array",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Divide and Conquer",
                "slug": "divide-and-conquer"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            },
            {
                "name": "Heap (Priority Queue)",
                "slug": "heap-priority-queue"
            },
            {
                "name": "Quickselect",
                "slug": "quickselect"
            }
        ],
        "companyNames": [
            "linkedin",
            "meta",
            "tiktok",
            "microsoft",
            "oracle",
            "goldman_sachs",
            "bloomberg",
            "apple",
            "adobe",
            "walmart_labs",
            "nvidia",
            "tcs",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 15,
        "url": "https://leetcode.com/problems/kth-largest-element-in-an-array/description"
    },
    "236": {
        "difficulty": "MEDIUM",
        "id": 236,
        "questionFrontendId": "236",
        "title": "Lowest Common Ancestor of a Binary Tree",
        "titleSlug": "lowest-common-ancestor-of-a-binary-tree",
        "topicTags": [
            {
                "name": "Tree",
                "slug": "tree"
            },
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Binary Tree",
                "slug": "binary-tree"
            }
        ],
        "companyNames": [
            "linkedin",
            "tiktok",
            "microsoft",
            "oracle",
            "bloomberg",
            "apple",
            "adobe",
            "walmart_labs",
            "google",
            "amazon"
        ],
        "frequencyCount": 10,
        "url": "https://leetcode.com/problems/lowest-common-ancestor-of-a-binary-tree/description"
    },
    "256": {
        "difficulty": "MEDIUM",
        "id": 256,
        "questionFrontendId": "256",
        "title": "Paint House",
        "titleSlug": "paint-house",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            }
        ],
        "companyNames": [
            "linkedin",
            "meta",
            "google",
            "uber"
        ],
        "frequencyCount": 4,
        "url": "https://leetcode.com/problems/paint-house/description"
    },
    "367": {
        "difficulty": "EASY",
        "id": 367,
        "questionFrontendId": "367",
        "title": "Valid Perfect Square",
        "titleSlug": "valid-perfect-square",
        "topicTags": [
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Binary Search",
                "slug": "binary-search"
            }
        ],
        "companyNames": [
            "linkedin",
            "microsoft",
            "bloomberg",
            "apple",
            "adobe",
            "google",
            "amazon"
        ],
        "frequencyCount": 7,
        "url": "https://leetcode.com/problems/valid-perfect-square/description"
    },
    "698": {
        "difficulty": "MEDIUM",
        "id": 698,
        "questionFrontendId": "698",
        "title": "Partition to K Equal Sum Subsets",
        "titleSlug": "partition-to-k-equal-sum-subsets",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Backtracking",
                "slug": "backtracking"
            },
            {
                "name": "Bit Manipulation",
                "slug": "bit-manipulation"
            },
            {
                "name": "Memoization",
                "slug": "memoization"
            },
            {
                "name": "Bitmask",
                "slug": "bitmask"
            }
        ],
        "companyNames": [
            "linkedin",
            "microsoft",
            "bloomberg",
            "apple",
            "adobe",
            "google",
            "amazon"
        ],
        "frequencyCount": 7,
        "url": "https://leetcode.com/problems/partition-to-k-equal-sum-subsets/description"
    },
    "65": {
        "difficulty": "HARD",
        "id": 65,
        "questionFrontendId": "65",
        "title": "Valid Number",
        "titleSlug": "valid-number",
        "topicTags": [
            {
                "name": "String",
                "slug": "string"
            }
        ],
        "companyNames": [
            "linkedin",
            "tiktok",
            "apple",
            "adobe",
            "google",
            "amazon"
        ],
        "frequencyCount": 6,
        "url": "https://leetcode.com/problems/valid-number/description"
    },
    "68": {
        "difficulty": "HARD",
        "id": 68,
        "questionFrontendId": "68",
        "title": "Text Justification",
        "titleSlug": "text-justification",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Simulation",
                "slug": "simulation"
            }
        ],
        "companyNames": [
            "linkedin",
            "meta",
            "tiktok",
            "microsoft",
            "oracle",
            "bloomberg",
            "apple",
            "adobe",
            "walmart_labs",
            "airbnb",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 13,
        "url": "https://leetcode.com/problems/text-justification/description"
    },
    "102": {
        "difficulty": "MEDIUM",
        "id": 102,
        "questionFrontendId": "102",
        "title": "Binary Tree Level Order Traversal",
        "titleSlug": "binary-tree-level-order-traversal",
        "topicTags": [
            {
                "name": "Tree",
                "slug": "tree"
            },
            {
                "name": "Breadth-First Search",
                "slug": "breadth-first-search"
            },
            {
                "name": "Binary Tree",
                "slug": "binary-tree"
            }
        ],
        "companyNames": [
            "linkedin",
            "meta",
            "tiktok",
            "microsoft",
            "oracle",
            "bloomberg",
            "apple",
            "adobe",
            "walmart_labs",
            "tcs",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 13,
        "url": "https://leetcode.com/problems/binary-tree-level-order-traversal/description"
    },
    "149": {
        "difficulty": "HARD",
        "id": 149,
        "questionFrontendId": "149",
        "title": "Max Points on a Line",
        "titleSlug": "max-points-on-a-line",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Geometry",
                "slug": "geometry"
            }
        ],
        "companyNames": [
            "linkedin",
            "meta",
            "microsoft",
            "oracle",
            "bloomberg",
            "apple",
            "adobe",
            "nvidia",
            "tcs",
            "cisco",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 13,
        "url": "https://leetcode.com/problems/max-points-on-a-line/description"
    },
    "156": {
        "difficulty": "MEDIUM",
        "id": 156,
        "questionFrontendId": "156",
        "title": "Binary Tree Upside Down",
        "titleSlug": "binary-tree-upside-down",
        "topicTags": [
            {
                "name": "Tree",
                "slug": "tree"
            },
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Binary Tree",
                "slug": "binary-tree"
            }
        ],
        "companyNames": [
            "linkedin"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/binary-tree-upside-down/description"
    },
    "912": {
        "difficulty": "MEDIUM",
        "id": 912,
        "questionFrontendId": "528",
        "title": "Random Pick with Weight",
        "titleSlug": "random-pick-with-weight",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Binary Search",
                "slug": "binary-search"
            },
            {
                "name": "Prefix Sum",
                "slug": "prefix-sum"
            },
            {
                "name": "Randomized",
                "slug": "randomized"
            }
        ],
        "companyNames": [
            "linkedin",
            "meta",
            "tiktok",
            "microsoft",
            "oracle",
            "apple",
            "adobe",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 10,
        "url": "https://leetcode.com/problems/random-pick-with-weight/description"
    },
    "50": {
        "difficulty": "MEDIUM",
        "id": 50,
        "questionFrontendId": "50",
        "title": "Pow(x, n)",
        "titleSlug": "powx-n",
        "topicTags": [
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Recursion",
                "slug": "recursion"
            }
        ],
        "companyNames": [
            "linkedin",
            "meta",
            "tiktok",
            "microsoft",
            "oracle",
            "goldman_sachs",
            "bloomberg",
            "apple",
            "adobe",
            "walmart_labs",
            "tcs",
            "accenture",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 15,
        "url": "https://leetcode.com/problems/powx-n/description"
    },
    "76": {
        "difficulty": "HARD",
        "id": 76,
        "questionFrontendId": "76",
        "title": "Minimum Window Substring",
        "titleSlug": "minimum-window-substring",
        "topicTags": [
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Sliding Window",
                "slug": "sliding-window"
            }
        ],
        "companyNames": [
            "linkedin",
            "meta",
            "tiktok",
            "microsoft",
            "oracle",
            "bloomberg",
            "apple",
            "adobe",
            "walmart_labs",
            "airbnb",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 13,
        "url": "https://leetcode.com/problems/minimum-window-substring/description"
    },
    "464": {
        "difficulty": "MEDIUM",
        "id": 464,
        "questionFrontendId": "464",
        "title": "Can I Win",
        "titleSlug": "can-i-win",
        "topicTags": [
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Bit Manipulation",
                "slug": "bit-manipulation"
            },
            {
                "name": "Memoization",
                "slug": "memoization"
            },
            {
                "name": "Game Theory",
                "slug": "game-theory"
            },
            {
                "name": "Bitmask",
                "slug": "bitmask"
            }
        ],
        "companyNames": [
            "linkedin",
            "meta",
            "bloomberg",
            "amazon",
            "uber"
        ],
        "frequencyCount": 5,
        "url": "https://leetcode.com/problems/can-i-win/description"
    },
    "1209": {
        "difficulty": "MEDIUM",
        "id": 1209,
        "questionFrontendId": "1188",
        "title": "Design Bounded Blocking Queue",
        "titleSlug": "design-bounded-blocking-queue",
        "topicTags": [
            {
                "name": "Concurrency",
                "slug": "concurrency"
            }
        ],
        "companyNames": [
            "linkedin"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/design-bounded-blocking-queue/description"
    },
    "101": {
        "difficulty": "EASY",
        "id": 101,
        "questionFrontendId": "101",
        "title": "Symmetric Tree",
        "titleSlug": "symmetric-tree",
        "topicTags": [
            {
                "name": "Tree",
                "slug": "tree"
            },
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Breadth-First Search",
                "slug": "breadth-first-search"
            },
            {
                "name": "Binary Tree",
                "slug": "binary-tree"
            }
        ],
        "companyNames": [
            "linkedin",
            "meta",
            "tiktok",
            "microsoft",
            "goldman_sachs",
            "bloomberg",
            "apple",
            "adobe",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 11,
        "url": "https://leetcode.com/problems/symmetric-tree/description"
    },
    "103": {
        "difficulty": "MEDIUM",
        "id": 103,
        "questionFrontendId": "103",
        "title": "Binary Tree Zigzag Level Order Traversal",
        "titleSlug": "binary-tree-zigzag-level-order-traversal",
        "topicTags": [
            {
                "name": "Tree",
                "slug": "tree"
            },
            {
                "name": "Breadth-First Search",
                "slug": "breadth-first-search"
            },
            {
                "name": "Binary Tree",
                "slug": "binary-tree"
            }
        ],
        "companyNames": [
            "linkedin",
            "meta",
            "tiktok",
            "microsoft",
            "oracle",
            "bloomberg",
            "apple",
            "adobe",
            "walmart_labs",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 12,
        "url": "https://leetcode.com/problems/binary-tree-zigzag-level-order-traversal/description"
    },
    "745": {
        "difficulty": "EASY",
        "id": 745,
        "questionFrontendId": "744",
        "title": "Find Smallest Letter Greater Than Target",
        "titleSlug": "find-smallest-letter-greater-than-target",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Binary Search",
                "slug": "binary-search"
            }
        ],
        "companyNames": [
            "linkedin",
            "microsoft",
            "bloomberg",
            "apple",
            "google",
            "amazon"
        ],
        "frequencyCount": 6,
        "url": "https://leetcode.com/problems/find-smallest-letter-greater-than-target/description"
    },
    "2357": {
        "difficulty": "HARD",
        "id": 2357,
        "questionFrontendId": "2276",
        "title": "Count Integers in Intervals",
        "titleSlug": "count-integers-in-intervals",
        "topicTags": [
            {
                "name": "Design",
                "slug": "design"
            },
            {
                "name": "Segment Tree",
                "slug": "segment-tree"
            },
            {
                "name": "Ordered Set",
                "slug": "ordered-set"
            }
        ],
        "companyNames": [
            "linkedin",
            "google"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/count-integers-in-intervals/description"
    },
    "1": {
        "difficulty": "EASY",
        "id": 1,
        "questionFrontendId": "1",
        "title": "Two Sum",
        "titleSlug": "two-sum",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            }
        ],
        "companyNames": [
            "linkedin",
            "meta",
            "tiktok",
            "microsoft",
            "oracle",
            "goldman_sachs",
            "bloomberg",
            "apple",
            "adobe",
            "walmart_labs",
            "nvidia",
            "airbnb",
            "tcs",
            "accenture",
            "doordash",
            "cisco",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 19,
        "url": "https://leetcode.com/problems/two-sum/description"
    },
    "21": {
        "difficulty": "EASY",
        "id": 21,
        "questionFrontendId": "21",
        "title": "Merge Two Sorted Lists",
        "titleSlug": "merge-two-sorted-lists",
        "topicTags": [
            {
                "name": "Linked List",
                "slug": "linked-list"
            },
            {
                "name": "Recursion",
                "slug": "recursion"
            }
        ],
        "companyNames": [
            "linkedin",
            "meta",
            "tiktok",
            "microsoft",
            "oracle",
            "goldman_sachs",
            "bloomberg",
            "apple",
            "adobe",
            "walmart_labs",
            "tcs",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 14,
        "url": "https://leetcode.com/problems/merge-two-sorted-lists/description"
    },
    "187": {
        "difficulty": "MEDIUM",
        "id": 187,
        "questionFrontendId": "187",
        "title": "Repeated DNA Sequences",
        "titleSlug": "repeated-dna-sequences",
        "topicTags": [
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Bit Manipulation",
                "slug": "bit-manipulation"
            },
            {
                "name": "Sliding Window",
                "slug": "sliding-window"
            },
            {
                "name": "Rolling Hash",
                "slug": "rolling-hash"
            },
            {
                "name": "Hash Function",
                "slug": "hash-function"
            }
        ],
        "companyNames": [
            "linkedin",
            "microsoft",
            "bloomberg",
            "apple",
            "adobe",
            "google",
            "amazon"
        ],
        "frequencyCount": 7,
        "url": "https://leetcode.com/problems/repeated-dna-sequences/description"
    },
    "311": {
        "difficulty": "MEDIUM",
        "id": 311,
        "questionFrontendId": "311",
        "title": "Sparse Matrix Multiplication",
        "titleSlug": "sparse-matrix-multiplication",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Matrix",
                "slug": "matrix"
            }
        ],
        "companyNames": [
            "linkedin",
            "bloomberg",
            "apple"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/sparse-matrix-multiplication/description"
    },
    "2150": {
        "difficulty": "HARD",
        "id": 2150,
        "questionFrontendId": "2040",
        "title": "Kth Smallest Product of Two Sorted Arrays",
        "titleSlug": "kth-smallest-product-of-two-sorted-arrays",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Binary Search",
                "slug": "binary-search"
            }
        ],
        "companyNames": [
            "linkedin"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/kth-smallest-product-of-two-sorted-arrays/description"
    },
    "2642": {
        "difficulty": "HARD",
        "id": 2642,
        "questionFrontendId": "2532",
        "title": "Time to Cross a Bridge",
        "titleSlug": "time-to-cross-a-bridge",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Heap (Priority Queue)",
                "slug": "heap-priority-queue"
            },
            {
                "name": "Simulation",
                "slug": "simulation"
            }
        ],
        "companyNames": [
            "linkedin"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/time-to-cross-a-bridge/description"
    },
    "57": {
        "difficulty": "MEDIUM",
        "id": 57,
        "questionFrontendId": "57",
        "title": "Insert Interval",
        "titleSlug": "insert-interval",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            }
        ],
        "companyNames": [
            "linkedin",
            "meta",
            "tiktok",
            "microsoft",
            "oracle",
            "bloomberg",
            "apple",
            "adobe",
            "nvidia",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 12,
        "url": "https://leetcode.com/problems/insert-interval/description"
    },
    "170": {
        "difficulty": "EASY",
        "id": 170,
        "questionFrontendId": "170",
        "title": "Two Sum III - Data structure design",
        "titleSlug": "two-sum-iii-data-structure-design",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Two Pointers",
                "slug": "two-pointers"
            },
            {
                "name": "Design",
                "slug": "design"
            },
            {
                "name": "Data Stream",
                "slug": "data-stream"
            }
        ],
        "companyNames": [
            "linkedin"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/two-sum-iii-data-structure-design/description"
    },
    "173": {
        "difficulty": "MEDIUM",
        "id": 173,
        "questionFrontendId": "173",
        "title": "Binary Search Tree Iterator",
        "titleSlug": "binary-search-tree-iterator",
        "topicTags": [
            {
                "name": "Stack",
                "slug": "stack"
            },
            {
                "name": "Tree",
                "slug": "tree"
            },
            {
                "name": "Design",
                "slug": "design"
            },
            {
                "name": "Binary Search Tree",
                "slug": "binary-search-tree"
            },
            {
                "name": "Binary Tree",
                "slug": "binary-tree"
            },
            {
                "name": "Iterator",
                "slug": "iterator"
            }
        ],
        "companyNames": [
            "linkedin",
            "meta",
            "microsoft",
            "bloomberg",
            "apple",
            "adobe",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 9,
        "url": "https://leetcode.com/problems/binary-search-tree-iterator/description"
    },
    "238": {
        "difficulty": "MEDIUM",
        "id": 238,
        "questionFrontendId": "238",
        "title": "Product of Array Except Self",
        "titleSlug": "product-of-array-except-self",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Prefix Sum",
                "slug": "prefix-sum"
            }
        ],
        "companyNames": [
            "linkedin",
            "meta",
            "tiktok",
            "microsoft",
            "oracle",
            "goldman_sachs",
            "bloomberg",
            "apple",
            "adobe",
            "walmart_labs",
            "tcs",
            "accenture",
            "cisco",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 16,
        "url": "https://leetcode.com/problems/product-of-array-except-self/description"
    },
    "245": {
        "difficulty": "MEDIUM",
        "id": 245,
        "questionFrontendId": "245",
        "title": "Shortest Word Distance III",
        "titleSlug": "shortest-word-distance-iii",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "String",
                "slug": "string"
            }
        ],
        "companyNames": [
            "linkedin"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/shortest-word-distance-iii/description"
    },
    "515": {
        "difficulty": "MEDIUM",
        "id": 515,
        "questionFrontendId": "515",
        "title": "Find Largest Value in Each Tree Row",
        "titleSlug": "find-largest-value-in-each-tree-row",
        "topicTags": [
            {
                "name": "Tree",
                "slug": "tree"
            },
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Breadth-First Search",
                "slug": "breadth-first-search"
            },
            {
                "name": "Binary Tree",
                "slug": "binary-tree"
            }
        ],
        "companyNames": [
            "linkedin",
            "meta",
            "microsoft",
            "bloomberg",
            "apple",
            "adobe",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 9,
        "url": "https://leetcode.com/problems/find-largest-value-in-each-tree-row/description"
    },
    "633": {
        "difficulty": "MEDIUM",
        "id": 633,
        "questionFrontendId": "633",
        "title": "Sum of Square Numbers",
        "titleSlug": "sum-of-square-numbers",
        "topicTags": [
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Two Pointers",
                "slug": "two-pointers"
            },
            {
                "name": "Binary Search",
                "slug": "binary-search"
            }
        ],
        "companyNames": [
            "linkedin",
            "microsoft",
            "bloomberg",
            "apple",
            "google",
            "amazon"
        ],
        "frequencyCount": 6,
        "url": "https://leetcode.com/problems/sum-of-square-numbers/description"
    },
    "671": {
        "difficulty": "EASY",
        "id": 671,
        "questionFrontendId": "671",
        "title": "Second Minimum Node In a Binary Tree",
        "titleSlug": "second-minimum-node-in-a-binary-tree",
        "topicTags": [
            {
                "name": "Tree",
                "slug": "tree"
            },
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Binary Tree",
                "slug": "binary-tree"
            }
        ],
        "companyNames": [
            "linkedin",
            "bloomberg",
            "apple",
            "amazon"
        ],
        "frequencyCount": 4,
        "url": "https://leetcode.com/problems/second-minimum-node-in-a-binary-tree/description"
    },
    "730": {
        "difficulty": "HARD",
        "id": 730,
        "questionFrontendId": "730",
        "title": "Count Different Palindromic Subsequences",
        "titleSlug": "count-different-palindromic-subsequences",
        "topicTags": [
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            }
        ],
        "companyNames": [
            "linkedin",
            "goldman_sachs",
            "apple",
            "amazon"
        ],
        "frequencyCount": 4,
        "url": "https://leetcode.com/problems/count-different-palindromic-subsequences/description"
    },
    "983": {
        "difficulty": "MEDIUM",
        "id": 983,
        "questionFrontendId": "946",
        "title": "Validate Stack Sequences",
        "titleSlug": "validate-stack-sequences",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Stack",
                "slug": "stack"
            },
            {
                "name": "Simulation",
                "slug": "simulation"
            }
        ],
        "companyNames": [
            "linkedin",
            "tiktok",
            "adobe",
            "google",
            "amazon"
        ],
        "frequencyCount": 5,
        "url": "https://leetcode.com/problems/validate-stack-sequences/description"
    },
    "1204": {
        "difficulty": "MEDIUM",
        "id": 1204,
        "questionFrontendId": "1107",
        "title": "New Users Daily Count",
        "titleSlug": "new-users-daily-count",
        "topicTags": [
            {
                "name": "Database",
                "slug": "database"
            }
        ],
        "companyNames": [
            "linkedin"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/new-users-daily-count/description"
    },
    "1226": {
        "difficulty": "HARD",
        "id": 1226,
        "questionFrontendId": "1127",
        "title": "User Purchase Platform",
        "titleSlug": "user-purchase-platform",
        "topicTags": [
            {
                "name": "Database",
                "slug": "database"
            }
        ],
        "companyNames": [
            "linkedin"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/user-purchase-platform/description"
    },
    "1258": {
        "difficulty": "EASY",
        "id": 1258,
        "questionFrontendId": "1148",
        "title": "Article Views I",
        "titleSlug": "article-views-i",
        "topicTags": [
            {
                "name": "Database",
                "slug": "database"
            }
        ],
        "companyNames": [
            "linkedin",
            "meta",
            "microsoft",
            "bloomberg",
            "apple",
            "adobe",
            "tcs",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 10,
        "url": "https://leetcode.com/problems/article-views-i/description"
    },
    "1259": {
        "difficulty": "MEDIUM",
        "id": 1259,
        "questionFrontendId": "1149",
        "title": "Article Views II",
        "titleSlug": "article-views-ii",
        "topicTags": [
            {
                "name": "Database",
                "slug": "database"
            }
        ],
        "companyNames": [
            "linkedin"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/article-views-ii/description"
    },
    "1445": {
        "difficulty": "MEDIUM",
        "id": 1445,
        "questionFrontendId": "1343",
        "title": "Number of Sub-arrays of Size K and Average Greater than or Equal to Threshold",
        "titleSlug": "number-of-sub-arrays-of-size-k-and-average-greater-than-or-equal-to-threshold",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Sliding Window",
                "slug": "sliding-window"
            }
        ],
        "companyNames": [
            "linkedin"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/number-of-sub-arrays-of-size-k-and-average-greater-than-or-equal-to-threshold/description"
    },
    "1693": {
        "difficulty": "EASY",
        "id": 1693,
        "questionFrontendId": "1588",
        "title": "Sum of All Odd Length Subarrays",
        "titleSlug": "sum-of-all-odd-length-subarrays",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Prefix Sum",
                "slug": "prefix-sum"
            }
        ],
        "companyNames": [
            "linkedin",
            "adobe",
            "google",
            "amazon"
        ],
        "frequencyCount": 4,
        "url": "https://leetcode.com/problems/sum-of-all-odd-length-subarrays/description"
    },
    "1780": {
        "difficulty": "MEDIUM",
        "id": 1780,
        "questionFrontendId": "1644",
        "title": "Lowest Common Ancestor of a Binary Tree II",
        "titleSlug": "lowest-common-ancestor-of-a-binary-tree-ii",
        "topicTags": [
            {
                "name": "Tree",
                "slug": "tree"
            },
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Binary Tree",
                "slug": "binary-tree"
            }
        ],
        "companyNames": [
            "linkedin",
            "microsoft"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/lowest-common-ancestor-of-a-binary-tree-ii/description"
    },
    "1790": {
        "difficulty": "MEDIUM",
        "id": 1790,
        "questionFrontendId": "1650",
        "title": "Lowest Common Ancestor of a Binary Tree III",
        "titleSlug": "lowest-common-ancestor-of-a-binary-tree-iii",
        "topicTags": [
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Two Pointers",
                "slug": "two-pointers"
            },
            {
                "name": "Tree",
                "slug": "tree"
            },
            {
                "name": "Binary Tree",
                "slug": "binary-tree"
            }
        ],
        "companyNames": [
            "linkedin",
            "microsoft",
            "amazon"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/lowest-common-ancestor-of-a-binary-tree-iii/description"
    },
    "2306": {
        "difficulty": "MEDIUM",
        "id": 2306,
        "questionFrontendId": "2196",
        "title": "Create Binary Tree From Descriptions",
        "titleSlug": "create-binary-tree-from-descriptions",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Tree",
                "slug": "tree"
            },
            {
                "name": "Binary Tree",
                "slug": "binary-tree"
            }
        ],
        "companyNames": [
            "linkedin",
            "meta",
            "microsoft",
            "bloomberg",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 7,
        "url": "https://leetcode.com/problems/create-binary-tree-from-descriptions/description"
    },
    "2423": {
        "difficulty": "HARD",
        "id": 2423,
        "questionFrontendId": "2344",
        "title": "Minimum Deletions to Make Array Divisible",
        "titleSlug": "minimum-deletions-to-make-array-divisible",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            },
            {
                "name": "Heap (Priority Queue)",
                "slug": "heap-priority-queue"
            },
            {
                "name": "Number Theory",
                "slug": "number-theory"
            }
        ],
        "companyNames": [
            "linkedin"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/minimum-deletions-to-make-array-divisible/description"
    },
    "2559": {
        "difficulty": "HARD",
        "id": 2559,
        "questionFrontendId": "2472",
        "title": "Maximum Number of Non-overlapping Palindrome Substrings",
        "titleSlug": "maximum-number-of-non-overlapping-palindrome-substrings",
        "topicTags": [
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            }
        ],
        "companyNames": [
            "linkedin",
            "oracle",
            "walmart_labs",
            "google"
        ],
        "frequencyCount": 4,
        "url": "https://leetcode.com/problems/maximum-number-of-non-overlapping-palindrome-substrings/description"
    },
    "2570": {
        "difficulty": "MEDIUM",
        "id": 2570,
        "questionFrontendId": "2431",
        "title": "Maximize Total Tastiness of Purchased Fruits",
        "titleSlug": "maximize-total-tastiness-of-purchased-fruits",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            }
        ],
        "companyNames": [
            "linkedin"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/maximize-total-tastiness-of-purchased-fruits/description"
    },
    "724": {
        "difficulty": "EASY",
        "id": 724,
        "questionFrontendId": "724",
        "title": "Find Pivot Index",
        "titleSlug": "find-pivot-index",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Prefix Sum",
                "slug": "prefix-sum"
            }
        ],
        "companyNames": [
            "linkedin",
            "meta",
            "tiktok",
            "microsoft",
            "bloomberg",
            "apple",
            "adobe",
            "nvidia",
            "tcs",
            "accenture",
            "amazon",
            "uber"
        ],
        "frequencyCount": 12,
        "url": "https://leetcode.com/problems/find-pivot-index/description"
    },
    "235": {
        "difficulty": "MEDIUM",
        "id": 235,
        "questionFrontendId": "235",
        "title": "Lowest Common Ancestor of a Binary Search Tree",
        "titleSlug": "lowest-common-ancestor-of-a-binary-search-tree",
        "topicTags": [
            {
                "name": "Tree",
                "slug": "tree"
            },
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Binary Search Tree",
                "slug": "binary-search-tree"
            },
            {
                "name": "Binary Tree",
                "slug": "binary-tree"
            }
        ],
        "companyNames": [
            "linkedin",
            "meta",
            "microsoft",
            "oracle",
            "bloomberg",
            "apple",
            "adobe",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 10,
        "url": "https://leetcode.com/problems/lowest-common-ancestor-of-a-binary-search-tree/description"
    },
    "1119": {
        "difficulty": "MEDIUM",
        "id": 1119,
        "questionFrontendId": "1041",
        "title": "Robot Bounded In Circle",
        "titleSlug": "robot-bounded-in-circle",
        "topicTags": [
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Simulation",
                "slug": "simulation"
            }
        ],
        "companyNames": [
            "linkedin",
            "goldman_sachs",
            "bloomberg",
            "adobe",
            "nvidia",
            "airbnb",
            "amazon"
        ],
        "frequencyCount": 7,
        "url": "https://leetcode.com/problems/robot-bounded-in-circle/description"
    },
    "272": {
        "difficulty": "HARD",
        "id": 272,
        "questionFrontendId": "272",
        "title": "Closest Binary Search Tree Value II",
        "titleSlug": "closest-binary-search-tree-value-ii",
        "topicTags": [
            {
                "name": "Two Pointers",
                "slug": "two-pointers"
            },
            {
                "name": "Stack",
                "slug": "stack"
            },
            {
                "name": "Tree",
                "slug": "tree"
            },
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Binary Search Tree",
                "slug": "binary-search-tree"
            },
            {
                "name": "Heap (Priority Queue)",
                "slug": "heap-priority-queue"
            },
            {
                "name": "Binary Tree",
                "slug": "binary-tree"
            }
        ],
        "companyNames": [
            "linkedin",
            "google",
            "amazon"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/closest-binary-search-tree-value-ii/description"
    },
    "261": {
        "difficulty": "MEDIUM",
        "id": 261,
        "questionFrontendId": "261",
        "title": "Graph Valid Tree",
        "titleSlug": "graph-valid-tree",
        "topicTags": [
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Breadth-First Search",
                "slug": "breadth-first-search"
            },
            {
                "name": "Union Find",
                "slug": "union-find"
            },
            {
                "name": "Graph",
                "slug": "graph"
            }
        ],
        "companyNames": [
            "linkedin",
            "tiktok",
            "microsoft",
            "bloomberg",
            "google",
            "amazon"
        ],
        "frequencyCount": 6,
        "url": "https://leetcode.com/problems/graph-valid-tree/description"
    },
    "636": {
        "difficulty": "MEDIUM",
        "id": 636,
        "questionFrontendId": "636",
        "title": "Exclusive Time of Functions",
        "titleSlug": "exclusive-time-of-functions",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Stack",
                "slug": "stack"
            }
        ],
        "companyNames": [
            "linkedin",
            "meta",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 5,
        "url": "https://leetcode.com/problems/exclusive-time-of-functions/description"
    },
    "1127": {
        "difficulty": "EASY",
        "id": 1127,
        "questionFrontendId": "1046",
        "title": "Last Stone Weight",
        "titleSlug": "last-stone-weight",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Heap (Priority Queue)",
                "slug": "heap-priority-queue"
            }
        ],
        "companyNames": [
            "linkedin",
            "meta",
            "oracle",
            "apple",
            "adobe",
            "nvidia",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 9,
        "url": "https://leetcode.com/problems/last-stone-weight/description"
    },
    "17": {
        "difficulty": "MEDIUM",
        "id": 17,
        "questionFrontendId": "17",
        "title": "Letter Combinations of a Phone Number",
        "titleSlug": "letter-combinations-of-a-phone-number",
        "topicTags": [
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Backtracking",
                "slug": "backtracking"
            }
        ],
        "companyNames": [
            "linkedin",
            "meta",
            "microsoft",
            "oracle",
            "goldman_sachs",
            "bloomberg",
            "apple",
            "adobe",
            "tcs",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 12,
        "url": "https://leetcode.com/problems/letter-combinations-of-a-phone-number/description"
    },
    "516": {
        "difficulty": "MEDIUM",
        "id": 516,
        "questionFrontendId": "516",
        "title": "Longest Palindromic Subsequence",
        "titleSlug": "longest-palindromic-subsequence",
        "topicTags": [
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            }
        ],
        "companyNames": [
            "linkedin",
            "meta",
            "microsoft",
            "goldman_sachs",
            "bloomberg",
            "apple",
            "adobe",
            "accenture",
            "cisco",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 12,
        "url": "https://leetcode.com/problems/longest-palindromic-subsequence/description"
    },
    "3": {
        "difficulty": "MEDIUM",
        "id": 3,
        "questionFrontendId": "3",
        "title": "Longest Substring Without Repeating Characters",
        "titleSlug": "longest-substring-without-repeating-characters",
        "topicTags": [
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Sliding Window",
                "slug": "sliding-window"
            }
        ],
        "companyNames": [
            "linkedin",
            "meta",
            "tiktok",
            "microsoft",
            "oracle",
            "goldman_sachs",
            "bloomberg",
            "apple",
            "adobe",
            "walmart_labs",
            "nvidia",
            "tcs",
            "accenture",
            "cisco",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 17,
        "url": "https://leetcode.com/problems/longest-substring-without-repeating-characters/description"
    },
    "5": {
        "difficulty": "MEDIUM",
        "id": 5,
        "questionFrontendId": "5",
        "title": "Longest Palindromic Substring",
        "titleSlug": "longest-palindromic-substring",
        "topicTags": [
            {
                "name": "Two Pointers",
                "slug": "two-pointers"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            }
        ],
        "companyNames": [
            "linkedin",
            "meta",
            "tiktok",
            "microsoft",
            "oracle",
            "goldman_sachs",
            "bloomberg",
            "apple",
            "adobe",
            "walmart_labs",
            "tcs",
            "accenture",
            "cisco",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 16,
        "url": "https://leetcode.com/problems/longest-palindromic-substring/description"
    },
    "61": {
        "difficulty": "MEDIUM",
        "id": 61,
        "questionFrontendId": "61",
        "title": "Rotate List",
        "titleSlug": "rotate-list",
        "topicTags": [
            {
                "name": "Linked List",
                "slug": "linked-list"
            },
            {
                "name": "Two Pointers",
                "slug": "two-pointers"
            }
        ],
        "companyNames": [
            "linkedin",
            "microsoft",
            "oracle",
            "bloomberg",
            "apple",
            "adobe",
            "tcs",
            "google",
            "amazon"
        ],
        "frequencyCount": 9,
        "url": "https://leetcode.com/problems/rotate-list/description"
    },
    "88": {
        "difficulty": "EASY",
        "id": 88,
        "questionFrontendId": "88",
        "title": "Merge Sorted Array",
        "titleSlug": "merge-sorted-array",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Two Pointers",
                "slug": "two-pointers"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ],
        "companyNames": [
            "linkedin",
            "meta",
            "tiktok",
            "microsoft",
            "oracle",
            "goldman_sachs",
            "bloomberg",
            "apple",
            "adobe",
            "walmart_labs",
            "nvidia",
            "tcs",
            "accenture",
            "cisco",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 17,
        "url": "https://leetcode.com/problems/merge-sorted-array/description"
    },
    "341": {
        "difficulty": "MEDIUM",
        "id": 341,
        "questionFrontendId": "341",
        "title": "Flatten Nested List Iterator",
        "titleSlug": "flatten-nested-list-iterator",
        "topicTags": [
            {
                "name": "Stack",
                "slug": "stack"
            },
            {
                "name": "Tree",
                "slug": "tree"
            },
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Design",
                "slug": "design"
            },
            {
                "name": "Queue",
                "slug": "queue"
            },
            {
                "name": "Iterator",
                "slug": "iterator"
            }
        ],
        "companyNames": [
            "linkedin",
            "microsoft",
            "bloomberg",
            "apple",
            "walmart_labs",
            "airbnb",
            "google",
            "amazon"
        ],
        "frequencyCount": 8,
        "url": "https://leetcode.com/problems/flatten-nested-list-iterator/description"
    },
    "349": {
        "difficulty": "EASY",
        "id": 349,
        "questionFrontendId": "349",
        "title": "Intersection of Two Arrays",
        "titleSlug": "intersection-of-two-arrays",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Two Pointers",
                "slug": "two-pointers"
            },
            {
                "name": "Binary Search",
                "slug": "binary-search"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ],
        "companyNames": [
            "linkedin",
            "meta",
            "microsoft",
            "bloomberg",
            "apple",
            "adobe",
            "nvidia",
            "tcs",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 11,
        "url": "https://leetcode.com/problems/intersection-of-two-arrays/description"
    },
    "373": {
        "difficulty": "MEDIUM",
        "id": 373,
        "questionFrontendId": "373",
        "title": "Find K Pairs with Smallest Sums",
        "titleSlug": "find-k-pairs-with-smallest-sums",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Heap (Priority Queue)",
                "slug": "heap-priority-queue"
            }
        ],
        "companyNames": [
            "linkedin",
            "meta",
            "microsoft",
            "oracle",
            "adobe",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 8,
        "url": "https://leetcode.com/problems/find-k-pairs-with-smallest-sums/description"
    },
    "412": {
        "difficulty": "EASY",
        "id": 412,
        "questionFrontendId": "412",
        "title": "Fizz Buzz",
        "titleSlug": "fizz-buzz",
        "topicTags": [
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Simulation",
                "slug": "simulation"
            }
        ],
        "companyNames": [
            "linkedin",
            "meta",
            "microsoft",
            "oracle",
            "goldman_sachs",
            "bloomberg",
            "apple",
            "adobe",
            "tcs",
            "cisco",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 13,
        "url": "https://leetcode.com/problems/fizz-buzz/description"
    },
    "611": {
        "difficulty": "MEDIUM",
        "id": 611,
        "questionFrontendId": "611",
        "title": "Valid Triangle Number",
        "titleSlug": "valid-triangle-number",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Two Pointers",
                "slug": "two-pointers"
            },
            {
                "name": "Binary Search",
                "slug": "binary-search"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ],
        "companyNames": [
            "linkedin",
            "meta",
            "bloomberg",
            "apple",
            "adobe",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 8,
        "url": "https://leetcode.com/problems/valid-triangle-number/description"
    },
    "1046": {
        "difficulty": "MEDIUM",
        "id": 1046,
        "questionFrontendId": "1004",
        "title": "Max Consecutive Ones III",
        "titleSlug": "max-consecutive-ones-iii",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Binary Search",
                "slug": "binary-search"
            },
            {
                "name": "Sliding Window",
                "slug": "sliding-window"
            },
            {
                "name": "Prefix Sum",
                "slug": "prefix-sum"
            }
        ],
        "companyNames": [
            "linkedin",
            "tiktok",
            "microsoft",
            "oracle",
            "bloomberg",
            "apple",
            "adobe",
            "walmart_labs",
            "tcs",
            "google",
            "amazon"
        ],
        "frequencyCount": 11,
        "url": "https://leetcode.com/problems/max-consecutive-ones-iii/description"
    },
    "72": {
        "difficulty": "MEDIUM",
        "id": 72,
        "questionFrontendId": "72",
        "title": "Edit Distance",
        "titleSlug": "edit-distance",
        "topicTags": [
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            }
        ],
        "companyNames": [
            "linkedin",
            "meta",
            "tiktok",
            "microsoft",
            "goldman_sachs",
            "bloomberg",
            "apple",
            "adobe",
            "tcs",
            "accenture",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 13,
        "url": "https://leetcode.com/problems/edit-distance/description"
    },
    "155": {
        "difficulty": "MEDIUM",
        "id": 155,
        "questionFrontendId": "155",
        "title": "Min Stack",
        "titleSlug": "min-stack",
        "topicTags": [
            {
                "name": "Stack",
                "slug": "stack"
            },
            {
                "name": "Design",
                "slug": "design"
            }
        ],
        "companyNames": [
            "linkedin",
            "meta",
            "microsoft",
            "oracle",
            "bloomberg",
            "apple",
            "adobe",
            "walmart_labs",
            "nvidia",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 12,
        "url": "https://leetcode.com/problems/min-stack/description"
    },
    "360": {
        "difficulty": "MEDIUM",
        "id": 360,
        "questionFrontendId": "360",
        "title": "Sort Transformed Array",
        "titleSlug": "sort-transformed-array",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Two Pointers",
                "slug": "two-pointers"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ],
        "companyNames": [
            "linkedin",
            "tiktok",
            "google"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/sort-transformed-array/description"
    },
    "384": {
        "difficulty": "MEDIUM",
        "id": 384,
        "questionFrontendId": "384",
        "title": "Shuffle an Array",
        "titleSlug": "shuffle-an-array",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Randomized",
                "slug": "randomized"
            }
        ],
        "companyNames": [
            "linkedin",
            "meta",
            "microsoft",
            "nvidia",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 7,
        "url": "https://leetcode.com/problems/shuffle-an-array/description"
    },
    "543": {
        "difficulty": "EASY",
        "id": 543,
        "questionFrontendId": "543",
        "title": "Diameter of Binary Tree",
        "titleSlug": "diameter-of-binary-tree",
        "topicTags": [
            {
                "name": "Tree",
                "slug": "tree"
            },
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Binary Tree",
                "slug": "binary-tree"
            }
        ],
        "companyNames": [
            "linkedin",
            "meta",
            "microsoft",
            "oracle",
            "bloomberg",
            "apple",
            "adobe",
            "tcs",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 11,
        "url": "https://leetcode.com/problems/diameter-of-binary-tree/description"
    },
    "658": {
        "difficulty": "MEDIUM",
        "id": 658,
        "questionFrontendId": "658",
        "title": "Find K Closest Elements",
        "titleSlug": "find-k-closest-elements",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Two Pointers",
                "slug": "two-pointers"
            },
            {
                "name": "Binary Search",
                "slug": "binary-search"
            },
            {
                "name": "Sliding Window",
                "slug": "sliding-window"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            },
            {
                "name": "Heap (Priority Queue)",
                "slug": "heap-priority-queue"
            }
        ],
        "companyNames": [
            "linkedin",
            "meta",
            "tiktok",
            "microsoft",
            "bloomberg",
            "apple",
            "adobe",
            "doordash",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 11,
        "url": "https://leetcode.com/problems/find-k-closest-elements/description"
    },
    "695": {
        "difficulty": "MEDIUM",
        "id": 695,
        "questionFrontendId": "695",
        "title": "Max Area of Island",
        "titleSlug": "max-area-of-island",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Breadth-First Search",
                "slug": "breadth-first-search"
            },
            {
                "name": "Union Find",
                "slug": "union-find"
            },
            {
                "name": "Matrix",
                "slug": "matrix"
            }
        ],
        "companyNames": [
            "linkedin",
            "meta",
            "tiktok",
            "microsoft",
            "oracle",
            "goldman_sachs",
            "bloomberg",
            "doordash",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 11,
        "url": "https://leetcode.com/problems/max-area-of-island/description"
    },
    "768": {
        "difficulty": "MEDIUM",
        "id": 768,
        "questionFrontendId": "763",
        "title": "Partition Labels",
        "titleSlug": "partition-labels",
        "topicTags": [
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Two Pointers",
                "slug": "two-pointers"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            }
        ],
        "companyNames": [
            "linkedin",
            "microsoft",
            "bloomberg",
            "adobe",
            "amazon"
        ],
        "frequencyCount": 5,
        "url": "https://leetcode.com/problems/partition-labels/description"
    },
    "817": {
        "difficulty": "EASY",
        "id": 817,
        "questionFrontendId": "706",
        "title": "Design HashMap",
        "titleSlug": "design-hashmap",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Linked List",
                "slug": "linked-list"
            },
            {
                "name": "Design",
                "slug": "design"
            },
            {
                "name": "Hash Function",
                "slug": "hash-function"
            }
        ],
        "companyNames": [
            "linkedin",
            "meta",
            "tiktok",
            "microsoft",
            "oracle",
            "goldman_sachs",
            "apple",
            "nvidia",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 11,
        "url": "https://leetcode.com/problems/design-hashmap/description"
    },
    "1014": {
        "difficulty": "MEDIUM",
        "id": 1014,
        "questionFrontendId": "973",
        "title": "K Closest Points to Origin",
        "titleSlug": "k-closest-points-to-origin",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Divide and Conquer",
                "slug": "divide-and-conquer"
            },
            {
                "name": "Geometry",
                "slug": "geometry"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            },
            {
                "name": "Heap (Priority Queue)",
                "slug": "heap-priority-queue"
            },
            {
                "name": "Quickselect",
                "slug": "quickselect"
            }
        ],
        "companyNames": [
            "linkedin",
            "microsoft",
            "oracle",
            "apple",
            "adobe",
            "google",
            "amazon"
        ],
        "frequencyCount": 7,
        "url": "https://leetcode.com/problems/k-closest-points-to-origin/description"
    },
    "1732": {
        "difficulty": "HARD",
        "id": 1732,
        "questionFrontendId": "1611",
        "title": "Minimum One Bit Operations to Make Integers Zero",
        "titleSlug": "minimum-one-bit-operations-to-make-integers-zero",
        "topicTags": [
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Bit Manipulation",
                "slug": "bit-manipulation"
            },
            {
                "name": "Memoization",
                "slug": "memoization"
            }
        ],
        "companyNames": [
            "linkedin",
            "meta",
            "oracle",
            "amazon",
            "uber"
        ],
        "frequencyCount": 5,
        "url": "https://leetcode.com/problems/minimum-one-bit-operations-to-make-integers-zero/description"
    },
    "28": {
        "difficulty": "EASY",
        "id": 28,
        "questionFrontendId": "28",
        "title": "Find the Index of the First Occurrence in a String",
        "titleSlug": "find-the-index-of-the-first-occurrence-in-a-string",
        "topicTags": [
            {
                "name": "Two Pointers",
                "slug": "two-pointers"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "String Matching",
                "slug": "string-matching"
            }
        ],
        "companyNames": [
            "linkedin",
            "meta",
            "microsoft",
            "bloomberg",
            "apple",
            "adobe",
            "tcs",
            "accenture",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 11,
        "url": "https://leetcode.com/problems/find-the-index-of-the-first-occurrence-in-a-string/description"
    },
    "36": {
        "difficulty": "MEDIUM",
        "id": 36,
        "questionFrontendId": "36",
        "title": "Valid Sudoku",
        "titleSlug": "valid-sudoku",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Matrix",
                "slug": "matrix"
            }
        ],
        "companyNames": [
            "linkedin",
            "meta",
            "tiktok",
            "microsoft",
            "oracle",
            "goldman_sachs",
            "bloomberg",
            "apple",
            "adobe",
            "walmart_labs",
            "nvidia",
            "doordash",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 15,
        "url": "https://leetcode.com/problems/valid-sudoku/description"
    },
    "40": {
        "difficulty": "MEDIUM",
        "id": 40,
        "questionFrontendId": "40",
        "title": "Combination Sum II",
        "titleSlug": "combination-sum-ii",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Backtracking",
                "slug": "backtracking"
            }
        ],
        "companyNames": [
            "linkedin",
            "meta",
            "tiktok",
            "microsoft",
            "oracle",
            "goldman_sachs",
            "bloomberg",
            "apple",
            "adobe",
            "airbnb",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 13,
        "url": "https://leetcode.com/problems/combination-sum-ii/description"
    },
    "69": {
        "difficulty": "EASY",
        "id": 69,
        "questionFrontendId": "69",
        "title": "Sqrt(x)",
        "titleSlug": "sqrtx",
        "topicTags": [
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Binary Search",
                "slug": "binary-search"
            }
        ],
        "companyNames": [
            "linkedin",
            "meta",
            "tiktok",
            "microsoft",
            "oracle",
            "goldman_sachs",
            "bloomberg",
            "apple",
            "adobe",
            "tcs",
            "accenture",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 14,
        "url": "https://leetcode.com/problems/sqrtx/description"
    },
    "100": {
        "difficulty": "EASY",
        "id": 100,
        "questionFrontendId": "100",
        "title": "Same Tree",
        "titleSlug": "same-tree",
        "topicTags": [
            {
                "name": "Tree",
                "slug": "tree"
            },
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Breadth-First Search",
                "slug": "breadth-first-search"
            },
            {
                "name": "Binary Tree",
                "slug": "binary-tree"
            }
        ],
        "companyNames": [
            "linkedin",
            "meta",
            "microsoft",
            "bloomberg",
            "apple",
            "adobe",
            "walmart_labs",
            "tcs",
            "doordash",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 12,
        "url": "https://leetcode.com/problems/same-tree/description"
    },
    "139": {
        "difficulty": "MEDIUM",
        "id": 139,
        "questionFrontendId": "139",
        "title": "Word Break",
        "titleSlug": "word-break",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Trie",
                "slug": "trie"
            },
            {
                "name": "Memoization",
                "slug": "memoization"
            }
        ],
        "companyNames": [
            "linkedin",
            "meta",
            "tiktok",
            "microsoft",
            "oracle",
            "bloomberg",
            "apple",
            "adobe",
            "walmart_labs",
            "cisco",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 13,
        "url": "https://leetcode.com/problems/word-break/description"
    },
    "143": {
        "difficulty": "MEDIUM",
        "id": 143,
        "questionFrontendId": "143",
        "title": "Reorder List",
        "titleSlug": "reorder-list",
        "topicTags": [
            {
                "name": "Linked List",
                "slug": "linked-list"
            },
            {
                "name": "Two Pointers",
                "slug": "two-pointers"
            },
            {
                "name": "Stack",
                "slug": "stack"
            },
            {
                "name": "Recursion",
                "slug": "recursion"
            }
        ],
        "companyNames": [
            "linkedin",
            "meta",
            "tiktok",
            "microsoft",
            "goldman_sachs",
            "bloomberg",
            "apple",
            "adobe",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 11,
        "url": "https://leetcode.com/problems/reorder-list/description"
    },
    "211": {
        "difficulty": "MEDIUM",
        "id": 211,
        "questionFrontendId": "211",
        "title": "Design Add and Search Words Data Structure",
        "titleSlug": "design-add-and-search-words-data-structure",
        "topicTags": [
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Design",
                "slug": "design"
            },
            {
                "name": "Trie",
                "slug": "trie"
            }
        ],
        "companyNames": [
            "linkedin",
            "microsoft",
            "bloomberg",
            "apple",
            "doordash",
            "google",
            "amazon"
        ],
        "frequencyCount": 7,
        "url": "https://leetcode.com/problems/design-add-and-search-words-data-structure/description"
    },
    "213": {
        "difficulty": "MEDIUM",
        "id": 213,
        "questionFrontendId": "213",
        "title": "House Robber II",
        "titleSlug": "house-robber-ii",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            }
        ],
        "companyNames": [
            "linkedin",
            "meta",
            "tiktok",
            "microsoft",
            "bloomberg",
            "apple",
            "adobe",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 10,
        "url": "https://leetcode.com/problems/house-robber-ii/description"
    },
    "283": {
        "difficulty": "EASY",
        "id": 283,
        "questionFrontendId": "283",
        "title": "Move Zeroes",
        "titleSlug": "move-zeroes",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Two Pointers",
                "slug": "two-pointers"
            }
        ],
        "companyNames": [
            "linkedin",
            "meta",
            "tiktok",
            "microsoft",
            "oracle",
            "bloomberg",
            "apple",
            "adobe",
            "walmart_labs",
            "nvidia",
            "tcs",
            "doordash",
            "cisco",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 16,
        "url": "https://leetcode.com/problems/move-zeroes/description"
    },
    "323": {
        "difficulty": "MEDIUM",
        "id": 323,
        "questionFrontendId": "323",
        "title": "Number of Connected Components in an Undirected Graph",
        "titleSlug": "number-of-connected-components-in-an-undirected-graph",
        "topicTags": [
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Breadth-First Search",
                "slug": "breadth-first-search"
            },
            {
                "name": "Union Find",
                "slug": "union-find"
            },
            {
                "name": "Graph",
                "slug": "graph"
            }
        ],
        "companyNames": [
            "linkedin",
            "tiktok",
            "google",
            "amazon"
        ],
        "frequencyCount": 4,
        "url": "https://leetcode.com/problems/number-of-connected-components-in-an-undirected-graph/description"
    },
    "381": {
        "difficulty": "HARD",
        "id": 381,
        "questionFrontendId": "381",
        "title": "Insert Delete GetRandom O(1) - Duplicates allowed",
        "titleSlug": "insert-delete-getrandom-o1-duplicates-allowed",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Design",
                "slug": "design"
            },
            {
                "name": "Randomized",
                "slug": "randomized"
            }
        ],
        "companyNames": [
            "linkedin",
            "tiktok",
            "bloomberg",
            "amazon"
        ],
        "frequencyCount": 4,
        "url": "https://leetcode.com/problems/insert-delete-getrandom-o1-duplicates-allowed/description"
    },
    "513": {
        "difficulty": "MEDIUM",
        "id": 513,
        "questionFrontendId": "513",
        "title": "Find Bottom Left Tree Value",
        "titleSlug": "find-bottom-left-tree-value",
        "topicTags": [
            {
                "name": "Tree",
                "slug": "tree"
            },
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Breadth-First Search",
                "slug": "breadth-first-search"
            },
            {
                "name": "Binary Tree",
                "slug": "binary-tree"
            }
        ],
        "companyNames": [
            "linkedin",
            "meta",
            "microsoft",
            "bloomberg",
            "apple",
            "adobe",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 9,
        "url": "https://leetcode.com/problems/find-bottom-left-tree-value/description"
    },
    "653": {
        "difficulty": "EASY",
        "id": 653,
        "questionFrontendId": "653",
        "title": "Two Sum IV - Input is a BST",
        "titleSlug": "two-sum-iv-input-is-a-bst",
        "topicTags": [
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Two Pointers",
                "slug": "two-pointers"
            },
            {
                "name": "Tree",
                "slug": "tree"
            },
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Breadth-First Search",
                "slug": "breadth-first-search"
            },
            {
                "name": "Binary Search Tree",
                "slug": "binary-search-tree"
            },
            {
                "name": "Binary Tree",
                "slug": "binary-tree"
            }
        ],
        "companyNames": [
            "linkedin",
            "microsoft",
            "apple",
            "adobe",
            "google",
            "amazon"
        ],
        "frequencyCount": 6,
        "url": "https://leetcode.com/problems/two-sum-iv-input-is-a-bst/description"
    },
    "862": {
        "difficulty": "MEDIUM",
        "id": 862,
        "questionFrontendId": "833",
        "title": "Find And Replace in String",
        "titleSlug": "find-and-replace-in-string",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ],
        "companyNames": [
            "linkedin",
            "microsoft",
            "google"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/find-and-replace-in-string/description"
    },
    "1159": {
        "difficulty": "MEDIUM",
        "id": 1159,
        "questionFrontendId": "1081",
        "title": "Smallest Subsequence of Distinct Characters",
        "titleSlug": "smallest-subsequence-of-distinct-characters",
        "topicTags": [
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Stack",
                "slug": "stack"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            },
            {
                "name": "Monotonic Stack",
                "slug": "monotonic-stack"
            }
        ],
        "companyNames": [
            "linkedin",
            "oracle",
            "google",
            "amazon"
        ],
        "frequencyCount": 4,
        "url": "https://leetcode.com/problems/smallest-subsequence-of-distinct-characters/description"
    },
    "1252": {
        "difficulty": "MEDIUM",
        "id": 1252,
        "questionFrontendId": "1328",
        "title": "Break a Palindrome",
        "titleSlug": "break-a-palindrome",
        "topicTags": [
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            }
        ],
        "companyNames": [
            "linkedin",
            "oracle",
            "goldman_sachs",
            "apple",
            "walmart_labs",
            "nvidia",
            "google"
        ],
        "frequencyCount": 7,
        "url": "https://leetcode.com/problems/break-a-palindrome/description"
    },
    "1544": {
        "difficulty": "MEDIUM",
        "id": 1544,
        "questionFrontendId": "1448",
        "title": "Count Good Nodes in Binary Tree",
        "titleSlug": "count-good-nodes-in-binary-tree",
        "topicTags": [
            {
                "name": "Tree",
                "slug": "tree"
            },
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Breadth-First Search",
                "slug": "breadth-first-search"
            },
            {
                "name": "Binary Tree",
                "slug": "binary-tree"
            }
        ],
        "companyNames": [
            "linkedin",
            "microsoft",
            "google",
            "amazon"
        ],
        "frequencyCount": 4,
        "url": "https://leetcode.com/problems/count-good-nodes-in-binary-tree/description"
    },
    "1720": {
        "difficulty": "EASY",
        "id": 1720,
        "questionFrontendId": "1598",
        "title": "Crawler Log Folder",
        "titleSlug": "crawler-log-folder",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Stack",
                "slug": "stack"
            }
        ],
        "companyNames": [
            "linkedin",
            "amazon"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/crawler-log-folder/description"
    },
    "2088": {
        "difficulty": "EASY",
        "id": 2088,
        "questionFrontendId": "1974",
        "title": "Minimum Time to Type Word Using Special Typewriter",
        "titleSlug": "minimum-time-to-type-word-using-special-typewriter",
        "topicTags": [
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            }
        ],
        "companyNames": [
            "linkedin"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/minimum-time-to-type-word-using-special-typewriter/description"
    },
    "2690": {
        "difficulty": "MEDIUM",
        "id": 2690,
        "questionFrontendId": "2560",
        "title": "House Robber IV",
        "titleSlug": "house-robber-iv",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Binary Search",
                "slug": "binary-search"
            }
        ],
        "companyNames": [
            "linkedin",
            "bloomberg",
            "adobe",
            "amazon"
        ],
        "frequencyCount": 4,
        "url": "https://leetcode.com/problems/house-robber-iv/description"
    },
    "564": {
        "difficulty": "HARD",
        "id": 564,
        "questionFrontendId": "564",
        "title": "Find the Closest Palindrome",
        "titleSlug": "find-the-closest-palindrome",
        "topicTags": [
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "String",
                "slug": "string"
            }
        ],
        "companyNames": [
            "meta",
            "microsoft",
            "oracle",
            "apple",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 7,
        "url": "https://leetcode.com/problems/find-the-closest-palindrome/description"
    },
    "212": {
        "difficulty": "HARD",
        "id": 212,
        "questionFrontendId": "212",
        "title": "Word Search II",
        "titleSlug": "word-search-ii",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Backtracking",
                "slug": "backtracking"
            },
            {
                "name": "Trie",
                "slug": "trie"
            },
            {
                "name": "Matrix",
                "slug": "matrix"
            }
        ],
        "companyNames": [
            "meta",
            "microsoft",
            "bloomberg",
            "apple",
            "adobe",
            "airbnb",
            "doordash",
            "cisco",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 11,
        "url": "https://leetcode.com/problems/word-search-ii/description"
    },
    "14": {
        "difficulty": "EASY",
        "id": 14,
        "questionFrontendId": "14",
        "title": "Longest Common Prefix",
        "titleSlug": "longest-common-prefix",
        "topicTags": [
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Trie",
                "slug": "trie"
            }
        ],
        "companyNames": [
            "meta",
            "tiktok",
            "microsoft",
            "oracle",
            "goldman_sachs",
            "bloomberg",
            "apple",
            "adobe",
            "walmart_labs",
            "nvidia",
            "tcs",
            "accenture",
            "cisco",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 16,
        "url": "https://leetcode.com/problems/longest-common-prefix/description"
    },
    "2": {
        "difficulty": "MEDIUM",
        "id": 2,
        "questionFrontendId": "2",
        "title": "Add Two Numbers",
        "titleSlug": "add-two-numbers",
        "topicTags": [
            {
                "name": "Linked List",
                "slug": "linked-list"
            },
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Recursion",
                "slug": "recursion"
            }
        ],
        "companyNames": [
            "meta",
            "tiktok",
            "microsoft",
            "oracle",
            "goldman_sachs",
            "bloomberg",
            "apple",
            "adobe",
            "walmart_labs",
            "nvidia",
            "airbnb",
            "tcs",
            "accenture",
            "cisco",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 17,
        "url": "https://leetcode.com/problems/add-two-numbers/description"
    },
    "230": {
        "difficulty": "MEDIUM",
        "id": 230,
        "questionFrontendId": "230",
        "title": "Kth Smallest Element in a BST",
        "titleSlug": "kth-smallest-element-in-a-bst",
        "topicTags": [
            {
                "name": "Tree",
                "slug": "tree"
            },
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Binary Search Tree",
                "slug": "binary-search-tree"
            },
            {
                "name": "Binary Tree",
                "slug": "binary-tree"
            }
        ],
        "companyNames": [
            "meta",
            "microsoft",
            "oracle",
            "bloomberg",
            "apple",
            "adobe",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 9,
        "url": "https://leetcode.com/problems/kth-smallest-element-in-a-bst/description"
    },
    "692": {
        "difficulty": "MEDIUM",
        "id": 692,
        "questionFrontendId": "692",
        "title": "Top K Frequent Words",
        "titleSlug": "top-k-frequent-words",
        "topicTags": [
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Trie",
                "slug": "trie"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            },
            {
                "name": "Heap (Priority Queue)",
                "slug": "heap-priority-queue"
            },
            {
                "name": "Bucket Sort",
                "slug": "bucket-sort"
            },
            {
                "name": "Counting",
                "slug": "counting"
            }
        ],
        "companyNames": [
            "meta",
            "microsoft",
            "oracle",
            "goldman_sachs",
            "bloomberg",
            "apple",
            "adobe",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 10,
        "url": "https://leetcode.com/problems/top-k-frequent-words/description"
    },
    "772": {
        "difficulty": "MEDIUM",
        "id": 772,
        "questionFrontendId": "427",
        "title": "Construct Quad Tree",
        "titleSlug": "construct-quad-tree",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Divide and Conquer",
                "slug": "divide-and-conquer"
            },
            {
                "name": "Tree",
                "slug": "tree"
            },
            {
                "name": "Matrix",
                "slug": "matrix"
            }
        ],
        "companyNames": [
            "meta",
            "microsoft",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 5,
        "url": "https://leetcode.com/problems/construct-quad-tree/description"
    },
    "1549": {
        "difficulty": "MEDIUM",
        "id": 1549,
        "questionFrontendId": "1438",
        "title": "Longest Continuous Subarray With Absolute Diff Less Than or Equal to Limit",
        "titleSlug": "longest-continuous-subarray-with-absolute-diff-less-than-or-equal-to-limit",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Queue",
                "slug": "queue"
            },
            {
                "name": "Sliding Window",
                "slug": "sliding-window"
            },
            {
                "name": "Heap (Priority Queue)",
                "slug": "heap-priority-queue"
            },
            {
                "name": "Ordered Set",
                "slug": "ordered-set"
            },
            {
                "name": "Monotonic Queue",
                "slug": "monotonic-queue"
            }
        ],
        "companyNames": [
            "meta",
            "microsoft",
            "bloomberg",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 6,
        "url": "https://leetcode.com/problems/longest-continuous-subarray-with-absolute-diff-less-than-or-equal-to-limit/description"
    },
    "7": {
        "difficulty": "MEDIUM",
        "id": 7,
        "questionFrontendId": "7",
        "title": "Reverse Integer",
        "titleSlug": "reverse-integer",
        "topicTags": [
            {
                "name": "Math",
                "slug": "math"
            }
        ],
        "companyNames": [
            "meta",
            "tiktok",
            "microsoft",
            "goldman_sachs",
            "bloomberg",
            "apple",
            "adobe",
            "nvidia",
            "tcs",
            "accenture",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 13,
        "url": "https://leetcode.com/problems/reverse-integer/description"
    },
    "22": {
        "difficulty": "MEDIUM",
        "id": 22,
        "questionFrontendId": "22",
        "title": "Generate Parentheses",
        "titleSlug": "generate-parentheses",
        "topicTags": [
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Backtracking",
                "slug": "backtracking"
            }
        ],
        "companyNames": [
            "meta",
            "tiktok",
            "microsoft",
            "oracle",
            "bloomberg",
            "apple",
            "adobe",
            "walmart_labs",
            "nvidia",
            "tcs",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 13,
        "url": "https://leetcode.com/problems/generate-parentheses/description"
    },
    "242": {
        "difficulty": "EASY",
        "id": 242,
        "questionFrontendId": "242",
        "title": "Valid Anagram",
        "titleSlug": "valid-anagram",
        "topicTags": [
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ],
        "companyNames": [
            "meta",
            "tiktok",
            "microsoft",
            "oracle",
            "goldman_sachs",
            "bloomberg",
            "apple",
            "adobe",
            "walmart_labs",
            "tcs",
            "accenture",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 14,
        "url": "https://leetcode.com/problems/valid-anagram/description"
    },
    "202": {
        "difficulty": "EASY",
        "id": 202,
        "questionFrontendId": "202",
        "title": "Happy Number",
        "titleSlug": "happy-number",
        "topicTags": [
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Two Pointers",
                "slug": "two-pointers"
            }
        ],
        "companyNames": [
            "meta",
            "tiktok",
            "microsoft",
            "bloomberg",
            "apple",
            "adobe",
            "airbnb",
            "tcs",
            "accenture",
            "cisco",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 13,
        "url": "https://leetcode.com/problems/happy-number/description"
    },
    "217": {
        "difficulty": "EASY",
        "id": 217,
        "questionFrontendId": "217",
        "title": "Contains Duplicate",
        "titleSlug": "contains-duplicate",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ],
        "companyNames": [
            "meta",
            "microsoft",
            "bloomberg",
            "apple",
            "adobe",
            "airbnb",
            "tcs",
            "accenture",
            "cisco",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 12,
        "url": "https://leetcode.com/problems/contains-duplicate/description"
    },
    "1894": {
        "difficulty": "EASY",
        "id": 1894,
        "questionFrontendId": "1768",
        "title": "Merge Strings Alternately",
        "titleSlug": "merge-strings-alternately",
        "topicTags": [
            {
                "name": "Two Pointers",
                "slug": "two-pointers"
            },
            {
                "name": "String",
                "slug": "string"
            }
        ],
        "companyNames": [
            "meta",
            "microsoft",
            "bloomberg",
            "apple",
            "adobe",
            "walmart_labs",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 9,
        "url": "https://leetcode.com/problems/merge-strings-alternately/description"
    },
    "9": {
        "difficulty": "EASY",
        "id": 9,
        "questionFrontendId": "9",
        "title": "Palindrome Number",
        "titleSlug": "palindrome-number",
        "topicTags": [
            {
                "name": "Math",
                "slug": "math"
            }
        ],
        "companyNames": [
            "meta",
            "microsoft",
            "oracle",
            "bloomberg",
            "apple",
            "adobe",
            "walmart_labs",
            "tcs",
            "accenture",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 12,
        "url": "https://leetcode.com/problems/palindrome-number/description"
    },
    "91": {
        "difficulty": "MEDIUM",
        "id": 91,
        "questionFrontendId": "91",
        "title": "Decode Ways",
        "titleSlug": "decode-ways",
        "topicTags": [
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            }
        ],
        "companyNames": [
            "meta",
            "tiktok",
            "microsoft",
            "oracle",
            "goldman_sachs",
            "bloomberg",
            "apple",
            "adobe",
            "walmart_labs",
            "cisco",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 13,
        "url": "https://leetcode.com/problems/decode-ways/description"
    },
    "125": {
        "difficulty": "EASY",
        "id": 125,
        "questionFrontendId": "125",
        "title": "Valid Palindrome",
        "titleSlug": "valid-palindrome",
        "topicTags": [
            {
                "name": "Two Pointers",
                "slug": "two-pointers"
            },
            {
                "name": "String",
                "slug": "string"
            }
        ],
        "companyNames": [
            "meta",
            "tiktok",
            "microsoft",
            "goldman_sachs",
            "bloomberg",
            "apple",
            "adobe",
            "tcs",
            "accenture",
            "cisco",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 13,
        "url": "https://leetcode.com/problems/valid-palindrome/description"
    },
    "162": {
        "difficulty": "MEDIUM",
        "id": 162,
        "questionFrontendId": "162",
        "title": "Find Peak Element",
        "titleSlug": "find-peak-element",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Binary Search",
                "slug": "binary-search"
            }
        ],
        "companyNames": [
            "meta",
            "tiktok",
            "microsoft",
            "oracle",
            "goldman_sachs",
            "bloomberg",
            "apple",
            "adobe",
            "nvidia",
            "accenture",
            "cisco",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 14,
        "url": "https://leetcode.com/problems/find-peak-element/description"
    },
    "1374": {
        "difficulty": "MEDIUM",
        "id": 1374,
        "questionFrontendId": "1428",
        "title": "Leftmost Column with at Least a One",
        "titleSlug": "leftmost-column-with-at-least-a-one",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Binary Search",
                "slug": "binary-search"
            },
            {
                "name": "Matrix",
                "slug": "matrix"
            },
            {
                "name": "Interactive",
                "slug": "interactive"
            }
        ],
        "companyNames": [
            "meta",
            "tiktok",
            "amazon",
            "uber"
        ],
        "frequencyCount": 4,
        "url": "https://leetcode.com/problems/leftmost-column-with-at-least-a-one/description"
    },
    "2563": {
        "difficulty": "HARD",
        "id": 2563,
        "questionFrontendId": "2468",
        "title": "Split Message Based on Limit",
        "titleSlug": "split-message-based-on-limit",
        "topicTags": [
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Binary Search",
                "slug": "binary-search"
            }
        ],
        "companyNames": [
            "meta",
            "tiktok",
            "amazon",
            "uber"
        ],
        "frequencyCount": 4,
        "url": "https://leetcode.com/problems/split-message-based-on-limit/description"
    },
    "26": {
        "difficulty": "EASY",
        "id": 26,
        "questionFrontendId": "26",
        "title": "Remove Duplicates from Sorted Array",
        "titleSlug": "remove-duplicates-from-sorted-array",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Two Pointers",
                "slug": "two-pointers"
            }
        ],
        "companyNames": [
            "meta",
            "microsoft",
            "oracle",
            "bloomberg",
            "apple",
            "adobe",
            "tcs",
            "accenture",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 11,
        "url": "https://leetcode.com/problems/remove-duplicates-from-sorted-array/description"
    },
    "2294": {
        "difficulty": "MEDIUM",
        "id": 2294,
        "questionFrontendId": "2187",
        "title": "Minimum Time to Complete Trips",
        "titleSlug": "minimum-time-to-complete-trips",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Binary Search",
                "slug": "binary-search"
            }
        ],
        "companyNames": [
            "meta",
            "microsoft",
            "apple",
            "amazon",
            "uber"
        ],
        "frequencyCount": 5,
        "url": "https://leetcode.com/problems/minimum-time-to-complete-trips/description"
    },
    "27": {
        "difficulty": "EASY",
        "id": 27,
        "questionFrontendId": "27",
        "title": "Remove Element",
        "titleSlug": "remove-element",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Two Pointers",
                "slug": "two-pointers"
            }
        ],
        "companyNames": [
            "meta",
            "microsoft",
            "bloomberg",
            "apple",
            "adobe",
            "accenture",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 9,
        "url": "https://leetcode.com/problems/remove-element/description"
    },
    "45": {
        "difficulty": "MEDIUM",
        "id": 45,
        "questionFrontendId": "45",
        "title": "Jump Game II",
        "titleSlug": "jump-game-ii",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            }
        ],
        "companyNames": [
            "meta",
            "tiktok",
            "microsoft",
            "oracle",
            "goldman_sachs",
            "bloomberg",
            "apple",
            "adobe",
            "walmart_labs",
            "doordash",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 13,
        "url": "https://leetcode.com/problems/jump-game-ii/description"
    },
    "35": {
        "difficulty": "EASY",
        "id": 35,
        "questionFrontendId": "35",
        "title": "Search Insert Position",
        "titleSlug": "search-insert-position",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Binary Search",
                "slug": "binary-search"
            }
        ],
        "companyNames": [
            "meta",
            "microsoft",
            "bloomberg",
            "apple",
            "adobe",
            "tcs",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 9,
        "url": "https://leetcode.com/problems/search-insert-position/description"
    },
    "70": {
        "difficulty": "EASY",
        "id": 70,
        "questionFrontendId": "70",
        "title": "Climbing Stairs",
        "titleSlug": "climbing-stairs",
        "topicTags": [
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Memoization",
                "slug": "memoization"
            }
        ],
        "companyNames": [
            "meta",
            "tiktok",
            "microsoft",
            "oracle",
            "goldman_sachs",
            "bloomberg",
            "apple",
            "adobe",
            "nvidia",
            "tcs",
            "accenture",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 14,
        "url": "https://leetcode.com/problems/climbing-stairs/description"
    },
    "189": {
        "difficulty": "MEDIUM",
        "id": 189,
        "questionFrontendId": "189",
        "title": "Rotate Array",
        "titleSlug": "rotate-array",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Two Pointers",
                "slug": "two-pointers"
            }
        ],
        "companyNames": [
            "meta",
            "tiktok",
            "microsoft",
            "oracle",
            "goldman_sachs",
            "bloomberg",
            "apple",
            "adobe",
            "walmart_labs",
            "tcs",
            "accenture",
            "cisco",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 15,
        "url": "https://leetcode.com/problems/rotate-array/description"
    },
    "347": {
        "difficulty": "MEDIUM",
        "id": 347,
        "questionFrontendId": "347",
        "title": "Top K Frequent Elements",
        "titleSlug": "top-k-frequent-elements",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Divide and Conquer",
                "slug": "divide-and-conquer"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            },
            {
                "name": "Heap (Priority Queue)",
                "slug": "heap-priority-queue"
            },
            {
                "name": "Bucket Sort",
                "slug": "bucket-sort"
            },
            {
                "name": "Counting",
                "slug": "counting"
            },
            {
                "name": "Quickselect",
                "slug": "quickselect"
            }
        ],
        "companyNames": [
            "meta",
            "tiktok",
            "microsoft",
            "oracle",
            "goldman_sachs",
            "bloomberg",
            "apple",
            "adobe",
            "walmart_labs",
            "nvidia",
            "cisco",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 14,
        "url": "https://leetcode.com/problems/top-k-frequent-elements/description"
    },
    "2583": {
        "difficulty": "HARD",
        "id": 2583,
        "questionFrontendId": "2493",
        "title": "Divide Nodes Into the Maximum Number of Groups",
        "titleSlug": "divide-nodes-into-the-maximum-number-of-groups",
        "topicTags": [
            {
                "name": "Breadth-First Search",
                "slug": "breadth-first-search"
            },
            {
                "name": "Union Find",
                "slug": "union-find"
            },
            {
                "name": "Graph",
                "slug": "graph"
            }
        ],
        "companyNames": [
            "meta",
            "apple",
            "uber"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/divide-nodes-into-the-maximum-number-of-groups/description"
    },
    "8": {
        "difficulty": "MEDIUM",
        "id": 8,
        "questionFrontendId": "8",
        "title": "String to Integer (atoi)",
        "titleSlug": "string-to-integer-atoi",
        "topicTags": [
            {
                "name": "String",
                "slug": "string"
            }
        ],
        "companyNames": [
            "meta",
            "microsoft",
            "goldman_sachs",
            "bloomberg",
            "apple",
            "adobe",
            "nvidia",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 10,
        "url": "https://leetcode.com/problems/string-to-integer-atoi/description"
    },
    "32": {
        "difficulty": "HARD",
        "id": 32,
        "questionFrontendId": "32",
        "title": "Longest Valid Parentheses",
        "titleSlug": "longest-valid-parentheses",
        "topicTags": [
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Stack",
                "slug": "stack"
            }
        ],
        "companyNames": [
            "meta",
            "tiktok",
            "microsoft",
            "oracle",
            "bloomberg",
            "apple",
            "adobe",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 10,
        "url": "https://leetcode.com/problems/longest-valid-parentheses/description"
    },
    "78": {
        "difficulty": "MEDIUM",
        "id": 78,
        "questionFrontendId": "78",
        "title": "Subsets",
        "titleSlug": "subsets",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Backtracking",
                "slug": "backtracking"
            },
            {
                "name": "Bit Manipulation",
                "slug": "bit-manipulation"
            }
        ],
        "companyNames": [
            "meta",
            "tiktok",
            "microsoft",
            "goldman_sachs",
            "bloomberg",
            "apple",
            "adobe",
            "tcs",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 11,
        "url": "https://leetcode.com/problems/subsets/description"
    },
    "733": {
        "difficulty": "EASY",
        "id": 733,
        "questionFrontendId": "733",
        "title": "Flood Fill",
        "titleSlug": "flood-fill",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Breadth-First Search",
                "slug": "breadth-first-search"
            },
            {
                "name": "Matrix",
                "slug": "matrix"
            }
        ],
        "companyNames": [
            "meta",
            "microsoft",
            "bloomberg",
            "apple",
            "adobe",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 8,
        "url": "https://leetcode.com/problems/flood-fill/description"
    },
    "907": {
        "difficulty": "MEDIUM",
        "id": 907,
        "questionFrontendId": "875",
        "title": "Koko Eating Bananas",
        "titleSlug": "koko-eating-bananas",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Binary Search",
                "slug": "binary-search"
            }
        ],
        "companyNames": [
            "meta",
            "tiktok",
            "microsoft",
            "bloomberg",
            "apple",
            "adobe",
            "walmart_labs",
            "doordash",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 11,
        "url": "https://leetcode.com/problems/koko-eating-bananas/description"
    },
    "24": {
        "difficulty": "MEDIUM",
        "id": 24,
        "questionFrontendId": "24",
        "title": "Swap Nodes in Pairs",
        "titleSlug": "swap-nodes-in-pairs",
        "topicTags": [
            {
                "name": "Linked List",
                "slug": "linked-list"
            },
            {
                "name": "Recursion",
                "slug": "recursion"
            }
        ],
        "companyNames": [
            "meta",
            "tiktok",
            "microsoft",
            "bloomberg",
            "apple",
            "adobe",
            "walmart_labs",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 10,
        "url": "https://leetcode.com/problems/swap-nodes-in-pairs/description"
    },
    "84": {
        "difficulty": "HARD",
        "id": 84,
        "questionFrontendId": "84",
        "title": "Largest Rectangle in Histogram",
        "titleSlug": "largest-rectangle-in-histogram",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Stack",
                "slug": "stack"
            },
            {
                "name": "Monotonic Stack",
                "slug": "monotonic-stack"
            }
        ],
        "companyNames": [
            "meta",
            "tiktok",
            "microsoft",
            "bloomberg",
            "apple",
            "adobe",
            "walmart_labs",
            "tcs",
            "doordash",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 12,
        "url": "https://leetcode.com/problems/largest-rectangle-in-histogram/description"
    },
    "118": {
        "difficulty": "EASY",
        "id": 118,
        "questionFrontendId": "118",
        "title": "Pascal's Triangle",
        "titleSlug": "pascals-triangle",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            }
        ],
        "companyNames": [
            "meta",
            "microsoft",
            "oracle",
            "goldman_sachs",
            "bloomberg",
            "apple",
            "adobe",
            "tcs",
            "accenture",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 12,
        "url": "https://leetcode.com/problems/pascals-triangle/description"
    },
    "140": {
        "difficulty": "HARD",
        "id": 140,
        "questionFrontendId": "140",
        "title": "Word Break II",
        "titleSlug": "word-break-ii",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Backtracking",
                "slug": "backtracking"
            },
            {
                "name": "Trie",
                "slug": "trie"
            },
            {
                "name": "Memoization",
                "slug": "memoization"
            }
        ],
        "companyNames": [
            "meta",
            "tiktok",
            "microsoft",
            "oracle",
            "bloomberg",
            "apple",
            "adobe",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 10,
        "url": "https://leetcode.com/problems/word-break-ii/description"
    },
    "171": {
        "difficulty": "EASY",
        "id": 171,
        "questionFrontendId": "171",
        "title": "Excel Sheet Column Number",
        "titleSlug": "excel-sheet-column-number",
        "topicTags": [
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "String",
                "slug": "string"
            }
        ],
        "companyNames": [
            "meta",
            "microsoft",
            "apple",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 6,
        "url": "https://leetcode.com/problems/excel-sheet-column-number/description"
    },
    "206": {
        "difficulty": "EASY",
        "id": 206,
        "questionFrontendId": "206",
        "title": "Reverse Linked List",
        "titleSlug": "reverse-linked-list",
        "topicTags": [
            {
                "name": "Linked List",
                "slug": "linked-list"
            },
            {
                "name": "Recursion",
                "slug": "recursion"
            }
        ],
        "companyNames": [
            "meta",
            "tiktok",
            "microsoft",
            "oracle",
            "goldman_sachs",
            "bloomberg",
            "apple",
            "adobe",
            "tcs",
            "accenture",
            "cisco",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 14,
        "url": "https://leetcode.com/problems/reverse-linked-list/description"
    },
    "337": {
        "difficulty": "MEDIUM",
        "id": 337,
        "questionFrontendId": "337",
        "title": "House Robber III",
        "titleSlug": "house-robber-iii",
        "topicTags": [
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Tree",
                "slug": "tree"
            },
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Binary Tree",
                "slug": "binary-tree"
            }
        ],
        "companyNames": [
            "meta",
            "microsoft",
            "adobe",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 6,
        "url": "https://leetcode.com/problems/house-robber-iii/description"
    },
    "424": {
        "difficulty": "MEDIUM",
        "id": 424,
        "questionFrontendId": "424",
        "title": "Longest Repeating Character Replacement",
        "titleSlug": "longest-repeating-character-replacement",
        "topicTags": [
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Sliding Window",
                "slug": "sliding-window"
            }
        ],
        "companyNames": [
            "meta",
            "tiktok",
            "microsoft",
            "oracle",
            "goldman_sachs",
            "bloomberg",
            "apple",
            "adobe",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 11,
        "url": "https://leetcode.com/problems/longest-repeating-character-replacement/description"
    },
    "854": {
        "difficulty": "HARD",
        "id": 854,
        "questionFrontendId": "827",
        "title": "Making A Large Island",
        "titleSlug": "making-a-large-island",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Breadth-First Search",
                "slug": "breadth-first-search"
            },
            {
                "name": "Union Find",
                "slug": "union-find"
            },
            {
                "name": "Matrix",
                "slug": "matrix"
            }
        ],
        "companyNames": [
            "meta",
            "tiktok",
            "microsoft",
            "bloomberg",
            "apple",
            "adobe",
            "doordash",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 10,
        "url": "https://leetcode.com/problems/making-a-large-island/description"
    },
    "885": {
        "difficulty": "MEDIUM",
        "id": 885,
        "questionFrontendId": "855",
        "title": "Exam Room",
        "titleSlug": "exam-room",
        "topicTags": [
            {
                "name": "Design",
                "slug": "design"
            },
            {
                "name": "Heap (Priority Queue)",
                "slug": "heap-priority-queue"
            },
            {
                "name": "Ordered Set",
                "slug": "ordered-set"
            }
        ],
        "companyNames": [
            "meta",
            "bloomberg",
            "google",
            "uber"
        ],
        "frequencyCount": 4,
        "url": "https://leetcode.com/problems/exam-room/description"
    },
    "1023": {
        "difficulty": "MEDIUM",
        "id": 1023,
        "questionFrontendId": "981",
        "title": "Time Based Key-Value Store",
        "titleSlug": "time-based-key-value-store",
        "topicTags": [
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Binary Search",
                "slug": "binary-search"
            },
            {
                "name": "Design",
                "slug": "design"
            }
        ],
        "companyNames": [
            "meta",
            "microsoft",
            "oracle",
            "goldman_sachs",
            "bloomberg",
            "apple",
            "adobe",
            "airbnb",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 11,
        "url": "https://leetcode.com/problems/time-based-key-value-store/description"
    },
    "2246": {
        "difficulty": "HARD",
        "id": 2246,
        "questionFrontendId": "2127",
        "title": "Maximum Employees to Be Invited to a Meeting",
        "titleSlug": "maximum-employees-to-be-invited-to-a-meeting",
        "topicTags": [
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Graph",
                "slug": "graph"
            },
            {
                "name": "Topological Sort",
                "slug": "topological-sort"
            }
        ],
        "companyNames": [
            "meta",
            "microsoft",
            "bloomberg",
            "amazon",
            "uber"
        ],
        "frequencyCount": 5,
        "url": "https://leetcode.com/problems/maximum-employees-to-be-invited-to-a-meeting/description"
    },
    "66": {
        "difficulty": "EASY",
        "id": 66,
        "questionFrontendId": "66",
        "title": "Plus One",
        "titleSlug": "plus-one",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Math",
                "slug": "math"
            }
        ],
        "companyNames": [
            "meta",
            "tiktok",
            "microsoft",
            "bloomberg",
            "apple",
            "adobe",
            "tcs",
            "accenture",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 11,
        "url": "https://leetcode.com/problems/plus-one/description"
    },
    "208": {
        "difficulty": "MEDIUM",
        "id": 208,
        "questionFrontendId": "208",
        "title": "Implement Trie (Prefix Tree)",
        "titleSlug": "implement-trie-prefix-tree",
        "topicTags": [
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Design",
                "slug": "design"
            },
            {
                "name": "Trie",
                "slug": "trie"
            }
        ],
        "companyNames": [
            "meta",
            "tiktok",
            "microsoft",
            "bloomberg",
            "apple",
            "adobe",
            "nvidia",
            "doordash",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 11,
        "url": "https://leetcode.com/problems/implement-trie-prefix-tree/description"
    },
    "290": {
        "difficulty": "EASY",
        "id": 290,
        "questionFrontendId": "290",
        "title": "Word Pattern",
        "titleSlug": "word-pattern",
        "topicTags": [
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "String",
                "slug": "string"
            }
        ],
        "companyNames": [
            "meta",
            "microsoft",
            "bloomberg",
            "apple",
            "adobe",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 8,
        "url": "https://leetcode.com/problems/word-pattern/description"
    },
    "305": {
        "difficulty": "HARD",
        "id": 305,
        "questionFrontendId": "305",
        "title": "Number of Islands II",
        "titleSlug": "number-of-islands-ii",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Union Find",
                "slug": "union-find"
            }
        ],
        "companyNames": [
            "meta",
            "tiktok",
            "google",
            "uber"
        ],
        "frequencyCount": 4,
        "url": "https://leetcode.com/problems/number-of-islands-ii/description"
    },
    "362": {
        "difficulty": "MEDIUM",
        "id": 362,
        "questionFrontendId": "362",
        "title": "Design Hit Counter",
        "titleSlug": "design-hit-counter",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Binary Search",
                "slug": "binary-search"
            },
            {
                "name": "Design",
                "slug": "design"
            },
            {
                "name": "Queue",
                "slug": "queue"
            },
            {
                "name": "Data Stream",
                "slug": "data-stream"
            }
        ],
        "companyNames": [
            "meta",
            "microsoft",
            "bloomberg",
            "apple",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 7,
        "url": "https://leetcode.com/problems/design-hit-counter/description"
    },
    "450": {
        "difficulty": "MEDIUM",
        "id": 450,
        "questionFrontendId": "450",
        "title": "Delete Node in a BST",
        "titleSlug": "delete-node-in-a-bst",
        "topicTags": [
            {
                "name": "Tree",
                "slug": "tree"
            },
            {
                "name": "Binary Search Tree",
                "slug": "binary-search-tree"
            },
            {
                "name": "Binary Tree",
                "slug": "binary-tree"
            }
        ],
        "companyNames": [
            "meta",
            "microsoft",
            "oracle",
            "bloomberg",
            "apple",
            "adobe",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 9,
        "url": "https://leetcode.com/problems/delete-node-in-a-bst/description"
    },
    "1319": {
        "difficulty": "EASY",
        "id": 1319,
        "questionFrontendId": "1207",
        "title": "Unique Number of Occurrences",
        "titleSlug": "unique-number-of-occurrences",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            }
        ],
        "companyNames": [
            "meta",
            "microsoft",
            "goldman_sachs",
            "bloomberg",
            "apple",
            "adobe",
            "walmart_labs",
            "tcs",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 11,
        "url": "https://leetcode.com/problems/unique-number-of-occurrences/description"
    },
    "1502": {
        "difficulty": "MEDIUM",
        "id": 1502,
        "questionFrontendId": "1400",
        "title": "Construct K Palindrome Strings",
        "titleSlug": "construct-k-palindrome-strings",
        "topicTags": [
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            },
            {
                "name": "Counting",
                "slug": "counting"
            }
        ],
        "companyNames": [
            "meta",
            "uber"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/construct-k-palindrome-strings/description"
    },
    "2038": {
        "difficulty": "MEDIUM",
        "id": 2038,
        "questionFrontendId": "1926",
        "title": "Nearest Exit from Entrance in Maze",
        "titleSlug": "nearest-exit-from-entrance-in-maze",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Breadth-First Search",
                "slug": "breadth-first-search"
            },
            {
                "name": "Matrix",
                "slug": "matrix"
            }
        ],
        "companyNames": [
            "meta",
            "apple",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 5,
        "url": "https://leetcode.com/problems/nearest-exit-from-entrance-in-maze/description"
    },
    "2809": {
        "difficulty": "EASY",
        "id": 2809,
        "questionFrontendId": "2667",
        "title": "Create Hello World Function",
        "titleSlug": "create-hello-world-function",
        "topicTags": [],
        "companyNames": [
            "meta",
            "microsoft",
            "bloomberg",
            "apple",
            "adobe",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 8,
        "url": "https://leetcode.com/problems/create-hello-world-function/description"
    },
    "2977": {
        "difficulty": "EASY",
        "id": 2977,
        "questionFrontendId": "2828",
        "title": "Check if a String Is an Acronym of Words",
        "titleSlug": "check-if-a-string-is-an-acronym-of-words",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "String",
                "slug": "string"
            }
        ],
        "companyNames": [
            "meta",
            "amazon",
            "uber"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/check-if-a-string-is-an-acronym-of-words/description"
    },
    "128": {
        "difficulty": "MEDIUM",
        "id": 128,
        "questionFrontendId": "128",
        "title": "Longest Consecutive Sequence",
        "titleSlug": "longest-consecutive-sequence",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Union Find",
                "slug": "union-find"
            }
        ],
        "companyNames": [
            "meta",
            "tiktok",
            "microsoft",
            "oracle",
            "bloomberg",
            "apple",
            "adobe",
            "walmart_labs",
            "tcs",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 12,
        "url": "https://leetcode.com/problems/longest-consecutive-sequence/description"
    },
    "138": {
        "difficulty": "MEDIUM",
        "id": 138,
        "questionFrontendId": "138",
        "title": "Copy List with Random Pointer",
        "titleSlug": "copy-list-with-random-pointer",
        "topicTags": [
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Linked List",
                "slug": "linked-list"
            }
        ],
        "companyNames": [
            "meta",
            "microsoft",
            "oracle",
            "bloomberg",
            "apple",
            "adobe",
            "walmart_labs",
            "nvidia",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 11,
        "url": "https://leetcode.com/problems/copy-list-with-random-pointer/description"
    },
    "169": {
        "difficulty": "EASY",
        "id": 169,
        "questionFrontendId": "169",
        "title": "Majority Element",
        "titleSlug": "majority-element",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Divide and Conquer",
                "slug": "divide-and-conquer"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            },
            {
                "name": "Counting",
                "slug": "counting"
            }
        ],
        "companyNames": [
            "meta",
            "microsoft",
            "oracle",
            "goldman_sachs",
            "bloomberg",
            "apple",
            "adobe",
            "nvidia",
            "tcs",
            "accenture",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 13,
        "url": "https://leetcode.com/problems/majority-element/description"
    },
    "262": {
        "difficulty": "HARD",
        "id": 262,
        "questionFrontendId": "262",
        "title": "Trips and Users",
        "titleSlug": "trips-and-users",
        "topicTags": [
            {
                "name": "Database",
                "slug": "database"
            }
        ],
        "companyNames": [
            "meta",
            "amazon",
            "uber"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/trips-and-users/description"
    },
    "648": {
        "difficulty": "MEDIUM",
        "id": 648,
        "questionFrontendId": "648",
        "title": "Replace Words",
        "titleSlug": "replace-words",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Trie",
                "slug": "trie"
            }
        ],
        "companyNames": [
            "meta",
            "microsoft",
            "bloomberg",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 6,
        "url": "https://leetcode.com/problems/replace-words/description"
    },
    "1101": {
        "difficulty": "MEDIUM",
        "id": 1101,
        "questionFrontendId": "1136",
        "title": "Parallel Courses",
        "titleSlug": "parallel-courses",
        "topicTags": [
            {
                "name": "Graph",
                "slug": "graph"
            },
            {
                "name": "Topological Sort",
                "slug": "topological-sort"
            }
        ],
        "companyNames": [
            "meta",
            "tiktok",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 5,
        "url": "https://leetcode.com/problems/parallel-courses/description"
    },
    "1267": {
        "difficulty": "MEDIUM",
        "id": 1267,
        "questionFrontendId": "1171",
        "title": "Remove Zero Sum Consecutive Nodes from Linked List",
        "titleSlug": "remove-zero-sum-consecutive-nodes-from-linked-list",
        "topicTags": [
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Linked List",
                "slug": "linked-list"
            }
        ],
        "companyNames": [
            "meta",
            "apple",
            "adobe",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 6,
        "url": "https://leetcode.com/problems/remove-zero-sum-consecutive-nodes-from-linked-list/description"
    },
    "1486": {
        "difficulty": "EASY",
        "id": 1486,
        "questionFrontendId": "1385",
        "title": "Find the Distance Value Between Two Arrays",
        "titleSlug": "find-the-distance-value-between-two-arrays",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Two Pointers",
                "slug": "two-pointers"
            },
            {
                "name": "Binary Search",
                "slug": "binary-search"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ],
        "companyNames": [
            "meta",
            "amazon",
            "uber"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/find-the-distance-value-between-two-arrays/description"
    },
    "1558": {
        "difficulty": "MEDIUM",
        "id": 1558,
        "questionFrontendId": "1462",
        "title": "Course Schedule IV",
        "titleSlug": "course-schedule-iv",
        "topicTags": [
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Breadth-First Search",
                "slug": "breadth-first-search"
            },
            {
                "name": "Graph",
                "slug": "graph"
            },
            {
                "name": "Topological Sort",
                "slug": "topological-sort"
            }
        ],
        "companyNames": [
            "meta",
            "uber"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/course-schedule-iv/description"
    },
    "1701": {
        "difficulty": "HARD",
        "id": 1701,
        "questionFrontendId": "1579",
        "title": "Remove Max Number of Edges to Keep Graph Fully Traversable",
        "titleSlug": "remove-max-number-of-edges-to-keep-graph-fully-traversable",
        "topicTags": [
            {
                "name": "Union Find",
                "slug": "union-find"
            },
            {
                "name": "Graph",
                "slug": "graph"
            }
        ],
        "companyNames": [
            "meta",
            "adobe",
            "google",
            "uber"
        ],
        "frequencyCount": 4,
        "url": "https://leetcode.com/problems/remove-max-number-of-edges-to-keep-graph-fully-traversable/description"
    },
    "1820": {
        "difficulty": "HARD",
        "id": 1820,
        "questionFrontendId": "1719",
        "title": "Number Of Ways To Reconstruct A Tree",
        "titleSlug": "number-of-ways-to-reconstruct-a-tree",
        "topicTags": [
            {
                "name": "Tree",
                "slug": "tree"
            },
            {
                "name": "Graph",
                "slug": "graph"
            }
        ],
        "companyNames": [
            "meta",
            "uber"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/number-of-ways-to-reconstruct-a-tree/description"
    },
    "1824": {
        "difficulty": "MEDIUM",
        "id": 1824,
        "questionFrontendId": "1705",
        "title": "Maximum Number of Eaten Apples",
        "titleSlug": "maximum-number-of-eaten-apples",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            },
            {
                "name": "Heap (Priority Queue)",
                "slug": "heap-priority-queue"
            }
        ],
        "companyNames": [
            "meta",
            "adobe",
            "amazon",
            "uber"
        ],
        "frequencyCount": 4,
        "url": "https://leetcode.com/problems/maximum-number-of-eaten-apples/description"
    },
    "1908": {
        "difficulty": "EASY",
        "id": 1908,
        "questionFrontendId": "1757",
        "title": "Recyclable and Low Fat Products",
        "titleSlug": "recyclable-and-low-fat-products",
        "topicTags": [
            {
                "name": "Database",
                "slug": "database"
            }
        ],
        "companyNames": [
            "meta",
            "microsoft",
            "bloomberg",
            "apple",
            "adobe",
            "tcs",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 9,
        "url": "https://leetcode.com/problems/recyclable-and-low-fat-products/description"
    },
    "2093": {
        "difficulty": "EASY",
        "id": 2093,
        "questionFrontendId": "1961",
        "title": "Check If String Is a Prefix of Array",
        "titleSlug": "check-if-string-is-a-prefix-of-array",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Two Pointers",
                "slug": "two-pointers"
            },
            {
                "name": "String",
                "slug": "string"
            }
        ],
        "companyNames": [
            "meta",
            "bloomberg",
            "uber"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/check-if-string-is-a-prefix-of-array/description"
    },
    "2119": {
        "difficulty": "HARD",
        "id": 2119,
        "questionFrontendId": "2009",
        "title": "Minimum Number of Operations to Make Array Continuous",
        "titleSlug": "minimum-number-of-operations-to-make-array-continuous",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Binary Search",
                "slug": "binary-search"
            },
            {
                "name": "Sliding Window",
                "slug": "sliding-window"
            }
        ],
        "companyNames": [
            "meta",
            "bloomberg",
            "adobe",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 6,
        "url": "https://leetcode.com/problems/minimum-number-of-operations-to-make-array-continuous/description"
    },
    "2339": {
        "difficulty": "MEDIUM",
        "id": 2339,
        "questionFrontendId": "2261",
        "title": "K Divisible Elements Subarrays",
        "titleSlug": "k-divisible-elements-subarrays",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Trie",
                "slug": "trie"
            },
            {
                "name": "Rolling Hash",
                "slug": "rolling-hash"
            },
            {
                "name": "Hash Function",
                "slug": "hash-function"
            },
            {
                "name": "Enumeration",
                "slug": "enumeration"
            }
        ],
        "companyNames": [
            "meta",
            "amazon",
            "uber"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/k-divisible-elements-subarrays/description"
    },
    "2673": {
        "difficulty": "MEDIUM",
        "id": 2673,
        "questionFrontendId": "2555",
        "title": "Maximize Win From Two Segments",
        "titleSlug": "maximize-win-from-two-segments",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Binary Search",
                "slug": "binary-search"
            },
            {
                "name": "Sliding Window",
                "slug": "sliding-window"
            }
        ],
        "companyNames": [
            "meta",
            "uber"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/maximize-win-from-two-segments/description"
    },
    "6": {
        "difficulty": "MEDIUM",
        "id": 6,
        "questionFrontendId": "6",
        "title": "Zigzag Conversion",
        "titleSlug": "zigzag-conversion",
        "topicTags": [
            {
                "name": "String",
                "slug": "string"
            }
        ],
        "companyNames": [
            "meta",
            "tiktok",
            "microsoft",
            "oracle",
            "goldman_sachs",
            "bloomberg",
            "apple",
            "adobe",
            "cisco",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 12,
        "url": "https://leetcode.com/problems/zigzag-conversion/description"
    },
    "55": {
        "difficulty": "MEDIUM",
        "id": 55,
        "questionFrontendId": "55",
        "title": "Jump Game",
        "titleSlug": "jump-game",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            }
        ],
        "companyNames": [
            "meta",
            "tiktok",
            "microsoft",
            "oracle",
            "goldman_sachs",
            "bloomberg",
            "apple",
            "adobe",
            "walmart_labs",
            "tcs",
            "doordash",
            "cisco",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 15,
        "url": "https://leetcode.com/problems/jump-game/description"
    },
    "73": {
        "difficulty": "MEDIUM",
        "id": 73,
        "questionFrontendId": "73",
        "title": "Set Matrix Zeroes",
        "titleSlug": "set-matrix-zeroes",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Matrix",
                "slug": "matrix"
            }
        ],
        "companyNames": [
            "meta",
            "microsoft",
            "oracle",
            "goldman_sachs",
            "bloomberg",
            "apple",
            "adobe",
            "nvidia",
            "tcs",
            "accenture",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 13,
        "url": "https://leetcode.com/problems/set-matrix-zeroes/description"
    },
    "133": {
        "difficulty": "MEDIUM",
        "id": 133,
        "questionFrontendId": "133",
        "title": "Clone Graph",
        "titleSlug": "clone-graph",
        "topicTags": [
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Breadth-First Search",
                "slug": "breadth-first-search"
            },
            {
                "name": "Graph",
                "slug": "graph"
            }
        ],
        "companyNames": [
            "meta",
            "tiktok",
            "microsoft",
            "bloomberg",
            "apple",
            "adobe",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 9,
        "url": "https://leetcode.com/problems/clone-graph/description"
    },
    "161": {
        "difficulty": "MEDIUM",
        "id": 161,
        "questionFrontendId": "161",
        "title": "One Edit Distance",
        "titleSlug": "one-edit-distance",
        "topicTags": [
            {
                "name": "Two Pointers",
                "slug": "two-pointers"
            },
            {
                "name": "String",
                "slug": "string"
            }
        ],
        "companyNames": [
            "meta",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 4,
        "url": "https://leetcode.com/problems/one-edit-distance/description"
    },
    "186": {
        "difficulty": "MEDIUM",
        "id": 186,
        "questionFrontendId": "186",
        "title": "Reverse Words in a String II",
        "titleSlug": "reverse-words-in-a-string-ii",
        "topicTags": [
            {
                "name": "Two Pointers",
                "slug": "two-pointers"
            },
            {
                "name": "String",
                "slug": "string"
            }
        ],
        "companyNames": [
            "meta",
            "microsoft",
            "apple",
            "amazon",
            "uber"
        ],
        "frequencyCount": 5,
        "url": "https://leetcode.com/problems/reverse-words-in-a-string-ii/description"
    },
    "234": {
        "difficulty": "EASY",
        "id": 234,
        "questionFrontendId": "234",
        "title": "Palindrome Linked List",
        "titleSlug": "palindrome-linked-list",
        "topicTags": [
            {
                "name": "Linked List",
                "slug": "linked-list"
            },
            {
                "name": "Two Pointers",
                "slug": "two-pointers"
            },
            {
                "name": "Stack",
                "slug": "stack"
            },
            {
                "name": "Recursion",
                "slug": "recursion"
            }
        ],
        "companyNames": [
            "meta",
            "microsoft",
            "oracle",
            "bloomberg",
            "apple",
            "adobe",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 9,
        "url": "https://leetcode.com/problems/palindrome-linked-list/description"
    },
    "249": {
        "difficulty": "MEDIUM",
        "id": 249,
        "questionFrontendId": "249",
        "title": "Group Shifted Strings",
        "titleSlug": "group-shifted-strings",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "String",
                "slug": "string"
            }
        ],
        "companyNames": [
            "meta",
            "google",
            "uber"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/group-shifted-strings/description"
    },
    "266": {
        "difficulty": "EASY",
        "id": 266,
        "questionFrontendId": "266",
        "title": "Palindrome Permutation",
        "titleSlug": "palindrome-permutation",
        "topicTags": [
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Bit Manipulation",
                "slug": "bit-manipulation"
            }
        ],
        "companyNames": [
            "meta",
            "microsoft",
            "bloomberg",
            "google",
            "uber"
        ],
        "frequencyCount": 5,
        "url": "https://leetcode.com/problems/palindrome-permutation/description"
    },
    "291": {
        "difficulty": "MEDIUM",
        "id": 291,
        "questionFrontendId": "291",
        "title": "Word Pattern II",
        "titleSlug": "word-pattern-ii",
        "topicTags": [
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Backtracking",
                "slug": "backtracking"
            }
        ],
        "companyNames": [
            "meta",
            "oracle",
            "uber"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/word-pattern-ii/description"
    },
    "300": {
        "difficulty": "MEDIUM",
        "id": 300,
        "questionFrontendId": "300",
        "title": "Longest Increasing Subsequence",
        "titleSlug": "longest-increasing-subsequence",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Binary Search",
                "slug": "binary-search"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            }
        ],
        "companyNames": [
            "meta",
            "tiktok",
            "microsoft",
            "oracle",
            "goldman_sachs",
            "bloomberg",
            "apple",
            "adobe",
            "walmart_labs",
            "accenture",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 13,
        "url": "https://leetcode.com/problems/longest-increasing-subsequence/description"
    },
    "332": {
        "difficulty": "HARD",
        "id": 332,
        "questionFrontendId": "332",
        "title": "Reconstruct Itinerary",
        "titleSlug": "reconstruct-itinerary",
        "topicTags": [
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Graph",
                "slug": "graph"
            },
            {
                "name": "Eulerian Circuit",
                "slug": "eulerian-circuit"
            }
        ],
        "companyNames": [
            "meta",
            "tiktok",
            "microsoft",
            "bloomberg",
            "apple",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 8,
        "url": "https://leetcode.com/problems/reconstruct-itinerary/description"
    },
    "535": {
        "difficulty": "MEDIUM",
        "id": 535,
        "questionFrontendId": "535",
        "title": "Encode and Decode TinyURL",
        "titleSlug": "encode-and-decode-tinyurl",
        "topicTags": [
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Design",
                "slug": "design"
            },
            {
                "name": "Hash Function",
                "slug": "hash-function"
            }
        ],
        "companyNames": [
            "meta",
            "microsoft",
            "adobe",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 6,
        "url": "https://leetcode.com/problems/encode-and-decode-tinyurl/description"
    },
    "690": {
        "difficulty": "MEDIUM",
        "id": 690,
        "questionFrontendId": "690",
        "title": "Employee Importance",
        "titleSlug": "employee-importance",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Tree",
                "slug": "tree"
            },
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Breadth-First Search",
                "slug": "breadth-first-search"
            }
        ],
        "companyNames": [
            "meta",
            "google",
            "uber"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/employee-importance/description"
    },
    "699": {
        "difficulty": "HARD",
        "id": 699,
        "questionFrontendId": "699",
        "title": "Falling Squares",
        "titleSlug": "falling-squares",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Segment Tree",
                "slug": "segment-tree"
            },
            {
                "name": "Ordered Set",
                "slug": "ordered-set"
            }
        ],
        "companyNames": [
            "meta",
            "uber"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/falling-squares/description"
    },
    "894": {
        "difficulty": "HARD",
        "id": 894,
        "questionFrontendId": "710",
        "title": "Random Pick with Blacklist",
        "titleSlug": "random-pick-with-blacklist",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Binary Search",
                "slug": "binary-search"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            },
            {
                "name": "Randomized",
                "slug": "randomized"
            }
        ],
        "companyNames": [
            "meta",
            "google",
            "uber"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/random-pick-with-blacklist/description"
    },
    "999": {
        "difficulty": "MEDIUM",
        "id": 999,
        "questionFrontendId": "959",
        "title": "Regions Cut By Slashes",
        "titleSlug": "regions-cut-by-slashes",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Breadth-First Search",
                "slug": "breadth-first-search"
            },
            {
                "name": "Union Find",
                "slug": "union-find"
            },
            {
                "name": "Matrix",
                "slug": "matrix"
            }
        ],
        "companyNames": [
            "meta",
            "microsoft",
            "bloomberg",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 6,
        "url": "https://leetcode.com/problems/regions-cut-by-slashes/description"
    },
    "1066": {
        "difficulty": "EASY",
        "id": 1066,
        "questionFrontendId": "1064",
        "title": "Fixed Point",
        "titleSlug": "fixed-point",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Binary Search",
                "slug": "binary-search"
            }
        ],
        "companyNames": [
            "meta",
            "uber"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/fixed-point/description"
    },
    "1111": {
        "difficulty": "MEDIUM",
        "id": 1111,
        "questionFrontendId": "1039",
        "title": "Minimum Score Triangulation of Polygon",
        "titleSlug": "minimum-score-triangulation-of-polygon",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            }
        ],
        "companyNames": [
            "meta",
            "bloomberg",
            "apple",
            "adobe",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 7,
        "url": "https://leetcode.com/problems/minimum-score-triangulation-of-polygon/description"
    },
    "1456": {
        "difficulty": "MEDIUM",
        "id": 1456,
        "questionFrontendId": "1334",
        "title": "Find the City With the Smallest Number of Neighbors at a Threshold Distance",
        "titleSlug": "find-the-city-with-the-smallest-number-of-neighbors-at-a-threshold-distance",
        "topicTags": [
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Graph",
                "slug": "graph"
            },
            {
                "name": "Shortest Path",
                "slug": "shortest-path"
            }
        ],
        "companyNames": [
            "meta",
            "microsoft",
            "bloomberg",
            "adobe",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 7,
        "url": "https://leetcode.com/problems/find-the-city-with-the-smallest-number-of-neighbors-at-a-threshold-distance/description"
    },
    "1643": {
        "difficulty": "MEDIUM",
        "id": 1643,
        "questionFrontendId": "1519",
        "title": "Number of Nodes in the Sub-Tree With the Same Label",
        "titleSlug": "number-of-nodes-in-the-sub-tree-with-the-same-label",
        "topicTags": [
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Tree",
                "slug": "tree"
            },
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Breadth-First Search",
                "slug": "breadth-first-search"
            },
            {
                "name": "Counting",
                "slug": "counting"
            }
        ],
        "companyNames": [
            "meta",
            "amazon",
            "uber"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/number-of-nodes-in-the-sub-tree-with-the-same-label/description"
    },
    "1779": {
        "difficulty": "HARD",
        "id": 1779,
        "questionFrontendId": "1635",
        "title": "Hopper Company Queries I",
        "titleSlug": "hopper-company-queries-i",
        "topicTags": [
            {
                "name": "Database",
                "slug": "database"
            }
        ],
        "companyNames": [
            "meta",
            "uber"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/hopper-company-queries-i/description"
    },
    "1785": {
        "difficulty": "HARD",
        "id": 1785,
        "questionFrontendId": "1645",
        "title": "Hopper Company Queries II",
        "titleSlug": "hopper-company-queries-ii",
        "topicTags": [
            {
                "name": "Database",
                "slug": "database"
            }
        ],
        "companyNames": [
            "meta",
            "uber"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/hopper-company-queries-ii/description"
    },
    "1795": {
        "difficulty": "HARD",
        "id": 1795,
        "questionFrontendId": "1651",
        "title": "Hopper Company Queries III",
        "titleSlug": "hopper-company-queries-iii",
        "topicTags": [
            {
                "name": "Database",
                "slug": "database"
            }
        ],
        "companyNames": [
            "meta",
            "uber"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/hopper-company-queries-iii/description"
    },
    "1940": {
        "difficulty": "MEDIUM",
        "id": 1940,
        "questionFrontendId": "1829",
        "title": "Maximum XOR for Each Query",
        "titleSlug": "maximum-xor-for-each-query",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Bit Manipulation",
                "slug": "bit-manipulation"
            },
            {
                "name": "Prefix Sum",
                "slug": "prefix-sum"
            }
        ],
        "companyNames": [
            "meta",
            "uber"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/maximum-xor-for-each-query/description"
    },
    "1946": {
        "difficulty": "MEDIUM",
        "id": 1946,
        "questionFrontendId": "1818",
        "title": "Minimum Absolute Sum Difference",
        "titleSlug": "minimum-absolute-sum-difference",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Binary Search",
                "slug": "binary-search"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            },
            {
                "name": "Ordered Set",
                "slug": "ordered-set"
            }
        ],
        "companyNames": [
            "meta",
            "amazon",
            "uber"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/minimum-absolute-sum-difference/description"
    },
    "1985": {
        "difficulty": "MEDIUM",
        "id": 1985,
        "questionFrontendId": "1856",
        "title": "Maximum Subarray Min-Product",
        "titleSlug": "maximum-subarray-min-product",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Stack",
                "slug": "stack"
            },
            {
                "name": "Monotonic Stack",
                "slug": "monotonic-stack"
            },
            {
                "name": "Prefix Sum",
                "slug": "prefix-sum"
            }
        ],
        "companyNames": [
            "meta",
            "amazon",
            "uber"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/maximum-subarray-min-product/description"
    },
    "2065": {
        "difficulty": "HARD",
        "id": 2065,
        "questionFrontendId": "2307",
        "title": "Check for Contradictions in Equations",
        "titleSlug": "check-for-contradictions-in-equations",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Union Find",
                "slug": "union-find"
            },
            {
                "name": "Graph",
                "slug": "graph"
            }
        ],
        "companyNames": [
            "meta",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 4,
        "url": "https://leetcode.com/problems/check-for-contradictions-in-equations/description"
    },
    "2085": {
        "difficulty": "MEDIUM",
        "id": 2085,
        "questionFrontendId": "1968",
        "title": "Array With Elements Not Equal to Average of Neighbors",
        "titleSlug": "array-with-elements-not-equal-to-average-of-neighbors",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ],
        "companyNames": [
            "meta",
            "uber"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/array-with-elements-not-equal-to-average-of-neighbors/description"
    },
    "2099": {
        "difficulty": "EASY",
        "id": 2099,
        "questionFrontendId": "1967",
        "title": "Number of Strings That Appear as Substrings in Word",
        "titleSlug": "number-of-strings-that-appear-as-substrings-in-word",
        "topicTags": [
            {
                "name": "String",
                "slug": "string"
            }
        ],
        "companyNames": [
            "meta",
            "uber"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/number-of-strings-that-appear-as-substrings-in-word/description"
    },
    "2162": {
        "difficulty": "HARD",
        "id": 2162,
        "questionFrontendId": "2035",
        "title": "Partition Array Into Two Arrays to Minimize Sum Difference",
        "titleSlug": "partition-array-into-two-arrays-to-minimize-sum-difference",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Two Pointers",
                "slug": "two-pointers"
            },
            {
                "name": "Binary Search",
                "slug": "binary-search"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Bit Manipulation",
                "slug": "bit-manipulation"
            },
            {
                "name": "Ordered Set",
                "slug": "ordered-set"
            },
            {
                "name": "Bitmask",
                "slug": "bitmask"
            }
        ],
        "companyNames": [
            "meta",
            "microsoft",
            "bloomberg",
            "apple",
            "adobe",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 8,
        "url": "https://leetcode.com/problems/partition-array-into-two-arrays-to-minimize-sum-difference/description"
    },
    "2331": {
        "difficulty": "EASY",
        "id": 2331,
        "questionFrontendId": "2248",
        "title": "Intersection of Multiple Arrays",
        "titleSlug": "intersection-of-multiple-arrays",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            },
            {
                "name": "Counting",
                "slug": "counting"
            }
        ],
        "companyNames": [
            "meta",
            "amazon",
            "uber"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/intersection-of-multiple-arrays/description"
    },
    "2344": {
        "difficulty": "HARD",
        "id": 2344,
        "questionFrontendId": "2258",
        "title": "Escape the Spreading Fire",
        "titleSlug": "escape-the-spreading-fire",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Binary Search",
                "slug": "binary-search"
            },
            {
                "name": "Breadth-First Search",
                "slug": "breadth-first-search"
            },
            {
                "name": "Matrix",
                "slug": "matrix"
            }
        ],
        "companyNames": [
            "meta",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 4,
        "url": "https://leetcode.com/problems/escape-the-spreading-fire/description"
    },
    "2361": {
        "difficulty": "EASY",
        "id": 2361,
        "questionFrontendId": "2243",
        "title": "Calculate Digit Sum of a String",
        "titleSlug": "calculate-digit-sum-of-a-string",
        "topicTags": [
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Simulation",
                "slug": "simulation"
            }
        ],
        "companyNames": [
            "meta",
            "uber"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/calculate-digit-sum-of-a-string/description"
    },
    "2418": {
        "difficulty": "MEDIUM",
        "id": 2418,
        "questionFrontendId": "2333",
        "title": "Minimum Sum of Squared Difference",
        "titleSlug": "minimum-sum-of-squared-difference",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            },
            {
                "name": "Heap (Priority Queue)",
                "slug": "heap-priority-queue"
            }
        ],
        "companyNames": [
            "meta",
            "microsoft",
            "amazon",
            "uber"
        ],
        "frequencyCount": 4,
        "url": "https://leetcode.com/problems/minimum-sum-of-squared-difference/description"
    },
    "2425": {
        "difficulty": "MEDIUM",
        "id": 2425,
        "questionFrontendId": "2282",
        "title": "Number of People That Can Be Seen in a Grid",
        "titleSlug": "number-of-people-that-can-be-seen-in-a-grid",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Stack",
                "slug": "stack"
            },
            {
                "name": "Matrix",
                "slug": "matrix"
            },
            {
                "name": "Monotonic Stack",
                "slug": "monotonic-stack"
            }
        ],
        "companyNames": [
            "meta",
            "uber"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/number-of-people-that-can-be-seen-in-a-grid/description"
    },
    "2527": {
        "difficulty": "HARD",
        "id": 2527,
        "questionFrontendId": "2444",
        "title": "Count Subarrays With Fixed Bounds",
        "titleSlug": "count-subarrays-with-fixed-bounds",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Queue",
                "slug": "queue"
            },
            {
                "name": "Sliding Window",
                "slug": "sliding-window"
            },
            {
                "name": "Monotonic Queue",
                "slug": "monotonic-queue"
            }
        ],
        "companyNames": [
            "meta",
            "microsoft",
            "oracle",
            "bloomberg",
            "apple",
            "adobe",
            "doordash",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 10,
        "url": "https://leetcode.com/problems/count-subarrays-with-fixed-bounds/description"
    },
    "3034": {
        "difficulty": "EASY",
        "id": 3034,
        "questionFrontendId": "2848",
        "title": "Points That Intersect With Cars",
        "titleSlug": "points-that-intersect-with-cars",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Prefix Sum",
                "slug": "prefix-sum"
            }
        ],
        "companyNames": [
            "meta",
            "uber"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/points-that-intersect-with-cars/description"
    },
    "3198": {
        "difficulty": "HARD",
        "id": 3198,
        "questionFrontendId": "2912",
        "title": "Number of Ways to Reach Destination in the Grid",
        "titleSlug": "number-of-ways-to-reach-destination-in-the-grid",
        "topicTags": [
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Combinatorics",
                "slug": "combinatorics"
            }
        ],
        "companyNames": [
            "meta",
            "uber"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/number-of-ways-to-reach-destination-in-the-grid/description"
    },
    "3333": {
        "difficulty": "MEDIUM",
        "id": 3333,
        "questionFrontendId": "3023",
        "title": "Find Pattern in Infinite Stream I",
        "titleSlug": "find-pattern-in-infinite-stream-i",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Sliding Window",
                "slug": "sliding-window"
            },
            {
                "name": "Rolling Hash",
                "slug": "rolling-hash"
            },
            {
                "name": "String Matching",
                "slug": "string-matching"
            },
            {
                "name": "Hash Function",
                "slug": "hash-function"
            }
        ],
        "companyNames": [
            "meta",
            "uber"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/find-pattern-in-infinite-stream-i/description"
    },
    "3352": {
        "difficulty": "HARD",
        "id": 3352,
        "questionFrontendId": "3037",
        "title": "Find Pattern in Infinite Stream II",
        "titleSlug": "find-pattern-in-infinite-stream-ii",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Sliding Window",
                "slug": "sliding-window"
            },
            {
                "name": "Rolling Hash",
                "slug": "rolling-hash"
            },
            {
                "name": "String Matching",
                "slug": "string-matching"
            },
            {
                "name": "Hash Function",
                "slug": "hash-function"
            }
        ],
        "companyNames": [
            "meta",
            "uber"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/find-pattern-in-infinite-stream-ii/description"
    },
    "3378": {
        "difficulty": "MEDIUM",
        "id": 3378,
        "questionFrontendId": "3073",
        "title": "Maximum Increasing Triplet Value",
        "titleSlug": "maximum-increasing-triplet-value",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Ordered Set",
                "slug": "ordered-set"
            }
        ],
        "companyNames": [
            "meta",
            "uber"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/maximum-increasing-triplet-value/description"
    },
    "3385": {
        "difficulty": "MEDIUM",
        "id": 3385,
        "questionFrontendId": "3078",
        "title": "Match Alphanumerical Pattern in Matrix I",
        "titleSlug": "match-alphanumerical-pattern-in-matrix-i",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Matrix",
                "slug": "matrix"
            }
        ],
        "companyNames": [
            "meta",
            "uber"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/match-alphanumerical-pattern-in-matrix-i/description"
    },
    "3475": {
        "difficulty": "MEDIUM",
        "id": 3475,
        "questionFrontendId": "3191",
        "title": "Minimum Operations to Make Binary Array Elements Equal to One I",
        "titleSlug": "minimum-operations-to-make-binary-array-elements-equal-to-one-i",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Bit Manipulation",
                "slug": "bit-manipulation"
            },
            {
                "name": "Queue",
                "slug": "queue"
            },
            {
                "name": "Sliding Window",
                "slug": "sliding-window"
            },
            {
                "name": "Prefix Sum",
                "slug": "prefix-sum"
            }
        ],
        "companyNames": [
            "meta",
            "amazon",
            "uber"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/minimum-operations-to-make-binary-array-elements-equal-to-one-i/description"
    },
    "3477": {
        "difficulty": "MEDIUM",
        "id": 3477,
        "questionFrontendId": "3192",
        "title": "Minimum Operations to Make Binary Array Elements Equal to One II",
        "titleSlug": "minimum-operations-to-make-binary-array-elements-equal-to-one-ii",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            }
        ],
        "companyNames": [
            "meta",
            "uber"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/minimum-operations-to-make-binary-array-elements-equal-to-one-ii/description"
    },
    "58": {
        "difficulty": "EASY",
        "id": 58,
        "questionFrontendId": "58",
        "title": "Length of Last Word",
        "titleSlug": "length-of-last-word",
        "topicTags": [
            {
                "name": "String",
                "slug": "string"
            }
        ],
        "companyNames": [
            "meta",
            "microsoft",
            "bloomberg",
            "apple",
            "adobe",
            "tcs",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 9,
        "url": "https://leetcode.com/problems/length-of-last-word/description"
    },
    "322": {
        "difficulty": "MEDIUM",
        "id": 322,
        "questionFrontendId": "322",
        "title": "Coin Change",
        "titleSlug": "coin-change",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Breadth-First Search",
                "slug": "breadth-first-search"
            }
        ],
        "companyNames": [
            "meta",
            "tiktok",
            "microsoft",
            "oracle",
            "bloomberg",
            "apple",
            "adobe",
            "walmart_labs",
            "airbnb",
            "tcs",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 13,
        "url": "https://leetcode.com/problems/coin-change/description"
    },
    "778": {
        "difficulty": "MEDIUM",
        "id": 778,
        "questionFrontendId": "767",
        "title": "Reorganize String",
        "titleSlug": "reorganize-string",
        "topicTags": [
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            },
            {
                "name": "Heap (Priority Queue)",
                "slug": "heap-priority-queue"
            },
            {
                "name": "Counting",
                "slug": "counting"
            }
        ],
        "companyNames": [
            "meta",
            "tiktok",
            "microsoft",
            "oracle",
            "goldman_sachs",
            "bloomberg",
            "apple",
            "adobe",
            "walmart_labs",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 12,
        "url": "https://leetcode.com/problems/reorganize-string/description"
    },
    "792": {
        "difficulty": "EASY",
        "id": 792,
        "questionFrontendId": "704",
        "title": "Binary Search",
        "titleSlug": "binary-search",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Binary Search",
                "slug": "binary-search"
            }
        ],
        "companyNames": [
            "meta",
            "microsoft",
            "bloomberg",
            "apple",
            "adobe",
            "nvidia",
            "tcs",
            "accenture",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 11,
        "url": "https://leetcode.com/problems/binary-search/description"
    },
    "1019": {
        "difficulty": "EASY",
        "id": 1019,
        "questionFrontendId": "977",
        "title": "Squares of a Sorted Array",
        "titleSlug": "squares-of-a-sorted-array",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Two Pointers",
                "slug": "two-pointers"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ],
        "companyNames": [
            "meta",
            "tiktok",
            "microsoft",
            "oracle",
            "bloomberg",
            "apple",
            "adobe",
            "walmart_labs",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 11,
        "url": "https://leetcode.com/problems/squares-of-a-sorted-array/description"
    },
    "1028": {
        "difficulty": "MEDIUM",
        "id": 1028,
        "questionFrontendId": "986",
        "title": "Interval List Intersections",
        "titleSlug": "interval-list-intersections",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Two Pointers",
                "slug": "two-pointers"
            }
        ],
        "companyNames": [
            "meta",
            "bloomberg",
            "apple",
            "doordash",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 7,
        "url": "https://leetcode.com/problems/interval-list-intersections/description"
    },
    "2596": {
        "difficulty": "HARD",
        "id": 2596,
        "questionFrontendId": "2508",
        "title": "Add Edges to Make Degrees of All Nodes Even",
        "titleSlug": "add-edges-to-make-degrees-of-all-nodes-even",
        "topicTags": [
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Graph",
                "slug": "graph"
            }
        ],
        "companyNames": [
            "meta",
            "uber"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/add-edges-to-make-degrees-of-all-nodes-even/description"
    },
    "151": {
        "difficulty": "MEDIUM",
        "id": 151,
        "questionFrontendId": "151",
        "title": "Reverse Words in a String",
        "titleSlug": "reverse-words-in-a-string",
        "topicTags": [
            {
                "name": "Two Pointers",
                "slug": "two-pointers"
            },
            {
                "name": "String",
                "slug": "string"
            }
        ],
        "companyNames": [
            "meta",
            "tiktok",
            "microsoft",
            "goldman_sachs",
            "bloomberg",
            "apple",
            "adobe",
            "walmart_labs",
            "tcs",
            "accenture",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 13,
        "url": "https://leetcode.com/problems/reverse-words-in-a-string/description"
    },
    "218": {
        "difficulty": "HARD",
        "id": 218,
        "questionFrontendId": "218",
        "title": "The Skyline Problem",
        "titleSlug": "the-skyline-problem",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Divide and Conquer",
                "slug": "divide-and-conquer"
            },
            {
                "name": "Binary Indexed Tree",
                "slug": "binary-indexed-tree"
            },
            {
                "name": "Segment Tree",
                "slug": "segment-tree"
            },
            {
                "name": "Line Sweep",
                "slug": "line-sweep"
            },
            {
                "name": "Heap (Priority Queue)",
                "slug": "heap-priority-queue"
            },
            {
                "name": "Ordered Set",
                "slug": "ordered-set"
            }
        ],
        "companyNames": [
            "meta",
            "tiktok",
            "microsoft",
            "goldman_sachs",
            "bloomberg",
            "apple",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 9,
        "url": "https://leetcode.com/problems/the-skyline-problem/description"
    },
    "231": {
        "difficulty": "EASY",
        "id": 231,
        "questionFrontendId": "231",
        "title": "Power of Two",
        "titleSlug": "power-of-two",
        "topicTags": [
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Bit Manipulation",
                "slug": "bit-manipulation"
            },
            {
                "name": "Recursion",
                "slug": "recursion"
            }
        ],
        "companyNames": [
            "meta",
            "microsoft",
            "bloomberg",
            "apple",
            "adobe",
            "tcs",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 9,
        "url": "https://leetcode.com/problems/power-of-two/description"
    },
    "253": {
        "difficulty": "MEDIUM",
        "id": 253,
        "questionFrontendId": "253",
        "title": "Meeting Rooms II",
        "titleSlug": "meeting-rooms-ii",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Two Pointers",
                "slug": "two-pointers"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            },
            {
                "name": "Heap (Priority Queue)",
                "slug": "heap-priority-queue"
            },
            {
                "name": "Prefix Sum",
                "slug": "prefix-sum"
            }
        ],
        "companyNames": [
            "meta",
            "tiktok",
            "microsoft",
            "oracle",
            "goldman_sachs",
            "bloomberg",
            "apple",
            "adobe",
            "nvidia",
            "doordash",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 13,
        "url": "https://leetcode.com/problems/meeting-rooms-ii/description"
    },
    "328": {
        "difficulty": "MEDIUM",
        "id": 328,
        "questionFrontendId": "328",
        "title": "Odd Even Linked List",
        "titleSlug": "odd-even-linked-list",
        "topicTags": [
            {
                "name": "Linked List",
                "slug": "linked-list"
            }
        ],
        "companyNames": [
            "meta",
            "tiktok",
            "microsoft",
            "oracle",
            "bloomberg",
            "apple",
            "adobe",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 10,
        "url": "https://leetcode.com/problems/odd-even-linked-list/description"
    },
    "729": {
        "difficulty": "MEDIUM",
        "id": 729,
        "questionFrontendId": "729",
        "title": "My Calendar I",
        "titleSlug": "my-calendar-i",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Binary Search",
                "slug": "binary-search"
            },
            {
                "name": "Design",
                "slug": "design"
            },
            {
                "name": "Segment Tree",
                "slug": "segment-tree"
            },
            {
                "name": "Ordered Set",
                "slug": "ordered-set"
            }
        ],
        "companyNames": [
            "meta",
            "microsoft",
            "apple",
            "adobe",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 7,
        "url": "https://leetcode.com/problems/my-calendar-i/description"
    },
    "971": {
        "difficulty": "MEDIUM",
        "id": 971,
        "questionFrontendId": "934",
        "title": "Shortest Bridge",
        "titleSlug": "shortest-bridge",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Breadth-First Search",
                "slug": "breadth-first-search"
            },
            {
                "name": "Matrix",
                "slug": "matrix"
            }
        ],
        "companyNames": [
            "meta",
            "microsoft",
            "bloomberg",
            "apple",
            "adobe",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 8,
        "url": "https://leetcode.com/problems/shortest-bridge/description"
    },
    "25": {
        "difficulty": "HARD",
        "id": 25,
        "questionFrontendId": "25",
        "title": "Reverse Nodes in k-Group",
        "titleSlug": "reverse-nodes-in-k-group",
        "topicTags": [
            {
                "name": "Linked List",
                "slug": "linked-list"
            },
            {
                "name": "Recursion",
                "slug": "recursion"
            }
        ],
        "companyNames": [
            "meta",
            "tiktok",
            "microsoft",
            "goldman_sachs",
            "bloomberg",
            "apple",
            "adobe",
            "walmart_labs",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 11,
        "url": "https://leetcode.com/problems/reverse-nodes-in-k-group/description"
    },
    "29": {
        "difficulty": "MEDIUM",
        "id": 29,
        "questionFrontendId": "29",
        "title": "Divide Two Integers",
        "titleSlug": "divide-two-integers",
        "topicTags": [
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Bit Manipulation",
                "slug": "bit-manipulation"
            }
        ],
        "companyNames": [
            "meta",
            "tiktok",
            "microsoft",
            "oracle",
            "bloomberg",
            "apple",
            "adobe",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 10,
        "url": "https://leetcode.com/problems/divide-two-integers/description"
    },
    "41": {
        "difficulty": "HARD",
        "id": 41,
        "questionFrontendId": "41",
        "title": "First Missing Positive",
        "titleSlug": "first-missing-positive",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            }
        ],
        "companyNames": [
            "meta",
            "tiktok",
            "microsoft",
            "oracle",
            "goldman_sachs",
            "bloomberg",
            "apple",
            "adobe",
            "walmart_labs",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 12,
        "url": "https://leetcode.com/problems/first-missing-positive/description"
    },
    "67": {
        "difficulty": "EASY",
        "id": 67,
        "questionFrontendId": "67",
        "title": "Add Binary",
        "titleSlug": "add-binary",
        "topicTags": [
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Bit Manipulation",
                "slug": "bit-manipulation"
            },
            {
                "name": "Simulation",
                "slug": "simulation"
            }
        ],
        "companyNames": [
            "meta",
            "microsoft",
            "bloomberg",
            "apple",
            "adobe",
            "walmart_labs",
            "tcs",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 10,
        "url": "https://leetcode.com/problems/add-binary/description"
    },
    "75": {
        "difficulty": "MEDIUM",
        "id": 75,
        "questionFrontendId": "75",
        "title": "Sort Colors",
        "titleSlug": "sort-colors",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Two Pointers",
                "slug": "two-pointers"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ],
        "companyNames": [
            "meta",
            "tiktok",
            "microsoft",
            "oracle",
            "bloomberg",
            "apple",
            "adobe",
            "walmart_labs",
            "tcs",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 12,
        "url": "https://leetcode.com/problems/sort-colors/description"
    },
    "94": {
        "difficulty": "EASY",
        "id": 94,
        "questionFrontendId": "94",
        "title": "Binary Tree Inorder Traversal",
        "titleSlug": "binary-tree-inorder-traversal",
        "topicTags": [
            {
                "name": "Stack",
                "slug": "stack"
            },
            {
                "name": "Tree",
                "slug": "tree"
            },
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Binary Tree",
                "slug": "binary-tree"
            }
        ],
        "companyNames": [
            "meta",
            "microsoft",
            "oracle",
            "bloomberg",
            "apple",
            "adobe",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 9,
        "url": "https://leetcode.com/problems/binary-tree-inorder-traversal/description"
    },
    "141": {
        "difficulty": "EASY",
        "id": 141,
        "questionFrontendId": "141",
        "title": "Linked List Cycle",
        "titleSlug": "linked-list-cycle",
        "topicTags": [
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Linked List",
                "slug": "linked-list"
            },
            {
                "name": "Two Pointers",
                "slug": "two-pointers"
            }
        ],
        "companyNames": [
            "meta",
            "tiktok",
            "microsoft",
            "oracle",
            "goldman_sachs",
            "bloomberg",
            "apple",
            "adobe",
            "walmart_labs",
            "cisco",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 13,
        "url": "https://leetcode.com/problems/linked-list-cycle/description"
    },
    "219": {
        "difficulty": "EASY",
        "id": 219,
        "questionFrontendId": "219",
        "title": "Contains Duplicate II",
        "titleSlug": "contains-duplicate-ii",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Sliding Window",
                "slug": "sliding-window"
            }
        ],
        "companyNames": [
            "meta",
            "microsoft",
            "goldman_sachs",
            "bloomberg",
            "apple",
            "adobe",
            "airbnb",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 10,
        "url": "https://leetcode.com/problems/contains-duplicate-ii/description"
    },
    "368": {
        "difficulty": "MEDIUM",
        "id": 368,
        "questionFrontendId": "368",
        "title": "Largest Divisible Subset",
        "titleSlug": "largest-divisible-subset",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ],
        "companyNames": [
            "meta",
            "microsoft",
            "bloomberg",
            "apple",
            "adobe",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 8,
        "url": "https://leetcode.com/problems/largest-divisible-subset/description"
    },
    "392": {
        "difficulty": "EASY",
        "id": 392,
        "questionFrontendId": "392",
        "title": "Is Subsequence",
        "titleSlug": "is-subsequence",
        "topicTags": [
            {
                "name": "Two Pointers",
                "slug": "two-pointers"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            }
        ],
        "companyNames": [
            "meta",
            "tiktok",
            "microsoft",
            "bloomberg",
            "apple",
            "adobe",
            "nvidia",
            "tcs",
            "accenture",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 12,
        "url": "https://leetcode.com/problems/is-subsequence/description"
    },
    "410": {
        "difficulty": "HARD",
        "id": 410,
        "questionFrontendId": "410",
        "title": "Split Array Largest Sum",
        "titleSlug": "split-array-largest-sum",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Binary Search",
                "slug": "binary-search"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            },
            {
                "name": "Prefix Sum",
                "slug": "prefix-sum"
            }
        ],
        "companyNames": [
            "meta",
            "tiktok",
            "microsoft",
            "bloomberg",
            "apple",
            "adobe",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 9,
        "url": "https://leetcode.com/problems/split-array-largest-sum/description"
    },
    "443": {
        "difficulty": "MEDIUM",
        "id": 443,
        "questionFrontendId": "443",
        "title": "String Compression",
        "titleSlug": "string-compression",
        "topicTags": [
            {
                "name": "Two Pointers",
                "slug": "two-pointers"
            },
            {
                "name": "String",
                "slug": "string"
            }
        ],
        "companyNames": [
            "meta",
            "tiktok",
            "microsoft",
            "oracle",
            "goldman_sachs",
            "bloomberg",
            "apple",
            "adobe",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 11,
        "url": "https://leetcode.com/problems/string-compression/description"
    },
    "503": {
        "difficulty": "MEDIUM",
        "id": 503,
        "questionFrontendId": "503",
        "title": "Next Greater Element II",
        "titleSlug": "next-greater-element-ii",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Stack",
                "slug": "stack"
            },
            {
                "name": "Monotonic Stack",
                "slug": "monotonic-stack"
            }
        ],
        "companyNames": [
            "meta",
            "tiktok",
            "microsoft",
            "bloomberg",
            "apple",
            "adobe",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 9,
        "url": "https://leetcode.com/problems/next-greater-element-ii/description"
    },
    "540": {
        "difficulty": "MEDIUM",
        "id": 540,
        "questionFrontendId": "540",
        "title": "Single Element in a Sorted Array",
        "titleSlug": "single-element-in-a-sorted-array",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Binary Search",
                "slug": "binary-search"
            }
        ],
        "companyNames": [
            "meta",
            "microsoft",
            "oracle",
            "bloomberg",
            "apple",
            "adobe",
            "nvidia",
            "tcs",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 11,
        "url": "https://leetcode.com/problems/single-element-in-a-sorted-array/description"
    },
    "794": {
        "difficulty": "HARD",
        "id": 794,
        "questionFrontendId": "778",
        "title": "Swim in Rising Water",
        "titleSlug": "swim-in-rising-water",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Binary Search",
                "slug": "binary-search"
            },
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Breadth-First Search",
                "slug": "breadth-first-search"
            },
            {
                "name": "Union Find",
                "slug": "union-find"
            },
            {
                "name": "Heap (Priority Queue)",
                "slug": "heap-priority-queue"
            },
            {
                "name": "Matrix",
                "slug": "matrix"
            }
        ],
        "companyNames": [
            "meta",
            "microsoft",
            "bloomberg",
            "apple",
            "doordash",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 8,
        "url": "https://leetcode.com/problems/swim-in-rising-water/description"
    },
    "882": {
        "difficulty": "MEDIUM",
        "id": 882,
        "questionFrontendId": "852",
        "title": "Peak Index in a Mountain Array",
        "titleSlug": "peak-index-in-a-mountain-array",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Binary Search",
                "slug": "binary-search"
            }
        ],
        "companyNames": [
            "meta",
            "microsoft",
            "bloomberg",
            "apple",
            "adobe",
            "tcs",
            "accenture",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 10,
        "url": "https://leetcode.com/problems/peak-index-in-a-mountain-array/description"
    },
    "2195": {
        "difficulty": "EASY",
        "id": 2195,
        "questionFrontendId": "2073",
        "title": "Time Needed to Buy Tickets",
        "titleSlug": "time-needed-to-buy-tickets",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Queue",
                "slug": "queue"
            },
            {
                "name": "Simulation",
                "slug": "simulation"
            }
        ],
        "companyNames": [
            "meta",
            "microsoft",
            "bloomberg",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 6,
        "url": "https://leetcode.com/problems/time-needed-to-buy-tickets/description"
    },
    "2383": {
        "difficulty": "EASY",
        "id": 2383,
        "questionFrontendId": "2235",
        "title": "Add Two Integers",
        "titleSlug": "add-two-integers",
        "topicTags": [
            {
                "name": "Math",
                "slug": "math"
            }
        ],
        "companyNames": [
            "meta",
            "microsoft",
            "bloomberg",
            "apple",
            "adobe",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 8,
        "url": "https://leetcode.com/problems/add-two-integers/description"
    },
    "16": {
        "difficulty": "MEDIUM",
        "id": 16,
        "questionFrontendId": "16",
        "title": "3Sum Closest",
        "titleSlug": "3sum-closest",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Two Pointers",
                "slug": "two-pointers"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ],
        "companyNames": [
            "meta",
            "tiktok",
            "microsoft",
            "bloomberg",
            "apple",
            "adobe",
            "tcs",
            "accenture",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 11,
        "url": "https://leetcode.com/problems/3sum-closest/description"
    },
    "18": {
        "difficulty": "MEDIUM",
        "id": 18,
        "questionFrontendId": "18",
        "title": "4Sum",
        "titleSlug": "4sum",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Two Pointers",
                "slug": "two-pointers"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ],
        "companyNames": [
            "meta",
            "tiktok",
            "microsoft",
            "oracle",
            "bloomberg",
            "apple",
            "adobe",
            "tcs",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 11,
        "url": "https://leetcode.com/problems/4sum/description"
    },
    "131": {
        "difficulty": "MEDIUM",
        "id": 131,
        "questionFrontendId": "131",
        "title": "Palindrome Partitioning",
        "titleSlug": "palindrome-partitioning",
        "topicTags": [
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Backtracking",
                "slug": "backtracking"
            }
        ],
        "companyNames": [
            "meta",
            "microsoft",
            "bloomberg",
            "apple",
            "adobe",
            "walmart_labs",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 9,
        "url": "https://leetcode.com/problems/palindrome-partitioning/description"
    },
    "160": {
        "difficulty": "EASY",
        "id": 160,
        "questionFrontendId": "160",
        "title": "Intersection of Two Linked Lists",
        "titleSlug": "intersection-of-two-linked-lists",
        "topicTags": [
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Linked List",
                "slug": "linked-list"
            },
            {
                "name": "Two Pointers",
                "slug": "two-pointers"
            }
        ],
        "companyNames": [
            "meta",
            "tiktok",
            "microsoft",
            "oracle",
            "goldman_sachs",
            "bloomberg",
            "apple",
            "adobe",
            "nvidia",
            "airbnb",
            "accenture",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 14,
        "url": "https://leetcode.com/problems/intersection-of-two-linked-lists/description"
    },
    "181": {
        "difficulty": "EASY",
        "id": 181,
        "questionFrontendId": "181",
        "title": "Employees Earning More Than Their Managers",
        "titleSlug": "employees-earning-more-than-their-managers",
        "topicTags": [
            {
                "name": "Database",
                "slug": "database"
            }
        ],
        "companyNames": [
            "meta",
            "microsoft",
            "oracle",
            "bloomberg",
            "apple",
            "adobe",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 9,
        "url": "https://leetcode.com/problems/employees-earning-more-than-their-managers/description"
    },
    "214": {
        "difficulty": "HARD",
        "id": 214,
        "questionFrontendId": "214",
        "title": "Shortest Palindrome",
        "titleSlug": "shortest-palindrome",
        "topicTags": [
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Rolling Hash",
                "slug": "rolling-hash"
            },
            {
                "name": "String Matching",
                "slug": "string-matching"
            },
            {
                "name": "Hash Function",
                "slug": "hash-function"
            }
        ],
        "companyNames": [
            "meta",
            "tiktok",
            "microsoft",
            "apple",
            "adobe",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 8,
        "url": "https://leetcode.com/problems/shortest-palindrome/description"
    },
    "278": {
        "difficulty": "EASY",
        "id": 278,
        "questionFrontendId": "278",
        "title": "First Bad Version",
        "titleSlug": "first-bad-version",
        "topicTags": [
            {
                "name": "Binary Search",
                "slug": "binary-search"
            },
            {
                "name": "Interactive",
                "slug": "interactive"
            }
        ],
        "companyNames": [
            "meta",
            "tiktok",
            "microsoft",
            "bloomberg",
            "apple",
            "adobe",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 9,
        "url": "https://leetcode.com/problems/first-bad-version/description"
    },
    "312": {
        "difficulty": "HARD",
        "id": 312,
        "questionFrontendId": "312",
        "title": "Burst Balloons",
        "titleSlug": "burst-balloons",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            }
        ],
        "companyNames": [
            "meta",
            "microsoft",
            "bloomberg",
            "apple",
            "adobe",
            "cisco",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 9,
        "url": "https://leetcode.com/problems/burst-balloons/description"
    },
    "330": {
        "difficulty": "HARD",
        "id": 330,
        "questionFrontendId": "330",
        "title": "Patching Array",
        "titleSlug": "patching-array",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            }
        ],
        "companyNames": [
            "meta",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 4,
        "url": "https://leetcode.com/problems/patching-array/description"
    },
    "361": {
        "difficulty": "MEDIUM",
        "id": 361,
        "questionFrontendId": "361",
        "title": "Bomb Enemy",
        "titleSlug": "bomb-enemy",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Matrix",
                "slug": "matrix"
            }
        ],
        "companyNames": [
            "meta",
            "google",
            "uber"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/bomb-enemy/description"
    },
    "394": {
        "difficulty": "MEDIUM",
        "id": 394,
        "questionFrontendId": "394",
        "title": "Decode String",
        "titleSlug": "decode-string",
        "topicTags": [
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Stack",
                "slug": "stack"
            },
            {
                "name": "Recursion",
                "slug": "recursion"
            }
        ],
        "companyNames": [
            "meta",
            "tiktok",
            "microsoft",
            "oracle",
            "goldman_sachs",
            "bloomberg",
            "apple",
            "adobe",
            "walmart_labs",
            "cisco",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 13,
        "url": "https://leetcode.com/problems/decode-string/description"
    },
    "417": {
        "difficulty": "MEDIUM",
        "id": 417,
        "questionFrontendId": "417",
        "title": "Pacific Atlantic Water Flow",
        "titleSlug": "pacific-atlantic-water-flow",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Breadth-First Search",
                "slug": "breadth-first-search"
            },
            {
                "name": "Matrix",
                "slug": "matrix"
            }
        ],
        "companyNames": [
            "meta",
            "tiktok",
            "goldman_sachs",
            "apple",
            "adobe",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 8,
        "url": "https://leetcode.com/problems/pacific-atlantic-water-flow/description"
    },
    "529": {
        "difficulty": "MEDIUM",
        "id": 529,
        "questionFrontendId": "529",
        "title": "Minesweeper",
        "titleSlug": "minesweeper",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Breadth-First Search",
                "slug": "breadth-first-search"
            },
            {
                "name": "Matrix",
                "slug": "matrix"
            }
        ],
        "companyNames": [
            "meta",
            "bloomberg",
            "apple",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 6,
        "url": "https://leetcode.com/problems/minesweeper/description"
    },
    "570": {
        "difficulty": "MEDIUM",
        "id": 570,
        "questionFrontendId": "570",
        "title": "Managers with at Least 5 Direct Reports",
        "titleSlug": "managers-with-at-least-5-direct-reports",
        "topicTags": [
            {
                "name": "Database",
                "slug": "database"
            }
        ],
        "companyNames": [
            "meta",
            "microsoft",
            "bloomberg",
            "apple",
            "adobe",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 8,
        "url": "https://leetcode.com/problems/managers-with-at-least-5-direct-reports/description"
    },
    "739": {
        "difficulty": "MEDIUM",
        "id": 739,
        "questionFrontendId": "739",
        "title": "Daily Temperatures",
        "titleSlug": "daily-temperatures",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Stack",
                "slug": "stack"
            },
            {
                "name": "Monotonic Stack",
                "slug": "monotonic-stack"
            }
        ],
        "companyNames": [
            "meta",
            "tiktok",
            "microsoft",
            "oracle",
            "goldman_sachs",
            "bloomberg",
            "apple",
            "adobe",
            "walmart_labs",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 12,
        "url": "https://leetcode.com/problems/daily-temperatures/description"
    },
    "908": {
        "difficulty": "EASY",
        "id": 908,
        "questionFrontendId": "876",
        "title": "Middle of the Linked List",
        "titleSlug": "middle-of-the-linked-list",
        "topicTags": [
            {
                "name": "Linked List",
                "slug": "linked-list"
            },
            {
                "name": "Two Pointers",
                "slug": "two-pointers"
            }
        ],
        "companyNames": [
            "meta",
            "microsoft",
            "oracle",
            "goldman_sachs",
            "bloomberg",
            "apple",
            "adobe",
            "walmart_labs",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 11,
        "url": "https://leetcode.com/problems/middle-of-the-linked-list/description"
    },
    "967": {
        "difficulty": "MEDIUM",
        "id": 967,
        "questionFrontendId": "931",
        "title": "Minimum Falling Path Sum",
        "titleSlug": "minimum-falling-path-sum",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Matrix",
                "slug": "matrix"
            }
        ],
        "companyNames": [
            "meta",
            "microsoft",
            "goldman_sachs",
            "bloomberg",
            "adobe",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 8,
        "url": "https://leetcode.com/problems/minimum-falling-path-sum/description"
    },
    "1078": {
        "difficulty": "EASY",
        "id": 1078,
        "questionFrontendId": "1021",
        "title": "Remove Outermost Parentheses",
        "titleSlug": "remove-outermost-parentheses",
        "topicTags": [
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Stack",
                "slug": "stack"
            }
        ],
        "companyNames": [
            "meta",
            "microsoft",
            "bloomberg",
            "apple",
            "adobe",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 8,
        "url": "https://leetcode.com/problems/remove-outermost-parentheses/description"
    },
    "1240": {
        "difficulty": "MEDIUM",
        "id": 1240,
        "questionFrontendId": "1140",
        "title": "Stone Game II",
        "titleSlug": "stone-game-ii",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Prefix Sum",
                "slug": "prefix-sum"
            },
            {
                "name": "Game Theory",
                "slug": "game-theory"
            }
        ],
        "companyNames": [
            "meta",
            "bloomberg",
            "adobe",
            "cisco",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 7,
        "url": "https://leetcode.com/problems/stone-game-ii/description"
    },
    "1478": {
        "difficulty": "MEDIUM",
        "id": 1478,
        "questionFrontendId": "1353",
        "title": "Maximum Number of Events That Can Be Attended",
        "titleSlug": "maximum-number-of-events-that-can-be-attended",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            },
            {
                "name": "Heap (Priority Queue)",
                "slug": "heap-priority-queue"
            }
        ],
        "companyNames": [
            "meta",
            "oracle",
            "apple",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 6,
        "url": "https://leetcode.com/problems/maximum-number-of-events-that-can-be-attended/description"
    },
    "1603": {
        "difficulty": "EASY",
        "id": 1603,
        "questionFrontendId": "1480",
        "title": "Running Sum of 1d Array",
        "titleSlug": "running-sum-of-1d-array",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Prefix Sum",
                "slug": "prefix-sum"
            }
        ],
        "companyNames": [
            "meta",
            "microsoft",
            "bloomberg",
            "apple",
            "adobe",
            "accenture",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 9,
        "url": "https://leetcode.com/problems/running-sum-of-1d-array/description"
    },
    "1635": {
        "difficulty": "EASY",
        "id": 1635,
        "questionFrontendId": "1512",
        "title": "Number of Good Pairs",
        "titleSlug": "number-of-good-pairs",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Counting",
                "slug": "counting"
            }
        ],
        "companyNames": [
            "meta",
            "bloomberg",
            "apple",
            "adobe",
            "tcs",
            "accenture",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 9,
        "url": "https://leetcode.com/problems/number-of-good-pairs/description"
    },
    "1708": {
        "difficulty": "EASY",
        "id": 1708,
        "questionFrontendId": "1603",
        "title": "Design Parking System",
        "titleSlug": "design-parking-system",
        "topicTags": [
            {
                "name": "Design",
                "slug": "design"
            },
            {
                "name": "Simulation",
                "slug": "simulation"
            },
            {
                "name": "Counting",
                "slug": "counting"
            }
        ],
        "companyNames": [
            "meta",
            "apple",
            "amazon",
            "uber"
        ],
        "frequencyCount": 4,
        "url": "https://leetcode.com/problems/design-parking-system/description"
    },
    "3335": {
        "difficulty": "MEDIUM",
        "id": 3335,
        "questionFrontendId": "3071",
        "title": "Minimum Operations to Write the Letter Y on a Grid",
        "titleSlug": "minimum-operations-to-write-the-letter-y-on-a-grid",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Matrix",
                "slug": "matrix"
            },
            {
                "name": "Counting",
                "slug": "counting"
            }
        ],
        "companyNames": [
            "meta",
            "uber"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/minimum-operations-to-write-the-letter-y-on-a-grid/description"
    },
    "19": {
        "difficulty": "MEDIUM",
        "id": 19,
        "questionFrontendId": "19",
        "title": "Remove Nth Node From End of List",
        "titleSlug": "remove-nth-node-from-end-of-list",
        "topicTags": [
            {
                "name": "Linked List",
                "slug": "linked-list"
            },
            {
                "name": "Two Pointers",
                "slug": "two-pointers"
            }
        ],
        "companyNames": [
            "meta",
            "tiktok",
            "microsoft",
            "oracle",
            "bloomberg",
            "apple",
            "adobe",
            "walmart_labs",
            "nvidia",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 12,
        "url": "https://leetcode.com/problems/remove-nth-node-from-end-of-list/description"
    },
    "59": {
        "difficulty": "MEDIUM",
        "id": 59,
        "questionFrontendId": "59",
        "title": "Spiral Matrix II",
        "titleSlug": "spiral-matrix-ii",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Matrix",
                "slug": "matrix"
            },
            {
                "name": "Simulation",
                "slug": "simulation"
            }
        ],
        "companyNames": [
            "meta",
            "tiktok",
            "microsoft",
            "bloomberg",
            "adobe",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 8,
        "url": "https://leetcode.com/problems/spiral-matrix-ii/description"
    },
    "110": {
        "difficulty": "EASY",
        "id": 110,
        "questionFrontendId": "110",
        "title": "Balanced Binary Tree",
        "titleSlug": "balanced-binary-tree",
        "topicTags": [
            {
                "name": "Tree",
                "slug": "tree"
            },
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Binary Tree",
                "slug": "binary-tree"
            }
        ],
        "companyNames": [
            "meta",
            "microsoft",
            "goldman_sachs",
            "bloomberg",
            "apple",
            "adobe",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 9,
        "url": "https://leetcode.com/problems/balanced-binary-tree/description"
    },
    "111": {
        "difficulty": "EASY",
        "id": 111,
        "questionFrontendId": "111",
        "title": "Minimum Depth of Binary Tree",
        "titleSlug": "minimum-depth-of-binary-tree",
        "topicTags": [
            {
                "name": "Tree",
                "slug": "tree"
            },
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Breadth-First Search",
                "slug": "breadth-first-search"
            },
            {
                "name": "Binary Tree",
                "slug": "binary-tree"
            }
        ],
        "companyNames": [
            "meta",
            "microsoft",
            "bloomberg",
            "apple",
            "adobe",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 8,
        "url": "https://leetcode.com/problems/minimum-depth-of-binary-tree/description"
    },
    "114": {
        "difficulty": "MEDIUM",
        "id": 114,
        "questionFrontendId": "114",
        "title": "Flatten Binary Tree to Linked List",
        "titleSlug": "flatten-binary-tree-to-linked-list",
        "topicTags": [
            {
                "name": "Linked List",
                "slug": "linked-list"
            },
            {
                "name": "Stack",
                "slug": "stack"
            },
            {
                "name": "Tree",
                "slug": "tree"
            },
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Binary Tree",
                "slug": "binary-tree"
            }
        ],
        "companyNames": [
            "meta",
            "microsoft",
            "oracle",
            "apple",
            "adobe",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 8,
        "url": "https://leetcode.com/problems/flatten-binary-tree-to-linked-list/description"
    },
    "136": {
        "difficulty": "EASY",
        "id": 136,
        "questionFrontendId": "136",
        "title": "Single Number",
        "titleSlug": "single-number",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Bit Manipulation",
                "slug": "bit-manipulation"
            }
        ],
        "companyNames": [
            "meta",
            "microsoft",
            "bloomberg",
            "apple",
            "adobe",
            "nvidia",
            "airbnb",
            "tcs",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 11,
        "url": "https://leetcode.com/problems/single-number/description"
    },
    "174": {
        "difficulty": "HARD",
        "id": 174,
        "questionFrontendId": "174",
        "title": "Dungeon Game",
        "titleSlug": "dungeon-game",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Matrix",
                "slug": "matrix"
            }
        ],
        "companyNames": [
            "meta",
            "microsoft",
            "apple",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 6,
        "url": "https://leetcode.com/problems/dungeon-game/description"
    },
    "199": {
        "difficulty": "MEDIUM",
        "id": 199,
        "questionFrontendId": "199",
        "title": "Binary Tree Right Side View",
        "titleSlug": "binary-tree-right-side-view",
        "topicTags": [
            {
                "name": "Tree",
                "slug": "tree"
            },
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Breadth-First Search",
                "slug": "breadth-first-search"
            },
            {
                "name": "Binary Tree",
                "slug": "binary-tree"
            }
        ],
        "companyNames": [
            "meta",
            "tiktok",
            "microsoft",
            "oracle",
            "bloomberg",
            "adobe",
            "walmart_labs",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 10,
        "url": "https://leetcode.com/problems/binary-tree-right-side-view/description"
    },
    "210": {
        "difficulty": "MEDIUM",
        "id": 210,
        "questionFrontendId": "210",
        "title": "Course Schedule II",
        "titleSlug": "course-schedule-ii",
        "topicTags": [
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Breadth-First Search",
                "slug": "breadth-first-search"
            },
            {
                "name": "Graph",
                "slug": "graph"
            },
            {
                "name": "Topological Sort",
                "slug": "topological-sort"
            }
        ],
        "companyNames": [
            "meta",
            "tiktok",
            "microsoft",
            "oracle",
            "bloomberg",
            "apple",
            "walmart_labs",
            "airbnb",
            "doordash",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 12,
        "url": "https://leetcode.com/problems/course-schedule-ii/description"
    },
    "286": {
        "difficulty": "MEDIUM",
        "id": 286,
        "questionFrontendId": "286",
        "title": "Walls and Gates",
        "titleSlug": "walls-and-gates",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Breadth-First Search",
                "slug": "breadth-first-search"
            },
            {
                "name": "Matrix",
                "slug": "matrix"
            }
        ],
        "companyNames": [
            "meta",
            "tiktok",
            "apple",
            "doordash",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 7,
        "url": "https://leetcode.com/problems/walls-and-gates/description"
    },
    "301": {
        "difficulty": "HARD",
        "id": 301,
        "questionFrontendId": "301",
        "title": "Remove Invalid Parentheses",
        "titleSlug": "remove-invalid-parentheses",
        "topicTags": [
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Backtracking",
                "slug": "backtracking"
            },
            {
                "name": "Breadth-First Search",
                "slug": "breadth-first-search"
            }
        ],
        "companyNames": [
            "meta",
            "tiktok",
            "bloomberg",
            "apple",
            "adobe",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 8,
        "url": "https://leetcode.com/problems/remove-invalid-parentheses/description"
    },
    "338": {
        "difficulty": "EASY",
        "id": 338,
        "questionFrontendId": "338",
        "title": "Counting Bits",
        "titleSlug": "counting-bits",
        "topicTags": [
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Bit Manipulation",
                "slug": "bit-manipulation"
            }
        ],
        "companyNames": [
            "meta",
            "microsoft",
            "bloomberg",
            "apple",
            "adobe",
            "nvidia",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 9,
        "url": "https://leetcode.com/problems/counting-bits/description"
    },
    "416": {
        "difficulty": "MEDIUM",
        "id": 416,
        "questionFrontendId": "416",
        "title": "Partition Equal Subset Sum",
        "titleSlug": "partition-equal-subset-sum",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            }
        ],
        "companyNames": [
            "meta",
            "tiktok",
            "microsoft",
            "oracle",
            "bloomberg",
            "apple",
            "adobe",
            "walmart_labs",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 11,
        "url": "https://leetcode.com/problems/partition-equal-subset-sum/description"
    },
    "435": {
        "difficulty": "MEDIUM",
        "id": 435,
        "questionFrontendId": "435",
        "title": "Non-overlapping Intervals",
        "titleSlug": "non-overlapping-intervals",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ],
        "companyNames": [
            "meta",
            "tiktok",
            "microsoft",
            "oracle",
            "bloomberg",
            "apple",
            "adobe",
            "walmart_labs",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 11,
        "url": "https://leetcode.com/problems/non-overlapping-intervals/description"
    },
    "442": {
        "difficulty": "MEDIUM",
        "id": 442,
        "questionFrontendId": "442",
        "title": "Find All Duplicates in an Array",
        "titleSlug": "find-all-duplicates-in-an-array",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            }
        ],
        "companyNames": [
            "meta",
            "microsoft",
            "bloomberg",
            "apple",
            "adobe",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 8,
        "url": "https://leetcode.com/problems/find-all-duplicates-in-an-array/description"
    },
    "455": {
        "difficulty": "EASY",
        "id": 455,
        "questionFrontendId": "455",
        "title": "Assign Cookies",
        "titleSlug": "assign-cookies",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Two Pointers",
                "slug": "two-pointers"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ],
        "companyNames": [
            "meta",
            "microsoft",
            "bloomberg",
            "apple",
            "adobe",
            "accenture",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 9,
        "url": "https://leetcode.com/problems/assign-cookies/description"
    },
    "474": {
        "difficulty": "MEDIUM",
        "id": 474,
        "questionFrontendId": "474",
        "title": "Ones and Zeroes",
        "titleSlug": "ones-and-zeroes",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            }
        ],
        "companyNames": [
            "meta",
            "google",
            "uber"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/ones-and-zeroes/description"
    },
    "493": {
        "difficulty": "HARD",
        "id": 493,
        "questionFrontendId": "493",
        "title": "Reverse Pairs",
        "titleSlug": "reverse-pairs",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Binary Search",
                "slug": "binary-search"
            },
            {
                "name": "Divide and Conquer",
                "slug": "divide-and-conquer"
            },
            {
                "name": "Binary Indexed Tree",
                "slug": "binary-indexed-tree"
            },
            {
                "name": "Segment Tree",
                "slug": "segment-tree"
            },
            {
                "name": "Merge Sort",
                "slug": "merge-sort"
            },
            {
                "name": "Ordered Set",
                "slug": "ordered-set"
            }
        ],
        "companyNames": [
            "meta",
            "microsoft",
            "bloomberg",
            "apple",
            "adobe",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 8,
        "url": "https://leetcode.com/problems/reverse-pairs/description"
    },
    "567": {
        "difficulty": "MEDIUM",
        "id": 567,
        "questionFrontendId": "567",
        "title": "Permutation in String",
        "titleSlug": "permutation-in-string",
        "topicTags": [
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Two Pointers",
                "slug": "two-pointers"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Sliding Window",
                "slug": "sliding-window"
            }
        ],
        "companyNames": [
            "meta",
            "microsoft",
            "goldman_sachs",
            "bloomberg",
            "apple",
            "adobe",
            "tcs",
            "accenture",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 11,
        "url": "https://leetcode.com/problems/permutation-in-string/description"
    },
    "595": {
        "difficulty": "EASY",
        "id": 595,
        "questionFrontendId": "595",
        "title": "Big Countries",
        "titleSlug": "big-countries",
        "topicTags": [
            {
                "name": "Database",
                "slug": "database"
            }
        ],
        "companyNames": [
            "meta",
            "microsoft",
            "bloomberg",
            "apple",
            "adobe",
            "tcs",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 9,
        "url": "https://leetcode.com/problems/big-countries/description"
    },
    "678": {
        "difficulty": "MEDIUM",
        "id": 678,
        "questionFrontendId": "678",
        "title": "Valid Parenthesis String",
        "titleSlug": "valid-parenthesis-string",
        "topicTags": [
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Stack",
                "slug": "stack"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            }
        ],
        "companyNames": [
            "meta",
            "tiktok",
            "microsoft",
            "bloomberg",
            "apple",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 8,
        "url": "https://leetcode.com/problems/valid-parenthesis-string/description"
    },
    "737": {
        "difficulty": "MEDIUM",
        "id": 737,
        "questionFrontendId": "737",
        "title": "Sentence Similarity II",
        "titleSlug": "sentence-similarity-ii",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Breadth-First Search",
                "slug": "breadth-first-search"
            },
            {
                "name": "Union Find",
                "slug": "union-find"
            }
        ],
        "companyNames": [
            "meta",
            "google",
            "uber"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/sentence-similarity-ii/description"
    },
    "807": {
        "difficulty": "MEDIUM",
        "id": 807,
        "questionFrontendId": "791",
        "title": "Custom Sort String",
        "titleSlug": "custom-sort-string",
        "topicTags": [
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ],
        "companyNames": [
            "meta",
            "microsoft",
            "bloomberg",
            "apple",
            "adobe",
            "amazon",
            "uber"
        ],
        "frequencyCount": 7,
        "url": "https://leetcode.com/problems/custom-sort-string/description"
    },
    "948": {
        "difficulty": "MEDIUM",
        "id": 948,
        "questionFrontendId": "912",
        "title": "Sort an Array",
        "titleSlug": "sort-an-array",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Divide and Conquer",
                "slug": "divide-and-conquer"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            },
            {
                "name": "Heap (Priority Queue)",
                "slug": "heap-priority-queue"
            },
            {
                "name": "Merge Sort",
                "slug": "merge-sort"
            },
            {
                "name": "Bucket Sort",
                "slug": "bucket-sort"
            },
            {
                "name": "Radix Sort",
                "slug": "radix-sort"
            },
            {
                "name": "Counting Sort",
                "slug": "counting-sort"
            }
        ],
        "companyNames": [
            "meta",
            "microsoft",
            "oracle",
            "bloomberg",
            "apple",
            "adobe",
            "tcs",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 10,
        "url": "https://leetcode.com/problems/sort-an-array/description"
    },
    "990": {
        "difficulty": "EASY",
        "id": 990,
        "questionFrontendId": "953",
        "title": "Verifying an Alien Dictionary",
        "titleSlug": "verifying-an-alien-dictionary",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "String",
                "slug": "string"
            }
        ],
        "companyNames": [
            "meta",
            "tiktok",
            "microsoft",
            "apple",
            "adobe",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 8,
        "url": "https://leetcode.com/problems/verifying-an-alien-dictionary/description"
    },
    "1034": {
        "difficulty": "HARD",
        "id": 1034,
        "questionFrontendId": "992",
        "title": "Subarrays with K Different Integers",
        "titleSlug": "subarrays-with-k-different-integers",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Sliding Window",
                "slug": "sliding-window"
            },
            {
                "name": "Counting",
                "slug": "counting"
            }
        ],
        "companyNames": [
            "meta",
            "tiktok",
            "microsoft",
            "oracle",
            "apple",
            "adobe",
            "doordash",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 10,
        "url": "https://leetcode.com/problems/subarrays-with-k-different-integers/description"
    },
    "1669": {
        "difficulty": "HARD",
        "id": 1669,
        "questionFrontendId": "1547",
        "title": "Minimum Cost to Cut a Stick",
        "titleSlug": "minimum-cost-to-cut-a-stick",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ],
        "companyNames": [
            "meta",
            "microsoft",
            "bloomberg",
            "apple",
            "adobe",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 8,
        "url": "https://leetcode.com/problems/minimum-cost-to-cut-a-stick/description"
    },
    "1753": {
        "difficulty": "MEDIUM",
        "id": 1753,
        "questionFrontendId": "1631",
        "title": "Path With Minimum Effort",
        "titleSlug": "path-with-minimum-effort",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Binary Search",
                "slug": "binary-search"
            },
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Breadth-First Search",
                "slug": "breadth-first-search"
            },
            {
                "name": "Union Find",
                "slug": "union-find"
            },
            {
                "name": "Heap (Priority Queue)",
                "slug": "heap-priority-queue"
            },
            {
                "name": "Matrix",
                "slug": "matrix"
            }
        ],
        "companyNames": [
            "meta",
            "tiktok",
            "microsoft",
            "apple",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 7,
        "url": "https://leetcode.com/problems/path-with-minimum-effort/description"
    },
    "1791": {
        "difficulty": "EASY",
        "id": 1791,
        "questionFrontendId": "1672",
        "title": "Richest Customer Wealth",
        "titleSlug": "richest-customer-wealth",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Matrix",
                "slug": "matrix"
            }
        ],
        "companyNames": [
            "meta",
            "microsoft",
            "bloomberg",
            "apple",
            "adobe",
            "accenture",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 9,
        "url": "https://leetcode.com/problems/richest-customer-wealth/description"
    },
    "1878": {
        "difficulty": "EASY",
        "id": 1878,
        "questionFrontendId": "1752",
        "title": "Check if Array Is Sorted and Rotated",
        "titleSlug": "check-if-array-is-sorted-and-rotated",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            }
        ],
        "companyNames": [
            "meta",
            "microsoft",
            "bloomberg",
            "apple",
            "adobe",
            "tcs",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 9,
        "url": "https://leetcode.com/problems/check-if-array-is-sorted-and-rotated/description"
    },
    "1966": {
        "difficulty": "MEDIUM",
        "id": 1966,
        "questionFrontendId": "1838",
        "title": "Frequency of the Most Frequent Element",
        "titleSlug": "frequency-of-the-most-frequent-element",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Binary Search",
                "slug": "binary-search"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            },
            {
                "name": "Sliding Window",
                "slug": "sliding-window"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            },
            {
                "name": "Prefix Sum",
                "slug": "prefix-sum"
            }
        ],
        "companyNames": [
            "meta",
            "microsoft",
            "bloomberg",
            "apple",
            "adobe",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 8,
        "url": "https://leetcode.com/problems/frequency-of-the-most-frequent-element/description"
    },
    "2334": {
        "difficulty": "HARD",
        "id": 2334,
        "questionFrontendId": "2251",
        "title": "Number of Flowers in Full Bloom",
        "titleSlug": "number-of-flowers-in-full-bloom",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Binary Search",
                "slug": "binary-search"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            },
            {
                "name": "Prefix Sum",
                "slug": "prefix-sum"
            },
            {
                "name": "Ordered Set",
                "slug": "ordered-set"
            }
        ],
        "companyNames": [
            "meta",
            "microsoft",
            "oracle",
            "bloomberg",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 7,
        "url": "https://leetcode.com/problems/number-of-flowers-in-full-bloom/description"
    },
    "64": {
        "difficulty": "MEDIUM",
        "id": 64,
        "questionFrontendId": "64",
        "title": "Minimum Path Sum",
        "titleSlug": "minimum-path-sum",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Matrix",
                "slug": "matrix"
            }
        ],
        "companyNames": [
            "meta",
            "tiktok",
            "microsoft",
            "goldman_sachs",
            "bloomberg",
            "apple",
            "adobe",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 10,
        "url": "https://leetcode.com/problems/minimum-path-sum/description"
    },
    "74": {
        "difficulty": "MEDIUM",
        "id": 74,
        "questionFrontendId": "74",
        "title": "Search a 2D Matrix",
        "titleSlug": "search-a-2d-matrix",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Binary Search",
                "slug": "binary-search"
            },
            {
                "name": "Matrix",
                "slug": "matrix"
            }
        ],
        "companyNames": [
            "meta",
            "tiktok",
            "microsoft",
            "oracle",
            "goldman_sachs",
            "bloomberg",
            "apple",
            "adobe",
            "walmart_labs",
            "cisco",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 13,
        "url": "https://leetcode.com/problems/search-a-2d-matrix/description"
    },
    "83": {
        "difficulty": "EASY",
        "id": 83,
        "questionFrontendId": "83",
        "title": "Remove Duplicates from Sorted List",
        "titleSlug": "remove-duplicates-from-sorted-list",
        "topicTags": [
            {
                "name": "Linked List",
                "slug": "linked-list"
            }
        ],
        "companyNames": [
            "meta",
            "microsoft",
            "oracle",
            "goldman_sachs",
            "bloomberg",
            "apple",
            "adobe",
            "accenture",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 11,
        "url": "https://leetcode.com/problems/remove-duplicates-from-sorted-list/description"
    },
    "112": {
        "difficulty": "EASY",
        "id": 112,
        "questionFrontendId": "112",
        "title": "Path Sum",
        "titleSlug": "path-sum",
        "topicTags": [
            {
                "name": "Tree",
                "slug": "tree"
            },
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Breadth-First Search",
                "slug": "breadth-first-search"
            },
            {
                "name": "Binary Tree",
                "slug": "binary-tree"
            }
        ],
        "companyNames": [
            "meta",
            "tiktok",
            "microsoft",
            "bloomberg",
            "apple",
            "adobe",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 9,
        "url": "https://leetcode.com/problems/path-sum/description"
    },
    "115": {
        "difficulty": "HARD",
        "id": 115,
        "questionFrontendId": "115",
        "title": "Distinct Subsequences",
        "titleSlug": "distinct-subsequences",
        "topicTags": [
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            }
        ],
        "companyNames": [
            "meta",
            "tiktok",
            "microsoft",
            "oracle",
            "bloomberg",
            "apple",
            "adobe",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 10,
        "url": "https://leetcode.com/problems/distinct-subsequences/description"
    },
    "134": {
        "difficulty": "MEDIUM",
        "id": 134,
        "questionFrontendId": "134",
        "title": "Gas Station",
        "titleSlug": "gas-station",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            }
        ],
        "companyNames": [
            "meta",
            "microsoft",
            "oracle",
            "goldman_sachs",
            "bloomberg",
            "apple",
            "adobe",
            "walmart_labs",
            "cisco",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 12,
        "url": "https://leetcode.com/problems/gas-station/description"
    },
    "135": {
        "difficulty": "HARD",
        "id": 135,
        "questionFrontendId": "135",
        "title": "Candy",
        "titleSlug": "candy",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            }
        ],
        "companyNames": [
            "meta",
            "microsoft",
            "goldman_sachs",
            "bloomberg",
            "apple",
            "adobe",
            "accenture",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 10,
        "url": "https://leetcode.com/problems/candy/description"
    },
    "148": {
        "difficulty": "MEDIUM",
        "id": 148,
        "questionFrontendId": "148",
        "title": "Sort List",
        "titleSlug": "sort-list",
        "topicTags": [
            {
                "name": "Linked List",
                "slug": "linked-list"
            },
            {
                "name": "Two Pointers",
                "slug": "two-pointers"
            },
            {
                "name": "Divide and Conquer",
                "slug": "divide-and-conquer"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            },
            {
                "name": "Merge Sort",
                "slug": "merge-sort"
            }
        ],
        "companyNames": [
            "meta",
            "tiktok",
            "microsoft",
            "oracle",
            "bloomberg",
            "apple",
            "adobe",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 10,
        "url": "https://leetcode.com/problems/sort-list/description"
    },
    "176": {
        "difficulty": "MEDIUM",
        "id": 176,
        "questionFrontendId": "176",
        "title": "Second Highest Salary",
        "titleSlug": "second-highest-salary",
        "topicTags": [
            {
                "name": "Database",
                "slug": "database"
            }
        ],
        "companyNames": [
            "meta",
            "tiktok",
            "microsoft",
            "oracle",
            "bloomberg",
            "apple",
            "adobe",
            "walmart_labs",
            "tcs",
            "accenture",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 13,
        "url": "https://leetcode.com/problems/second-highest-salary/description"
    },
    "179": {
        "difficulty": "MEDIUM",
        "id": 179,
        "questionFrontendId": "179",
        "title": "Largest Number",
        "titleSlug": "largest-number",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ],
        "companyNames": [
            "meta",
            "tiktok",
            "microsoft",
            "oracle",
            "goldman_sachs",
            "bloomberg",
            "apple",
            "adobe",
            "walmart_labs",
            "tcs",
            "accenture",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 14,
        "url": "https://leetcode.com/problems/largest-number/description"
    },
    "180": {
        "difficulty": "MEDIUM",
        "id": 180,
        "questionFrontendId": "180",
        "title": "Consecutive Numbers",
        "titleSlug": "consecutive-numbers",
        "topicTags": [
            {
                "name": "Database",
                "slug": "database"
            }
        ],
        "companyNames": [
            "meta",
            "microsoft",
            "bloomberg",
            "adobe",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 7,
        "url": "https://leetcode.com/problems/consecutive-numbers/description"
    },
    "240": {
        "difficulty": "MEDIUM",
        "id": 240,
        "questionFrontendId": "240",
        "title": "Search a 2D Matrix II",
        "titleSlug": "search-a-2d-matrix-ii",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Binary Search",
                "slug": "binary-search"
            },
            {
                "name": "Divide and Conquer",
                "slug": "divide-and-conquer"
            },
            {
                "name": "Matrix",
                "slug": "matrix"
            }
        ],
        "companyNames": [
            "meta",
            "tiktok",
            "microsoft",
            "oracle",
            "bloomberg",
            "apple",
            "adobe",
            "tcs",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 11,
        "url": "https://leetcode.com/problems/search-a-2d-matrix-ii/description"
    },
    "263": {
        "difficulty": "EASY",
        "id": 263,
        "questionFrontendId": "263",
        "title": "Ugly Number",
        "titleSlug": "ugly-number",
        "topicTags": [
            {
                "name": "Math",
                "slug": "math"
            }
        ],
        "companyNames": [
            "meta",
            "bloomberg",
            "apple",
            "adobe",
            "tcs",
            "amazon",
            "uber"
        ],
        "frequencyCount": 7,
        "url": "https://leetcode.com/problems/ugly-number/description"
    },
    "268": {
        "difficulty": "EASY",
        "id": 268,
        "questionFrontendId": "268",
        "title": "Missing Number",
        "titleSlug": "missing-number",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Binary Search",
                "slug": "binary-search"
            },
            {
                "name": "Bit Manipulation",
                "slug": "bit-manipulation"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ],
        "companyNames": [
            "meta",
            "microsoft",
            "oracle",
            "goldman_sachs",
            "bloomberg",
            "apple",
            "adobe",
            "nvidia",
            "tcs",
            "cisco",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 13,
        "url": "https://leetcode.com/problems/missing-number/description"
    },
    "315": {
        "difficulty": "HARD",
        "id": 315,
        "questionFrontendId": "315",
        "title": "Count of Smaller Numbers After Self",
        "titleSlug": "count-of-smaller-numbers-after-self",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Binary Search",
                "slug": "binary-search"
            },
            {
                "name": "Divide and Conquer",
                "slug": "divide-and-conquer"
            },
            {
                "name": "Binary Indexed Tree",
                "slug": "binary-indexed-tree"
            },
            {
                "name": "Segment Tree",
                "slug": "segment-tree"
            },
            {
                "name": "Merge Sort",
                "slug": "merge-sort"
            },
            {
                "name": "Ordered Set",
                "slug": "ordered-set"
            }
        ],
        "companyNames": [
            "meta",
            "tiktok",
            "microsoft",
            "bloomberg",
            "apple",
            "adobe",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 9,
        "url": "https://leetcode.com/problems/count-of-smaller-numbers-after-self/description"
    },
    "316": {
        "difficulty": "MEDIUM",
        "id": 316,
        "questionFrontendId": "316",
        "title": "Remove Duplicate Letters",
        "titleSlug": "remove-duplicate-letters",
        "topicTags": [
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Stack",
                "slug": "stack"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            },
            {
                "name": "Monotonic Stack",
                "slug": "monotonic-stack"
            }
        ],
        "companyNames": [
            "meta",
            "tiktok",
            "microsoft",
            "oracle",
            "goldman_sachs",
            "bloomberg",
            "apple",
            "adobe",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 11,
        "url": "https://leetcode.com/problems/remove-duplicate-letters/description"
    },
    "334": {
        "difficulty": "MEDIUM",
        "id": 334,
        "questionFrontendId": "334",
        "title": "Increasing Triplet Subsequence",
        "titleSlug": "increasing-triplet-subsequence",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            }
        ],
        "companyNames": [
            "meta",
            "tiktok",
            "bloomberg",
            "apple",
            "adobe",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 8,
        "url": "https://leetcode.com/problems/increasing-triplet-subsequence/description"
    },
    "343": {
        "difficulty": "MEDIUM",
        "id": 343,
        "questionFrontendId": "343",
        "title": "Integer Break",
        "titleSlug": "integer-break",
        "topicTags": [
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            }
        ],
        "companyNames": [
            "meta",
            "microsoft",
            "bloomberg",
            "apple",
            "adobe",
            "accenture",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 9,
        "url": "https://leetcode.com/problems/integer-break/description"
    },
    "345": {
        "difficulty": "EASY",
        "id": 345,
        "questionFrontendId": "345",
        "title": "Reverse Vowels of a String",
        "titleSlug": "reverse-vowels-of-a-string",
        "topicTags": [
            {
                "name": "Two Pointers",
                "slug": "two-pointers"
            },
            {
                "name": "String",
                "slug": "string"
            }
        ],
        "companyNames": [
            "meta",
            "microsoft",
            "oracle",
            "bloomberg",
            "apple",
            "adobe",
            "tcs",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 10,
        "url": "https://leetcode.com/problems/reverse-vowels-of-a-string/description"
    },
    "355": {
        "difficulty": "MEDIUM",
        "id": 355,
        "questionFrontendId": "355",
        "title": "Design Twitter",
        "titleSlug": "design-twitter",
        "topicTags": [
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Linked List",
                "slug": "linked-list"
            },
            {
                "name": "Design",
                "slug": "design"
            },
            {
                "name": "Heap (Priority Queue)",
                "slug": "heap-priority-queue"
            }
        ],
        "companyNames": [
            "meta",
            "tiktok",
            "microsoft",
            "bloomberg",
            "apple",
            "amazon",
            "uber"
        ],
        "frequencyCount": 7,
        "url": "https://leetcode.com/problems/design-twitter/description"
    },
    "371": {
        "difficulty": "MEDIUM",
        "id": 371,
        "questionFrontendId": "371",
        "title": "Sum of Two Integers",
        "titleSlug": "sum-of-two-integers",
        "topicTags": [
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Bit Manipulation",
                "slug": "bit-manipulation"
            }
        ],
        "companyNames": [
            "meta",
            "microsoft",
            "bloomberg",
            "apple",
            "adobe",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 8,
        "url": "https://leetcode.com/problems/sum-of-two-integers/description"
    },
    "383": {
        "difficulty": "EASY",
        "id": 383,
        "questionFrontendId": "383",
        "title": "Ransom Note",
        "titleSlug": "ransom-note",
        "topicTags": [
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Counting",
                "slug": "counting"
            }
        ],
        "companyNames": [
            "meta",
            "bloomberg",
            "apple",
            "adobe",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 7,
        "url": "https://leetcode.com/problems/ransom-note/description"
    },
    "451": {
        "difficulty": "MEDIUM",
        "id": 451,
        "questionFrontendId": "451",
        "title": "Sort Characters By Frequency",
        "titleSlug": "sort-characters-by-frequency",
        "topicTags": [
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            },
            {
                "name": "Heap (Priority Queue)",
                "slug": "heap-priority-queue"
            },
            {
                "name": "Bucket Sort",
                "slug": "bucket-sort"
            },
            {
                "name": "Counting",
                "slug": "counting"
            }
        ],
        "companyNames": [
            "meta",
            "microsoft",
            "bloomberg",
            "apple",
            "adobe",
            "walmart_labs",
            "nvidia",
            "tcs",
            "accenture",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 12,
        "url": "https://leetcode.com/problems/sort-characters-by-frequency/description"
    },
    "459": {
        "difficulty": "EASY",
        "id": 459,
        "questionFrontendId": "459",
        "title": "Repeated Substring Pattern",
        "titleSlug": "repeated-substring-pattern",
        "topicTags": [
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "String Matching",
                "slug": "string-matching"
            }
        ],
        "companyNames": [
            "meta",
            "bloomberg",
            "apple",
            "adobe",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 7,
        "url": "https://leetcode.com/problems/repeated-substring-pattern/description"
    },
    "485": {
        "difficulty": "EASY",
        "id": 485,
        "questionFrontendId": "485",
        "title": "Max Consecutive Ones",
        "titleSlug": "max-consecutive-ones",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            }
        ],
        "companyNames": [
            "meta",
            "bloomberg",
            "apple",
            "adobe",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 7,
        "url": "https://leetcode.com/problems/max-consecutive-ones/description"
    },
    "514": {
        "difficulty": "HARD",
        "id": 514,
        "questionFrontendId": "514",
        "title": "Freedom Trail",
        "titleSlug": "freedom-trail",
        "topicTags": [
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Breadth-First Search",
                "slug": "breadth-first-search"
            }
        ],
        "companyNames": [
            "meta",
            "microsoft",
            "apple",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 6,
        "url": "https://leetcode.com/problems/freedom-trail/description"
    },
    "518": {
        "difficulty": "MEDIUM",
        "id": 518,
        "questionFrontendId": "518",
        "title": "Coin Change II",
        "titleSlug": "coin-change-ii",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            }
        ],
        "companyNames": [
            "meta",
            "tiktok",
            "microsoft",
            "bloomberg",
            "apple",
            "adobe",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 9,
        "url": "https://leetcode.com/problems/coin-change-ii/description"
    },
    "542": {
        "difficulty": "MEDIUM",
        "id": 542,
        "questionFrontendId": "542",
        "title": "01 Matrix",
        "titleSlug": "01-matrix",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Breadth-First Search",
                "slug": "breadth-first-search"
            },
            {
                "name": "Matrix",
                "slug": "matrix"
            }
        ],
        "companyNames": [
            "meta",
            "tiktok",
            "microsoft",
            "bloomberg",
            "apple",
            "adobe",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 9,
        "url": "https://leetcode.com/problems/01-matrix/description"
    },
    "572": {
        "difficulty": "EASY",
        "id": 572,
        "questionFrontendId": "572",
        "title": "Subtree of Another Tree",
        "titleSlug": "subtree-of-another-tree",
        "topicTags": [
            {
                "name": "Tree",
                "slug": "tree"
            },
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "String Matching",
                "slug": "string-matching"
            },
            {
                "name": "Binary Tree",
                "slug": "binary-tree"
            },
            {
                "name": "Hash Function",
                "slug": "hash-function"
            }
        ],
        "companyNames": [
            "meta",
            "tiktok",
            "microsoft",
            "adobe",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 7,
        "url": "https://leetcode.com/problems/subtree-of-another-tree/description"
    },
    "577": {
        "difficulty": "EASY",
        "id": 577,
        "questionFrontendId": "577",
        "title": "Employee Bonus",
        "titleSlug": "employee-bonus",
        "topicTags": [
            {
                "name": "Database",
                "slug": "database"
            }
        ],
        "companyNames": [
            "meta",
            "microsoft",
            "bloomberg",
            "tcs",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 7,
        "url": "https://leetcode.com/problems/employee-bonus/description"
    },
    "584": {
        "difficulty": "EASY",
        "id": 584,
        "questionFrontendId": "584",
        "title": "Find Customer Referee",
        "titleSlug": "find-customer-referee",
        "topicTags": [
            {
                "name": "Database",
                "slug": "database"
            }
        ],
        "companyNames": [
            "meta",
            "microsoft",
            "bloomberg",
            "apple",
            "adobe",
            "tcs",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 9,
        "url": "https://leetcode.com/problems/find-customer-referee/description"
    },
    "621": {
        "difficulty": "MEDIUM",
        "id": 621,
        "questionFrontendId": "621",
        "title": "Task Scheduler",
        "titleSlug": "task-scheduler",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            },
            {
                "name": "Heap (Priority Queue)",
                "slug": "heap-priority-queue"
            },
            {
                "name": "Counting",
                "slug": "counting"
            }
        ],
        "companyNames": [
            "meta",
            "tiktok",
            "microsoft",
            "oracle",
            "bloomberg",
            "apple",
            "adobe",
            "doordash",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 11,
        "url": "https://leetcode.com/problems/task-scheduler/description"
    },
    "820": {
        "difficulty": "MEDIUM",
        "id": 820,
        "questionFrontendId": "802",
        "title": "Find Eventual Safe States",
        "titleSlug": "find-eventual-safe-states",
        "topicTags": [
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Breadth-First Search",
                "slug": "breadth-first-search"
            },
            {
                "name": "Graph",
                "slug": "graph"
            },
            {
                "name": "Topological Sort",
                "slug": "topological-sort"
            }
        ],
        "companyNames": [
            "meta",
            "microsoft",
            "bloomberg",
            "adobe",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 7,
        "url": "https://leetcode.com/problems/find-eventual-safe-states/description"
    },
    "893": {
        "difficulty": "MEDIUM",
        "id": 893,
        "questionFrontendId": "863",
        "title": "All Nodes Distance K in Binary Tree",
        "titleSlug": "all-nodes-distance-k-in-binary-tree",
        "topicTags": [
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Tree",
                "slug": "tree"
            },
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Breadth-First Search",
                "slug": "breadth-first-search"
            },
            {
                "name": "Binary Tree",
                "slug": "binary-tree"
            }
        ],
        "companyNames": [
            "meta",
            "microsoft",
            "apple",
            "adobe",
            "walmart_labs",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 8,
        "url": "https://leetcode.com/problems/all-nodes-distance-k-in-binary-tree/description"
    },
    "922": {
        "difficulty": "MEDIUM",
        "id": 922,
        "questionFrontendId": "886",
        "title": "Possible Bipartition",
        "titleSlug": "possible-bipartition",
        "topicTags": [
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Breadth-First Search",
                "slug": "breadth-first-search"
            },
            {
                "name": "Union Find",
                "slug": "union-find"
            },
            {
                "name": "Graph",
                "slug": "graph"
            }
        ],
        "companyNames": [
            "meta",
            "tiktok",
            "microsoft",
            "bloomberg",
            "adobe",
            "doordash",
            "google",
            "uber"
        ],
        "frequencyCount": 8,
        "url": "https://leetcode.com/problems/possible-bipartition/description"
    },
    "943": {
        "difficulty": "MEDIUM",
        "id": 943,
        "questionFrontendId": "907",
        "title": "Sum of Subarray Minimums",
        "titleSlug": "sum-of-subarray-minimums",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Stack",
                "slug": "stack"
            },
            {
                "name": "Monotonic Stack",
                "slug": "monotonic-stack"
            }
        ],
        "companyNames": [
            "meta",
            "tiktok",
            "microsoft",
            "bloomberg",
            "apple",
            "adobe",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 9,
        "url": "https://leetcode.com/problems/sum-of-subarray-minimums/description"
    },
    "1013": {
        "difficulty": "EASY",
        "id": 1013,
        "questionFrontendId": "509",
        "title": "Fibonacci Number",
        "titleSlug": "fibonacci-number",
        "topicTags": [
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Recursion",
                "slug": "recursion"
            },
            {
                "name": "Memoization",
                "slug": "memoization"
            }
        ],
        "companyNames": [
            "meta",
            "microsoft",
            "goldman_sachs",
            "bloomberg",
            "apple",
            "adobe",
            "nvidia",
            "tcs",
            "accenture",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 12,
        "url": "https://leetcode.com/problems/fibonacci-number/description"
    },
    "1018": {
        "difficulty": "EASY",
        "id": 1018,
        "questionFrontendId": "976",
        "title": "Largest Perimeter Triangle",
        "titleSlug": "largest-perimeter-triangle",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ],
        "companyNames": [
            "meta",
            "apple",
            "adobe",
            "amazon",
            "uber"
        ],
        "frequencyCount": 5,
        "url": "https://leetcode.com/problems/largest-perimeter-triangle/description"
    },
    "1037": {
        "difficulty": "HARD",
        "id": 1037,
        "questionFrontendId": "995",
        "title": "Minimum Number of K Consecutive Bit Flips",
        "titleSlug": "minimum-number-of-k-consecutive-bit-flips",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Bit Manipulation",
                "slug": "bit-manipulation"
            },
            {
                "name": "Queue",
                "slug": "queue"
            },
            {
                "name": "Sliding Window",
                "slug": "sliding-window"
            },
            {
                "name": "Prefix Sum",
                "slug": "prefix-sum"
            }
        ],
        "companyNames": [
            "meta",
            "microsoft",
            "bloomberg",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 6,
        "url": "https://leetcode.com/problems/minimum-number-of-k-consecutive-bit-flips/description"
    },
    "1108": {
        "difficulty": "MEDIUM",
        "id": 1108,
        "questionFrontendId": "1152",
        "title": "Analyze User Website Visit Pattern",
        "titleSlug": "analyze-user-website-visit-pattern",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ],
        "companyNames": [
            "meta",
            "amazon",
            "uber"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/analyze-user-website-visit-pattern/description"
    },
    "1122": {
        "difficulty": "HARD",
        "id": 1122,
        "questionFrontendId": "1044",
        "title": "Longest Duplicate Substring",
        "titleSlug": "longest-duplicate-substring",
        "topicTags": [
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Binary Search",
                "slug": "binary-search"
            },
            {
                "name": "Sliding Window",
                "slug": "sliding-window"
            },
            {
                "name": "Rolling Hash",
                "slug": "rolling-hash"
            },
            {
                "name": "Suffix Array",
                "slug": "suffix-array"
            },
            {
                "name": "Hash Function",
                "slug": "hash-function"
            }
        ],
        "companyNames": [
            "meta",
            "microsoft",
            "bloomberg",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 6,
        "url": "https://leetcode.com/problems/longest-duplicate-substring/description"
    },
    "1170": {
        "difficulty": "HARD",
        "id": 1170,
        "questionFrontendId": "1092",
        "title": "Shortest Common Supersequence ",
        "titleSlug": "shortest-common-supersequence",
        "topicTags": [
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            }
        ],
        "companyNames": [
            "meta",
            "microsoft",
            "bloomberg",
            "apple",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 7,
        "url": "https://leetcode.com/problems/shortest-common-supersequence/description"
    },
    "1205": {
        "difficulty": "EASY",
        "id": 1205,
        "questionFrontendId": "1108",
        "title": "Defanging an IP Address",
        "titleSlug": "defanging-an-ip-address",
        "topicTags": [
            {
                "name": "String",
                "slug": "string"
            }
        ],
        "companyNames": [
            "meta",
            "bloomberg",
            "apple",
            "adobe",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 7,
        "url": "https://leetcode.com/problems/defanging-an-ip-address/description"
    },
    "1317": {
        "difficulty": "MEDIUM",
        "id": 1317,
        "questionFrontendId": "1193",
        "title": "Monthly Transactions I",
        "titleSlug": "monthly-transactions-i",
        "topicTags": [
            {
                "name": "Database",
                "slug": "database"
            }
        ],
        "companyNames": [
            "meta",
            "microsoft",
            "bloomberg",
            "apple",
            "adobe",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 8,
        "url": "https://leetcode.com/problems/monthly-transactions-i/description"
    },
    "1451": {
        "difficulty": "HARD",
        "id": 1451,
        "questionFrontendId": "1326",
        "title": "Minimum Number of Taps to Open to Water a Garden",
        "titleSlug": "minimum-number-of-taps-to-open-to-water-a-garden",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            }
        ],
        "companyNames": [
            "meta",
            "microsoft",
            "bloomberg",
            "apple",
            "adobe",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 8,
        "url": "https://leetcode.com/problems/minimum-number-of-taps-to-open-to-water-a-garden/description"
    },
    "1509": {
        "difficulty": "EASY",
        "id": 1509,
        "questionFrontendId": "1378",
        "title": "Replace Employee ID With The Unique Identifier",
        "titleSlug": "replace-employee-id-with-the-unique-identifier",
        "topicTags": [
            {
                "name": "Database",
                "slug": "database"
            }
        ],
        "companyNames": [
            "meta",
            "microsoft",
            "bloomberg",
            "adobe",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 7,
        "url": "https://leetcode.com/problems/replace-employee-id-with-the-unique-identifier/description"
    },
    "1613": {
        "difficulty": "HARD",
        "id": 1613,
        "questionFrontendId": "1489",
        "title": "Find Critical and Pseudo-Critical Edges in Minimum Spanning Tree",
        "titleSlug": "find-critical-and-pseudo-critical-edges-in-minimum-spanning-tree",
        "topicTags": [
            {
                "name": "Union Find",
                "slug": "union-find"
            },
            {
                "name": "Graph",
                "slug": "graph"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            },
            {
                "name": "Minimum Spanning Tree",
                "slug": "minimum-spanning-tree"
            },
            {
                "name": "Strongly Connected Component",
                "slug": "strongly-connected-component"
            }
        ],
        "companyNames": [
            "meta",
            "microsoft",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 5,
        "url": "https://leetcode.com/problems/find-critical-and-pseudo-critical-edges-in-minimum-spanning-tree/description"
    },
    "1646": {
        "difficulty": "EASY",
        "id": 1646,
        "questionFrontendId": "1539",
        "title": "Kth Missing Positive Number",
        "titleSlug": "kth-missing-positive-number",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Binary Search",
                "slug": "binary-search"
            }
        ],
        "companyNames": [
            "meta",
            "tiktok",
            "microsoft",
            "bloomberg",
            "apple",
            "adobe",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 9,
        "url": "https://leetcode.com/problems/kth-missing-positive-number/description"
    },
    "1748": {
        "difficulty": "MEDIUM",
        "id": 1748,
        "questionFrontendId": "1626",
        "title": "Best Team With No Conflicts",
        "titleSlug": "best-team-with-no-conflicts",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ],
        "companyNames": [
            "meta",
            "apple",
            "amazon",
            "uber"
        ],
        "frequencyCount": 4,
        "url": "https://leetcode.com/problems/best-team-with-no-conflicts/description"
    },
    "1801": {
        "difficulty": "EASY",
        "id": 1801,
        "questionFrontendId": "1661",
        "title": "Average Time of Process per Machine",
        "titleSlug": "average-time-of-process-per-machine",
        "topicTags": [
            {
                "name": "Database",
                "slug": "database"
            }
        ],
        "companyNames": [
            "meta",
            "microsoft",
            "bloomberg",
            "apple",
            "adobe",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 8,
        "url": "https://leetcode.com/problems/average-time-of-process-per-machine/description"
    },
    "2050": {
        "difficulty": "MEDIUM",
        "id": 2050,
        "questionFrontendId": "1922",
        "title": "Count Good Numbers",
        "titleSlug": "count-good-numbers",
        "topicTags": [
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Recursion",
                "slug": "recursion"
            }
        ],
        "companyNames": [
            "meta",
            "bloomberg",
            "apple",
            "adobe",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 7,
        "url": "https://leetcode.com/problems/count-good-numbers/description"
    },
    "2058": {
        "difficulty": "EASY",
        "id": 2058,
        "questionFrontendId": "1929",
        "title": "Concatenation of Array",
        "titleSlug": "concatenation-of-array",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Simulation",
                "slug": "simulation"
            }
        ],
        "companyNames": [
            "meta",
            "microsoft",
            "bloomberg",
            "apple",
            "adobe",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 8,
        "url": "https://leetcode.com/problems/concatenation-of-array/description"
    },
    "2220": {
        "difficulty": "MEDIUM",
        "id": 2220,
        "questionFrontendId": "2115",
        "title": "Find All Possible Recipes from Given Supplies",
        "titleSlug": "find-all-possible-recipes-from-given-supplies",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Graph",
                "slug": "graph"
            },
            {
                "name": "Topological Sort",
                "slug": "topological-sort"
            }
        ],
        "companyNames": [
            "meta",
            "tiktok",
            "microsoft",
            "oracle",
            "adobe",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 8,
        "url": "https://leetcode.com/problems/find-all-possible-recipes-from-given-supplies/description"
    },
    "2236": {
        "difficulty": "MEDIUM",
        "id": 2236,
        "questionFrontendId": "2130",
        "title": "Maximum Twin Sum of a Linked List",
        "titleSlug": "maximum-twin-sum-of-a-linked-list",
        "topicTags": [
            {
                "name": "Linked List",
                "slug": "linked-list"
            },
            {
                "name": "Two Pointers",
                "slug": "two-pointers"
            },
            {
                "name": "Stack",
                "slug": "stack"
            }
        ],
        "companyNames": [
            "meta",
            "microsoft",
            "bloomberg",
            "apple",
            "adobe",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 8,
        "url": "https://leetcode.com/problems/maximum-twin-sum-of-a-linked-list/description"
    },
    "2461": {
        "difficulty": "MEDIUM",
        "id": 2461,
        "questionFrontendId": "2385",
        "title": "Amount of Time for Binary Tree to Be Infected",
        "titleSlug": "amount-of-time-for-binary-tree-to-be-infected",
        "topicTags": [
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Tree",
                "slug": "tree"
            },
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Breadth-First Search",
                "slug": "breadth-first-search"
            },
            {
                "name": "Binary Tree",
                "slug": "binary-tree"
            }
        ],
        "companyNames": [
            "meta",
            "microsoft",
            "goldman_sachs",
            "bloomberg",
            "apple",
            "adobe",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 9,
        "url": "https://leetcode.com/problems/amount-of-time-for-binary-tree-to-be-infected/description"
    },
    "2573": {
        "difficulty": "MEDIUM",
        "id": 2573,
        "questionFrontendId": "2487",
        "title": "Remove Nodes From Linked List",
        "titleSlug": "remove-nodes-from-linked-list",
        "topicTags": [
            {
                "name": "Linked List",
                "slug": "linked-list"
            },
            {
                "name": "Stack",
                "slug": "stack"
            },
            {
                "name": "Recursion",
                "slug": "recursion"
            },
            {
                "name": "Monotonic Stack",
                "slug": "monotonic-stack"
            }
        ],
        "companyNames": [
            "meta",
            "bloomberg",
            "apple",
            "adobe",
            "amazon",
            "uber"
        ],
        "frequencyCount": 6,
        "url": "https://leetcode.com/problems/remove-nodes-from-linked-list/description"
    },
    "2717": {
        "difficulty": "HARD",
        "id": 2717,
        "questionFrontendId": "2603",
        "title": "Collect Coins in a Tree",
        "titleSlug": "collect-coins-in-a-tree",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Tree",
                "slug": "tree"
            },
            {
                "name": "Graph",
                "slug": "graph"
            },
            {
                "name": "Topological Sort",
                "slug": "topological-sort"
            }
        ],
        "companyNames": [
            "meta",
            "uber"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/collect-coins-in-a-tree/description"
    },
    "2732": {
        "difficulty": "EASY",
        "id": 2732,
        "questionFrontendId": "2620",
        "title": "Counter",
        "titleSlug": "counter",
        "topicTags": [],
        "companyNames": [
            "meta",
            "microsoft",
            "bloomberg",
            "apple",
            "adobe",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 8,
        "url": "https://leetcode.com/problems/counter/description"
    },
    "3329": {
        "difficulty": "MEDIUM",
        "id": 3329,
        "questionFrontendId": "3043",
        "title": "Find the Length of the Longest Common Prefix",
        "titleSlug": "find-the-length-of-the-longest-common-prefix",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Trie",
                "slug": "trie"
            }
        ],
        "companyNames": [
            "meta",
            "tiktok",
            "uber"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/find-the-length-of-the-longest-common-prefix/description"
    },
    "43": {
        "difficulty": "MEDIUM",
        "id": 43,
        "questionFrontendId": "43",
        "title": "Multiply Strings",
        "titleSlug": "multiply-strings",
        "topicTags": [
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Simulation",
                "slug": "simulation"
            }
        ],
        "companyNames": [
            "meta",
            "tiktok",
            "microsoft",
            "bloomberg",
            "apple",
            "adobe",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 9,
        "url": "https://leetcode.com/problems/multiply-strings/description"
    },
    "63": {
        "difficulty": "MEDIUM",
        "id": 63,
        "questionFrontendId": "63",
        "title": "Unique Paths II",
        "titleSlug": "unique-paths-ii",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Matrix",
                "slug": "matrix"
            }
        ],
        "companyNames": [
            "meta",
            "microsoft",
            "bloomberg",
            "apple",
            "adobe",
            "tcs",
            "cisco",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 10,
        "url": "https://leetcode.com/problems/unique-paths-ii/description"
    },
    "81": {
        "difficulty": "MEDIUM",
        "id": 81,
        "questionFrontendId": "81",
        "title": "Search in Rotated Sorted Array II",
        "titleSlug": "search-in-rotated-sorted-array-ii",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Binary Search",
                "slug": "binary-search"
            }
        ],
        "companyNames": [
            "meta",
            "microsoft",
            "oracle",
            "bloomberg",
            "apple",
            "adobe",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 9,
        "url": "https://leetcode.com/problems/search-in-rotated-sorted-array-ii/description"
    },
    "82": {
        "difficulty": "MEDIUM",
        "id": 82,
        "questionFrontendId": "82",
        "title": "Remove Duplicates from Sorted List II",
        "titleSlug": "remove-duplicates-from-sorted-list-ii",
        "topicTags": [
            {
                "name": "Linked List",
                "slug": "linked-list"
            },
            {
                "name": "Two Pointers",
                "slug": "two-pointers"
            }
        ],
        "companyNames": [
            "meta",
            "microsoft",
            "bloomberg",
            "apple",
            "adobe",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 8,
        "url": "https://leetcode.com/problems/remove-duplicates-from-sorted-list-ii/description"
    },
    "92": {
        "difficulty": "MEDIUM",
        "id": 92,
        "questionFrontendId": "92",
        "title": "Reverse Linked List II",
        "titleSlug": "reverse-linked-list-ii",
        "topicTags": [
            {
                "name": "Linked List",
                "slug": "linked-list"
            }
        ],
        "companyNames": [
            "meta",
            "tiktok",
            "microsoft",
            "oracle",
            "bloomberg",
            "apple",
            "adobe",
            "nvidia",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 11,
        "url": "https://leetcode.com/problems/reverse-linked-list-ii/description"
    },
    "95": {
        "difficulty": "MEDIUM",
        "id": 95,
        "questionFrontendId": "95",
        "title": "Unique Binary Search Trees II",
        "titleSlug": "unique-binary-search-trees-ii",
        "topicTags": [
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Backtracking",
                "slug": "backtracking"
            },
            {
                "name": "Tree",
                "slug": "tree"
            },
            {
                "name": "Binary Search Tree",
                "slug": "binary-search-tree"
            },
            {
                "name": "Binary Tree",
                "slug": "binary-tree"
            }
        ],
        "companyNames": [
            "meta",
            "microsoft",
            "bloomberg",
            "apple",
            "adobe",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 8,
        "url": "https://leetcode.com/problems/unique-binary-search-trees-ii/description"
    },
    "97": {
        "difficulty": "MEDIUM",
        "id": 97,
        "questionFrontendId": "97",
        "title": "Interleaving String",
        "titleSlug": "interleaving-string",
        "topicTags": [
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            }
        ],
        "companyNames": [
            "meta",
            "tiktok",
            "microsoft",
            "goldman_sachs",
            "apple",
            "adobe",
            "walmart_labs",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 10,
        "url": "https://leetcode.com/problems/interleaving-string/description"
    },
    "109": {
        "difficulty": "MEDIUM",
        "id": 109,
        "questionFrontendId": "109",
        "title": "Convert Sorted List to Binary Search Tree",
        "titleSlug": "convert-sorted-list-to-binary-search-tree",
        "topicTags": [
            {
                "name": "Linked List",
                "slug": "linked-list"
            },
            {
                "name": "Divide and Conquer",
                "slug": "divide-and-conquer"
            },
            {
                "name": "Tree",
                "slug": "tree"
            },
            {
                "name": "Binary Search Tree",
                "slug": "binary-search-tree"
            },
            {
                "name": "Binary Tree",
                "slug": "binary-tree"
            }
        ],
        "companyNames": [
            "meta",
            "microsoft",
            "bloomberg",
            "apple",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 7,
        "url": "https://leetcode.com/problems/convert-sorted-list-to-binary-search-tree/description"
    },
    "153": {
        "difficulty": "MEDIUM",
        "id": 153,
        "questionFrontendId": "153",
        "title": "Find Minimum in Rotated Sorted Array",
        "titleSlug": "find-minimum-in-rotated-sorted-array",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Binary Search",
                "slug": "binary-search"
            }
        ],
        "companyNames": [
            "meta",
            "tiktok",
            "microsoft",
            "goldman_sachs",
            "bloomberg",
            "apple",
            "adobe",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 10,
        "url": "https://leetcode.com/problems/find-minimum-in-rotated-sorted-array/description"
    },
    "191": {
        "difficulty": "EASY",
        "id": 191,
        "questionFrontendId": "191",
        "title": "Number of 1 Bits",
        "titleSlug": "number-of-1-bits",
        "topicTags": [
            {
                "name": "Divide and Conquer",
                "slug": "divide-and-conquer"
            },
            {
                "name": "Bit Manipulation",
                "slug": "bit-manipulation"
            }
        ],
        "companyNames": [
            "meta",
            "microsoft",
            "bloomberg",
            "apple",
            "adobe",
            "cisco",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 9,
        "url": "https://leetcode.com/problems/number-of-1-bits/description"
    },
    "197": {
        "difficulty": "EASY",
        "id": 197,
        "questionFrontendId": "197",
        "title": "Rising Temperature",
        "titleSlug": "rising-temperature",
        "topicTags": [
            {
                "name": "Database",
                "slug": "database"
            }
        ],
        "companyNames": [
            "meta",
            "microsoft",
            "bloomberg",
            "apple",
            "adobe",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 8,
        "url": "https://leetcode.com/problems/rising-temperature/description"
    },
    "232": {
        "difficulty": "EASY",
        "id": 232,
        "questionFrontendId": "232",
        "title": "Implement Queue using Stacks",
        "titleSlug": "implement-queue-using-stacks",
        "topicTags": [
            {
                "name": "Stack",
                "slug": "stack"
            },
            {
                "name": "Design",
                "slug": "design"
            },
            {
                "name": "Queue",
                "slug": "queue"
            }
        ],
        "companyNames": [
            "meta",
            "microsoft",
            "oracle",
            "bloomberg",
            "apple",
            "adobe",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 9,
        "url": "https://leetcode.com/problems/implement-queue-using-stacks/description"
    },
    "246": {
        "difficulty": "EASY",
        "id": 246,
        "questionFrontendId": "246",
        "title": "Strobogrammatic Number",
        "titleSlug": "strobogrammatic-number",
        "topicTags": [
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Two Pointers",
                "slug": "two-pointers"
            },
            {
                "name": "String",
                "slug": "string"
            }
        ],
        "companyNames": [
            "meta",
            "microsoft",
            "google",
            "uber"
        ],
        "frequencyCount": 4,
        "url": "https://leetcode.com/problems/strobogrammatic-number/description"
    },
    "274": {
        "difficulty": "MEDIUM",
        "id": 274,
        "questionFrontendId": "274",
        "title": "H-Index",
        "titleSlug": "h-index",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            },
            {
                "name": "Counting Sort",
                "slug": "counting-sort"
            }
        ],
        "companyNames": [
            "meta",
            "microsoft",
            "bloomberg",
            "apple",
            "adobe",
            "nvidia",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 9,
        "url": "https://leetcode.com/problems/h-index/description"
    },
    "303": {
        "difficulty": "EASY",
        "id": 303,
        "questionFrontendId": "303",
        "title": "Range Sum Query - Immutable",
        "titleSlug": "range-sum-query-immutable",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Design",
                "slug": "design"
            },
            {
                "name": "Prefix Sum",
                "slug": "prefix-sum"
            }
        ],
        "companyNames": [
            "meta",
            "microsoft",
            "bloomberg",
            "apple",
            "adobe",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 8,
        "url": "https://leetcode.com/problems/range-sum-query-immutable/description"
    },
    "342": {
        "difficulty": "EASY",
        "id": 342,
        "questionFrontendId": "342",
        "title": "Power of Four",
        "titleSlug": "power-of-four",
        "topicTags": [
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Bit Manipulation",
                "slug": "bit-manipulation"
            },
            {
                "name": "Recursion",
                "slug": "recursion"
            }
        ],
        "companyNames": [
            "meta",
            "microsoft",
            "apple",
            "adobe",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 7,
        "url": "https://leetcode.com/problems/power-of-four/description"
    },
    "354": {
        "difficulty": "HARD",
        "id": 354,
        "questionFrontendId": "354",
        "title": "Russian Doll Envelopes",
        "titleSlug": "russian-doll-envelopes",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Binary Search",
                "slug": "binary-search"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ],
        "companyNames": [
            "meta",
            "microsoft",
            "bloomberg",
            "adobe",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 7,
        "url": "https://leetcode.com/problems/russian-doll-envelopes/description"
    },
    "374": {
        "difficulty": "EASY",
        "id": 374,
        "questionFrontendId": "374",
        "title": "Guess Number Higher or Lower",
        "titleSlug": "guess-number-higher-or-lower",
        "topicTags": [
            {
                "name": "Binary Search",
                "slug": "binary-search"
            },
            {
                "name": "Interactive",
                "slug": "interactive"
            }
        ],
        "companyNames": [
            "meta",
            "bloomberg",
            "apple",
            "adobe",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 7,
        "url": "https://leetcode.com/problems/guess-number-higher-or-lower/description"
    },
    "377": {
        "difficulty": "MEDIUM",
        "id": 377,
        "questionFrontendId": "377",
        "title": "Combination Sum IV",
        "titleSlug": "combination-sum-iv",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            }
        ],
        "companyNames": [
            "meta",
            "microsoft",
            "oracle",
            "bloomberg",
            "apple",
            "adobe",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 9,
        "url": "https://leetcode.com/problems/combination-sum-iv/description"
    },
    "387": {
        "difficulty": "EASY",
        "id": 387,
        "questionFrontendId": "387",
        "title": "First Unique Character in a String",
        "titleSlug": "first-unique-character-in-a-string",
        "topicTags": [
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Queue",
                "slug": "queue"
            },
            {
                "name": "Counting",
                "slug": "counting"
            }
        ],
        "companyNames": [
            "meta",
            "tiktok",
            "microsoft",
            "oracle",
            "goldman_sachs",
            "bloomberg",
            "apple",
            "adobe",
            "walmart_labs",
            "tcs",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 13,
        "url": "https://leetcode.com/problems/first-unique-character-in-a-string/description"
    },
    "389": {
        "difficulty": "EASY",
        "id": 389,
        "questionFrontendId": "389",
        "title": "Find the Difference",
        "titleSlug": "find-the-difference",
        "topicTags": [
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Bit Manipulation",
                "slug": "bit-manipulation"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ],
        "companyNames": [
            "meta",
            "microsoft",
            "bloomberg",
            "apple",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 7,
        "url": "https://leetcode.com/problems/find-the-difference/description"
    },
    "401": {
        "difficulty": "EASY",
        "id": 401,
        "questionFrontendId": "401",
        "title": "Binary Watch",
        "titleSlug": "binary-watch",
        "topicTags": [
            {
                "name": "Backtracking",
                "slug": "backtracking"
            },
            {
                "name": "Bit Manipulation",
                "slug": "bit-manipulation"
            }
        ],
        "companyNames": [
            "meta",
            "apple",
            "adobe",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 6,
        "url": "https://leetcode.com/problems/binary-watch/description"
    },
    "402": {
        "difficulty": "MEDIUM",
        "id": 402,
        "questionFrontendId": "402",
        "title": "Remove K Digits",
        "titleSlug": "remove-k-digits",
        "topicTags": [
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Stack",
                "slug": "stack"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            },
            {
                "name": "Monotonic Stack",
                "slug": "monotonic-stack"
            }
        ],
        "companyNames": [
            "meta",
            "tiktok",
            "microsoft",
            "bloomberg",
            "apple",
            "adobe",
            "cisco",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 10,
        "url": "https://leetcode.com/problems/remove-k-digits/description"
    },
    "403": {
        "difficulty": "HARD",
        "id": 403,
        "questionFrontendId": "403",
        "title": "Frog Jump",
        "titleSlug": "frog-jump",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            }
        ],
        "companyNames": [
            "meta",
            "tiktok",
            "microsoft",
            "apple",
            "adobe",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 8,
        "url": "https://leetcode.com/problems/frog-jump/description"
    },
    "414": {
        "difficulty": "EASY",
        "id": 414,
        "questionFrontendId": "414",
        "title": "Third Maximum Number",
        "titleSlug": "third-maximum-number",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ],
        "companyNames": [
            "meta",
            "tiktok",
            "microsoft",
            "bloomberg",
            "adobe",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 8,
        "url": "https://leetcode.com/problems/third-maximum-number/description"
    },
    "448": {
        "difficulty": "EASY",
        "id": 448,
        "questionFrontendId": "448",
        "title": "Find All Numbers Disappeared in an Array",
        "titleSlug": "find-all-numbers-disappeared-in-an-array",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            }
        ],
        "companyNames": [
            "meta",
            "bloomberg",
            "apple",
            "adobe",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 7,
        "url": "https://leetcode.com/problems/find-all-numbers-disappeared-in-an-array/description"
    },
    "465": {
        "difficulty": "HARD",
        "id": 465,
        "questionFrontendId": "465",
        "title": "Optimal Account Balancing",
        "titleSlug": "optimal-account-balancing",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Backtracking",
                "slug": "backtracking"
            },
            {
                "name": "Bit Manipulation",
                "slug": "bit-manipulation"
            },
            {
                "name": "Bitmask",
                "slug": "bitmask"
            }
        ],
        "companyNames": [
            "meta",
            "tiktok",
            "microsoft",
            "bloomberg",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 7,
        "url": "https://leetcode.com/problems/optimal-account-balancing/description"
    },
    "473": {
        "difficulty": "MEDIUM",
        "id": 473,
        "questionFrontendId": "473",
        "title": "Matchsticks to Square",
        "titleSlug": "matchsticks-to-square",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Backtracking",
                "slug": "backtracking"
            },
            {
                "name": "Bit Manipulation",
                "slug": "bit-manipulation"
            },
            {
                "name": "Bitmask",
                "slug": "bitmask"
            }
        ],
        "companyNames": [
            "meta",
            "microsoft",
            "uber"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/matchsticks-to-square/description"
    },
    "496": {
        "difficulty": "EASY",
        "id": 496,
        "questionFrontendId": "496",
        "title": "Next Greater Element I",
        "titleSlug": "next-greater-element-i",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Stack",
                "slug": "stack"
            },
            {
                "name": "Monotonic Stack",
                "slug": "monotonic-stack"
            }
        ],
        "companyNames": [
            "meta",
            "microsoft",
            "goldman_sachs",
            "bloomberg",
            "apple",
            "adobe",
            "accenture",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 10,
        "url": "https://leetcode.com/problems/next-greater-element-i/description"
    },
    "501": {
        "difficulty": "EASY",
        "id": 501,
        "questionFrontendId": "501",
        "title": "Find Mode in Binary Search Tree",
        "titleSlug": "find-mode-in-binary-search-tree",
        "topicTags": [
            {
                "name": "Tree",
                "slug": "tree"
            },
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Binary Search Tree",
                "slug": "binary-search-tree"
            },
            {
                "name": "Binary Tree",
                "slug": "binary-tree"
            }
        ],
        "companyNames": [
            "meta",
            "bloomberg",
            "apple",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 6,
        "url": "https://leetcode.com/problems/find-mode-in-binary-search-tree/description"
    },
    "523": {
        "difficulty": "MEDIUM",
        "id": 523,
        "questionFrontendId": "523",
        "title": "Continuous Subarray Sum",
        "titleSlug": "continuous-subarray-sum",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Prefix Sum",
                "slug": "prefix-sum"
            }
        ],
        "companyNames": [
            "meta",
            "tiktok",
            "microsoft",
            "bloomberg",
            "apple",
            "adobe",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 9,
        "url": "https://leetcode.com/problems/continuous-subarray-sum/description"
    },
    "525": {
        "difficulty": "MEDIUM",
        "id": 525,
        "questionFrontendId": "525",
        "title": "Contiguous Array",
        "titleSlug": "contiguous-array",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Prefix Sum",
                "slug": "prefix-sum"
            }
        ],
        "companyNames": [
            "meta",
            "tiktok",
            "microsoft",
            "oracle",
            "bloomberg",
            "apple",
            "adobe",
            "walmart_labs",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 11,
        "url": "https://leetcode.com/problems/contiguous-array/description"
    },
    "581": {
        "difficulty": "MEDIUM",
        "id": 581,
        "questionFrontendId": "581",
        "title": "Shortest Unsorted Continuous Subarray",
        "titleSlug": "shortest-unsorted-continuous-subarray",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Two Pointers",
                "slug": "two-pointers"
            },
            {
                "name": "Stack",
                "slug": "stack"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            },
            {
                "name": "Monotonic Stack",
                "slug": "monotonic-stack"
            }
        ],
        "companyNames": [
            "meta",
            "microsoft",
            "goldman_sachs",
            "adobe",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 7,
        "url": "https://leetcode.com/problems/shortest-unsorted-continuous-subarray/description"
    },
    "602": {
        "difficulty": "MEDIUM",
        "id": 602,
        "questionFrontendId": "602",
        "title": "Friend Requests II: Who Has the Most Friends",
        "titleSlug": "friend-requests-ii-who-has-the-most-friends",
        "topicTags": [
            {
                "name": "Database",
                "slug": "database"
            }
        ],
        "companyNames": [
            "meta",
            "microsoft",
            "apple",
            "amazon",
            "uber"
        ],
        "frequencyCount": 5,
        "url": "https://leetcode.com/problems/friend-requests-ii-who-has-the-most-friends/description"
    },
    "607": {
        "difficulty": "EASY",
        "id": 607,
        "questionFrontendId": "607",
        "title": "Sales Person",
        "titleSlug": "sales-person",
        "topicTags": [
            {
                "name": "Database",
                "slug": "database"
            }
        ],
        "companyNames": [
            "meta",
            "bloomberg",
            "apple",
            "adobe",
            "amazon",
            "uber"
        ],
        "frequencyCount": 6,
        "url": "https://leetcode.com/problems/sales-person/description"
    },
    "608": {
        "difficulty": "MEDIUM",
        "id": 608,
        "questionFrontendId": "608",
        "title": "Tree Node",
        "titleSlug": "tree-node",
        "topicTags": [
            {
                "name": "Database",
                "slug": "database"
            }
        ],
        "companyNames": [
            "meta",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 4,
        "url": "https://leetcode.com/problems/tree-node/description"
    },
    "610": {
        "difficulty": "EASY",
        "id": 610,
        "questionFrontendId": "610",
        "title": "Triangle Judgement",
        "titleSlug": "triangle-judgement",
        "topicTags": [
            {
                "name": "Database",
                "slug": "database"
            }
        ],
        "companyNames": [
            "meta",
            "bloomberg",
            "apple",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 6,
        "url": "https://leetcode.com/problems/triangle-judgement/description"
    },
    "646": {
        "difficulty": "MEDIUM",
        "id": 646,
        "questionFrontendId": "646",
        "title": "Maximum Length of Pair Chain",
        "titleSlug": "maximum-length-of-pair-chain",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ],
        "companyNames": [
            "meta",
            "bloomberg",
            "apple",
            "adobe",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 7,
        "url": "https://leetcode.com/problems/maximum-length-of-pair-chain/description"
    },
    "662": {
        "difficulty": "MEDIUM",
        "id": 662,
        "questionFrontendId": "662",
        "title": "Maximum Width of Binary Tree",
        "titleSlug": "maximum-width-of-binary-tree",
        "topicTags": [
            {
                "name": "Tree",
                "slug": "tree"
            },
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Breadth-First Search",
                "slug": "breadth-first-search"
            },
            {
                "name": "Binary Tree",
                "slug": "binary-tree"
            }
        ],
        "companyNames": [
            "meta",
            "tiktok",
            "bloomberg",
            "apple",
            "adobe",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 8,
        "url": "https://leetcode.com/problems/maximum-width-of-binary-tree/description"
    },
    "680": {
        "difficulty": "EASY",
        "id": 680,
        "questionFrontendId": "680",
        "title": "Valid Palindrome II",
        "titleSlug": "valid-palindrome-ii",
        "topicTags": [
            {
                "name": "Two Pointers",
                "slug": "two-pointers"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            }
        ],
        "companyNames": [
            "meta",
            "tiktok",
            "microsoft",
            "bloomberg",
            "apple",
            "adobe",
            "walmart_labs",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 10,
        "url": "https://leetcode.com/problems/valid-palindrome-ii/description"
    },
    "697": {
        "difficulty": "EASY",
        "id": 697,
        "questionFrontendId": "697",
        "title": "Degree of an Array",
        "titleSlug": "degree-of-an-array",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            }
        ],
        "companyNames": [
            "meta",
            "tiktok",
            "oracle",
            "adobe",
            "walmart_labs",
            "uber"
        ],
        "frequencyCount": 6,
        "url": "https://leetcode.com/problems/degree-of-an-array/description"
    },
    "719": {
        "difficulty": "HARD",
        "id": 719,
        "questionFrontendId": "719",
        "title": "Find K-th Smallest Pair Distance",
        "titleSlug": "find-k-th-smallest-pair-distance",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Two Pointers",
                "slug": "two-pointers"
            },
            {
                "name": "Binary Search",
                "slug": "binary-search"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ],
        "companyNames": [
            "meta",
            "bloomberg",
            "adobe",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 6,
        "url": "https://leetcode.com/problems/find-k-th-smallest-pair-distance/description"
    },
    "723": {
        "difficulty": "MEDIUM",
        "id": 723,
        "questionFrontendId": "723",
        "title": "Candy Crush",
        "titleSlug": "candy-crush",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Two Pointers",
                "slug": "two-pointers"
            },
            {
                "name": "Matrix",
                "slug": "matrix"
            },
            {
                "name": "Simulation",
                "slug": "simulation"
            }
        ],
        "companyNames": [
            "meta",
            "bloomberg",
            "uber"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/candy-crush/description"
    },
    "725": {
        "difficulty": "MEDIUM",
        "id": 725,
        "questionFrontendId": "725",
        "title": "Split Linked List in Parts",
        "titleSlug": "split-linked-list-in-parts",
        "topicTags": [
            {
                "name": "Linked List",
                "slug": "linked-list"
            }
        ],
        "companyNames": [
            "meta",
            "bloomberg",
            "adobe",
            "amazon",
            "uber"
        ],
        "frequencyCount": 5,
        "url": "https://leetcode.com/problems/split-linked-list-in-parts/description"
    },
    "747": {
        "difficulty": "EASY",
        "id": 747,
        "questionFrontendId": "746",
        "title": "Min Cost Climbing Stairs",
        "titleSlug": "min-cost-climbing-stairs",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            }
        ],
        "companyNames": [
            "meta",
            "microsoft",
            "bloomberg",
            "apple",
            "adobe",
            "accenture",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 9,
        "url": "https://leetcode.com/problems/min-cost-climbing-stairs/description"
    },
    "753": {
        "difficulty": "MEDIUM",
        "id": 753,
        "questionFrontendId": "752",
        "title": "Open the Lock",
        "titleSlug": "open-the-lock",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Breadth-First Search",
                "slug": "breadth-first-search"
            }
        ],
        "companyNames": [
            "meta",
            "tiktok",
            "microsoft",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 6,
        "url": "https://leetcode.com/problems/open-the-lock/description"
    },
    "782": {
        "difficulty": "EASY",
        "id": 782,
        "questionFrontendId": "771",
        "title": "Jewels and Stones",
        "titleSlug": "jewels-and-stones",
        "topicTags": [
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "String",
                "slug": "string"
            }
        ],
        "companyNames": [
            "meta",
            "microsoft",
            "apple",
            "adobe",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 7,
        "url": "https://leetcode.com/problems/jewels-and-stones/description"
    },
    "795": {
        "difficulty": "MEDIUM",
        "id": 795,
        "questionFrontendId": "779",
        "title": "K-th Symbol in Grammar",
        "titleSlug": "k-th-symbol-in-grammar",
        "topicTags": [
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Bit Manipulation",
                "slug": "bit-manipulation"
            },
            {
                "name": "Recursion",
                "slug": "recursion"
            }
        ],
        "companyNames": [
            "meta",
            "bloomberg",
            "apple",
            "adobe",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 7,
        "url": "https://leetcode.com/problems/k-th-symbol-in-grammar/description"
    },
    "801": {
        "difficulty": "MEDIUM",
        "id": 801,
        "questionFrontendId": "785",
        "title": "Is Graph Bipartite?",
        "titleSlug": "is-graph-bipartite",
        "topicTags": [
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Breadth-First Search",
                "slug": "breadth-first-search"
            },
            {
                "name": "Union Find",
                "slug": "union-find"
            },
            {
                "name": "Graph",
                "slug": "graph"
            }
        ],
        "companyNames": [
            "meta",
            "tiktok",
            "microsoft",
            "bloomberg",
            "apple",
            "adobe",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 9,
        "url": "https://leetcode.com/problems/is-graph-bipartite/description"
    },
    "819": {
        "difficulty": "HARD",
        "id": 819,
        "questionFrontendId": "801",
        "title": "Minimum Swaps To Make Sequences Increasing",
        "titleSlug": "minimum-swaps-to-make-sequences-increasing",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            }
        ],
        "companyNames": [
            "meta",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 4,
        "url": "https://leetcode.com/problems/minimum-swaps-to-make-sequences-increasing/description"
    },
    "890": {
        "difficulty": "EASY",
        "id": 890,
        "questionFrontendId": "860",
        "title": "Lemonade Change",
        "titleSlug": "lemonade-change",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            }
        ],
        "companyNames": [
            "meta",
            "microsoft",
            "bloomberg",
            "amazon",
            "uber"
        ],
        "frequencyCount": 5,
        "url": "https://leetcode.com/problems/lemonade-change/description"
    },
    "966": {
        "difficulty": "MEDIUM",
        "id": 966,
        "questionFrontendId": "930",
        "title": "Binary Subarrays With Sum",
        "titleSlug": "binary-subarrays-with-sum",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Sliding Window",
                "slug": "sliding-window"
            },
            {
                "name": "Prefix Sum",
                "slug": "prefix-sum"
            }
        ],
        "companyNames": [
            "meta",
            "microsoft",
            "bloomberg",
            "apple",
            "adobe",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 8,
        "url": "https://leetcode.com/problems/binary-subarrays-with-sum/description"
    },
    "969": {
        "difficulty": "EASY",
        "id": 969,
        "questionFrontendId": "933",
        "title": "Number of Recent Calls",
        "titleSlug": "number-of-recent-calls",
        "topicTags": [
            {
                "name": "Design",
                "slug": "design"
            },
            {
                "name": "Queue",
                "slug": "queue"
            },
            {
                "name": "Data Stream",
                "slug": "data-stream"
            }
        ],
        "companyNames": [
            "meta",
            "bloomberg",
            "apple",
            "adobe",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 7,
        "url": "https://leetcode.com/problems/number-of-recent-calls/description"
    },
    "1044": {
        "difficulty": "EASY",
        "id": 1044,
        "questionFrontendId": "1002",
        "title": "Find Common Characters",
        "titleSlug": "find-common-characters",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "String",
                "slug": "string"
            }
        ],
        "companyNames": [
            "meta",
            "microsoft",
            "bloomberg",
            "apple",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 7,
        "url": "https://leetcode.com/problems/find-common-characters/description"
    },
    "1054": {
        "difficulty": "EASY",
        "id": 1054,
        "questionFrontendId": "1009",
        "title": "Complement of Base 10 Integer",
        "titleSlug": "complement-of-base-10-integer",
        "topicTags": [
            {
                "name": "Bit Manipulation",
                "slug": "bit-manipulation"
            }
        ],
        "companyNames": [
            "meta",
            "microsoft",
            "bloomberg",
            "apple",
            "adobe",
            "tcs",
            "accenture",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 10,
        "url": "https://leetcode.com/problems/complement-of-base-10-integer/description"
    },
    "1056": {
        "difficulty": "MEDIUM",
        "id": 1056,
        "questionFrontendId": "1011",
        "title": "Capacity To Ship Packages Within D Days",
        "titleSlug": "capacity-to-ship-packages-within-d-days",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Binary Search",
                "slug": "binary-search"
            }
        ],
        "companyNames": [
            "meta",
            "tiktok",
            "microsoft",
            "oracle",
            "goldman_sachs",
            "bloomberg",
            "apple",
            "doordash",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 11,
        "url": "https://leetcode.com/problems/capacity-to-ship-packages-within-d-days/description"
    },
    "1073": {
        "difficulty": "MEDIUM",
        "id": 1073,
        "questionFrontendId": "1020",
        "title": "Number of Enclaves",
        "titleSlug": "number-of-enclaves",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Breadth-First Search",
                "slug": "breadth-first-search"
            },
            {
                "name": "Union Find",
                "slug": "union-find"
            },
            {
                "name": "Matrix",
                "slug": "matrix"
            }
        ],
        "companyNames": [
            "meta",
            "bloomberg",
            "apple",
            "adobe",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 7,
        "url": "https://leetcode.com/problems/number-of-enclaves/description"
    },
    "1146": {
        "difficulty": "EASY",
        "id": 1146,
        "questionFrontendId": "1071",
        "title": "Greatest Common Divisor of Strings",
        "titleSlug": "greatest-common-divisor-of-strings",
        "topicTags": [
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "String",
                "slug": "string"
            }
        ],
        "companyNames": [
            "meta",
            "microsoft",
            "bloomberg",
            "apple",
            "adobe",
            "tcs",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 9,
        "url": "https://leetcode.com/problems/greatest-common-divisor-of-strings/description"
    },
    "1153": {
        "difficulty": "EASY",
        "id": 1153,
        "questionFrontendId": "1068",
        "title": "Product Sales Analysis I",
        "titleSlug": "product-sales-analysis-i",
        "topicTags": [
            {
                "name": "Database",
                "slug": "database"
            }
        ],
        "companyNames": [
            "meta",
            "microsoft",
            "adobe",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 6,
        "url": "https://leetcode.com/problems/product-sales-analysis-i/description"
    },
    "1212": {
        "difficulty": "MEDIUM",
        "id": 1212,
        "questionFrontendId": "1291",
        "title": "Sequential Digits",
        "titleSlug": "sequential-digits",
        "topicTags": [
            {
                "name": "Enumeration",
                "slug": "enumeration"
            }
        ],
        "companyNames": [
            "meta",
            "bloomberg",
            "apple",
            "adobe",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 7,
        "url": "https://leetcode.com/problems/sequential-digits/description"
    },
    "1228": {
        "difficulty": "MEDIUM",
        "id": 1228,
        "questionFrontendId": "1130",
        "title": "Minimum Cost Tree From Leaf Values",
        "titleSlug": "minimum-cost-tree-from-leaf-values",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Stack",
                "slug": "stack"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            },
            {
                "name": "Monotonic Stack",
                "slug": "monotonic-stack"
            }
        ],
        "companyNames": [
            "meta",
            "bloomberg",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 5,
        "url": "https://leetcode.com/problems/minimum-cost-tree-from-leaf-values/description"
    },
    "1292": {
        "difficulty": "MEDIUM",
        "id": 1292,
        "questionFrontendId": "1174",
        "title": "Immediate Food Delivery II",
        "titleSlug": "immediate-food-delivery-ii",
        "topicTags": [
            {
                "name": "Database",
                "slug": "database"
            }
        ],
        "companyNames": [
            "meta",
            "bloomberg",
            "apple",
            "doordash",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 7,
        "url": "https://leetcode.com/problems/immediate-food-delivery-ii/description"
    },
    "1306": {
        "difficulty": "EASY",
        "id": 1306,
        "questionFrontendId": "1200",
        "title": "Minimum Absolute Difference",
        "titleSlug": "minimum-absolute-difference",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ],
        "companyNames": [
            "meta",
            "oracle",
            "bloomberg",
            "apple",
            "amazon",
            "uber"
        ],
        "frequencyCount": 6,
        "url": "https://leetcode.com/problems/minimum-absolute-difference/description"
    },
    "1352": {
        "difficulty": "HARD",
        "id": 1352,
        "questionFrontendId": "1235",
        "title": "Maximum Profit in Job Scheduling",
        "titleSlug": "maximum-profit-in-job-scheduling",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Binary Search",
                "slug": "binary-search"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ],
        "companyNames": [
            "meta",
            "tiktok",
            "microsoft",
            "oracle",
            "goldman_sachs",
            "bloomberg",
            "apple",
            "adobe",
            "walmart_labs",
            "airbnb",
            "doordash",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 14,
        "url": "https://leetcode.com/problems/maximum-profit-in-job-scheduling/description"
    },
    "1367": {
        "difficulty": "HARD",
        "id": 1367,
        "questionFrontendId": "1691",
        "title": "Maximum Height by Stacking Cuboids ",
        "titleSlug": "maximum-height-by-stacking-cuboids",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ],
        "companyNames": [
            "meta",
            "amazon",
            "uber"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/maximum-height-by-stacking-cuboids/description"
    },
    "1402": {
        "difficulty": "MEDIUM",
        "id": 1402,
        "questionFrontendId": "1277",
        "title": "Count Square Submatrices with All Ones",
        "titleSlug": "count-square-submatrices-with-all-ones",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Matrix",
                "slug": "matrix"
            }
        ],
        "companyNames": [
            "meta",
            "tiktok",
            "microsoft",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 6,
        "url": "https://leetcode.com/problems/count-square-submatrices-with-all-ones/description"
    },
    "1415": {
        "difficulty": "EASY",
        "id": 1415,
        "questionFrontendId": "1280",
        "title": "Students and Examinations",
        "titleSlug": "students-and-examinations",
        "topicTags": [
            {
                "name": "Database",
                "slug": "database"
            }
        ],
        "companyNames": [
            "meta",
            "microsoft",
            "apple",
            "adobe",
            "tcs",
            "accenture",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 9,
        "url": "https://leetcode.com/problems/students-and-examinations/description"
    },
    "1505": {
        "difficulty": "EASY",
        "id": 1505,
        "questionFrontendId": "1389",
        "title": "Create Target Array in the Given Order",
        "titleSlug": "create-target-array-in-the-given-order",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Simulation",
                "slug": "simulation"
            }
        ],
        "companyNames": [
            "meta",
            "bloomberg",
            "apple",
            "adobe",
            "amazon",
            "uber"
        ],
        "frequencyCount": 6,
        "url": "https://leetcode.com/problems/create-target-array-in-the-given-order/description"
    },
    "1528": {
        "difficulty": "EASY",
        "id": 1528,
        "questionFrontendId": "1431",
        "title": "Kids With the Greatest Number of Candies",
        "titleSlug": "kids-with-the-greatest-number-of-candies",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            }
        ],
        "companyNames": [
            "meta",
            "microsoft",
            "bloomberg",
            "apple",
            "adobe",
            "tcs",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 9,
        "url": "https://leetcode.com/problems/kids-with-the-greatest-number-of-candies/description"
    },
    "1580": {
        "difficulty": "EASY",
        "id": 1580,
        "questionFrontendId": "1470",
        "title": "Shuffle the Array",
        "titleSlug": "shuffle-the-array",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            }
        ],
        "companyNames": [
            "meta",
            "microsoft",
            "bloomberg",
            "apple",
            "adobe",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 8,
        "url": "https://leetcode.com/problems/shuffle-the-array/description"
    },
    "1677": {
        "difficulty": "EASY",
        "id": 1677,
        "questionFrontendId": "1572",
        "title": "Matrix Diagonal Sum",
        "titleSlug": "matrix-diagonal-sum",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Matrix",
                "slug": "matrix"
            }
        ],
        "companyNames": [
            "meta",
            "bloomberg",
            "apple",
            "adobe",
            "tcs",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 8,
        "url": "https://leetcode.com/problems/matrix-diagonal-sum/description"
    },
    "1781": {
        "difficulty": "EASY",
        "id": 1781,
        "questionFrontendId": "1662",
        "title": "Check If Two String Arrays are Equivalent",
        "titleSlug": "check-if-two-string-arrays-are-equivalent",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "String",
                "slug": "string"
            }
        ],
        "companyNames": [
            "meta",
            "bloomberg",
            "apple",
            "adobe",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 7,
        "url": "https://leetcode.com/problems/check-if-two-string-arrays-are-equivalent/description"
    },
    "1786": {
        "difficulty": "EASY",
        "id": 1786,
        "questionFrontendId": "1684",
        "title": "Count the Number of Consistent Strings",
        "titleSlug": "count-the-number-of-consistent-strings",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Bit Manipulation",
                "slug": "bit-manipulation"
            }
        ],
        "companyNames": [
            "meta",
            "amazon",
            "uber"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/count-the-number-of-consistent-strings/description"
    },
    "1866": {
        "difficulty": "MEDIUM",
        "id": 1866,
        "questionFrontendId": "1743",
        "title": "Restore the Array From Adjacent Pairs",
        "titleSlug": "restore-the-array-from-adjacent-pairs",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            }
        ],
        "companyNames": [
            "meta",
            "amazon",
            "uber"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/restore-the-array-from-adjacent-pairs/description"
    },
    "2048": {
        "difficulty": "EASY",
        "id": 2048,
        "questionFrontendId": "1920",
        "title": "Build Array from Permutation",
        "titleSlug": "build-array-from-permutation",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Simulation",
                "slug": "simulation"
            }
        ],
        "companyNames": [
            "meta",
            "bloomberg",
            "apple",
            "adobe",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 7,
        "url": "https://leetcode.com/problems/build-array-from-permutation/description"
    },
    "2118": {
        "difficulty": "MEDIUM",
        "id": 2118,
        "questionFrontendId": "2008",
        "title": "Maximum Earnings From Taxi",
        "titleSlug": "maximum-earnings-from-taxi",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Binary Search",
                "slug": "binary-search"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ],
        "companyNames": [
            "meta",
            "uber"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/maximum-earnings-from-taxi/description"
    },
    "2169": {
        "difficulty": "MEDIUM",
        "id": 2169,
        "questionFrontendId": "2043",
        "title": "Simple Bank System",
        "titleSlug": "simple-bank-system",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Design",
                "slug": "design"
            },
            {
                "name": "Simulation",
                "slug": "simulation"
            }
        ],
        "companyNames": [
            "meta",
            "airbnb",
            "uber"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/simple-bank-system/description"
    },
    "2216": {
        "difficulty": "MEDIUM",
        "id": 2216,
        "questionFrontendId": "2095",
        "title": "Delete the Middle Node of a Linked List",
        "titleSlug": "delete-the-middle-node-of-a-linked-list",
        "topicTags": [
            {
                "name": "Linked List",
                "slug": "linked-list"
            },
            {
                "name": "Two Pointers",
                "slug": "two-pointers"
            }
        ],
        "companyNames": [
            "meta",
            "microsoft",
            "bloomberg",
            "apple",
            "adobe",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 8,
        "url": "https://leetcode.com/problems/delete-the-middle-node-of-a-linked-list/description"
    },
    "2267": {
        "difficulty": "HARD",
        "id": 2267,
        "questionFrontendId": "2163",
        "title": "Minimum Difference in Sums After Removal of Elements",
        "titleSlug": "minimum-difference-in-sums-after-removal-of-elements",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Heap (Priority Queue)",
                "slug": "heap-priority-queue"
            }
        ],
        "companyNames": [
            "meta",
            "uber"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/minimum-difference-in-sums-after-removal-of-elements/description"
    },
    "2271": {
        "difficulty": "MEDIUM",
        "id": 2271,
        "questionFrontendId": "2149",
        "title": "Rearrange Array Elements by Sign",
        "titleSlug": "rearrange-array-elements-by-sign",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Two Pointers",
                "slug": "two-pointers"
            },
            {
                "name": "Simulation",
                "slug": "simulation"
            }
        ],
        "companyNames": [
            "meta",
            "microsoft",
            "bloomberg",
            "apple",
            "adobe",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 8,
        "url": "https://leetcode.com/problems/rearrange-array-elements-by-sign/description"
    },
    "2297": {
        "difficulty": "HARD",
        "id": 2297,
        "questionFrontendId": "2158",
        "title": "Amount of New Area Painted Each Day",
        "titleSlug": "amount-of-new-area-painted-each-day",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Segment Tree",
                "slug": "segment-tree"
            },
            {
                "name": "Ordered Set",
                "slug": "ordered-set"
            }
        ],
        "companyNames": [
            "meta",
            "tiktok",
            "google",
            "uber"
        ],
        "frequencyCount": 4,
        "url": "https://leetcode.com/problems/amount-of-new-area-painted-each-day/description"
    },
    "2483": {
        "difficulty": "MEDIUM",
        "id": 2483,
        "questionFrontendId": "2365",
        "title": "Task Scheduler II",
        "titleSlug": "task-scheduler-ii",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Simulation",
                "slug": "simulation"
            }
        ],
        "companyNames": [
            "meta",
            "nvidia",
            "amazon",
            "uber"
        ],
        "frequencyCount": 4,
        "url": "https://leetcode.com/problems/task-scheduler-ii/description"
    },
    "2576": {
        "difficulty": "MEDIUM",
        "id": 2576,
        "questionFrontendId": "2483",
        "title": "Minimum Penalty for a Shop",
        "titleSlug": "minimum-penalty-for-a-shop",
        "topicTags": [
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Prefix Sum",
                "slug": "prefix-sum"
            }
        ],
        "companyNames": [
            "meta",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 4,
        "url": "https://leetcode.com/problems/minimum-penalty-for-a-shop/description"
    },
    "2626": {
        "difficulty": "MEDIUM",
        "id": 2626,
        "questionFrontendId": "2537",
        "title": "Count the Number of Good Subarrays",
        "titleSlug": "count-the-number-of-good-subarrays",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Sliding Window",
                "slug": "sliding-window"
            }
        ],
        "companyNames": [
            "meta",
            "amazon",
            "uber"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/count-the-number-of-good-subarrays/description"
    },
    "2681": {
        "difficulty": "HARD",
        "id": 2681,
        "questionFrontendId": "2551",
        "title": "Put Marbles in Bags",
        "titleSlug": "put-marbles-in-bags",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            },
            {
                "name": "Heap (Priority Queue)",
                "slug": "heap-priority-queue"
            }
        ],
        "companyNames": [
            "meta",
            "apple",
            "adobe",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 6,
        "url": "https://leetcode.com/problems/put-marbles-in-bags/description"
    },
    "2724": {
        "difficulty": "MEDIUM",
        "id": 2724,
        "questionFrontendId": "2610",
        "title": "Convert an Array Into a 2D Array With Conditions",
        "titleSlug": "convert-an-array-into-a-2d-array-with-conditions",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            }
        ],
        "companyNames": [
            "meta",
            "apple",
            "adobe",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 6,
        "url": "https://leetcode.com/problems/convert-an-array-into-a-2d-array-with-conditions/description"
    },
    "2848": {
        "difficulty": "MEDIUM",
        "id": 2848,
        "questionFrontendId": "2741",
        "title": "Special Permutations",
        "titleSlug": "special-permutations",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Bit Manipulation",
                "slug": "bit-manipulation"
            },
            {
                "name": "Bitmask",
                "slug": "bitmask"
            }
        ],
        "companyNames": [
            "meta",
            "adobe",
            "uber"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/special-permutations/description"
    },
    "3062": {
        "difficulty": "EASY",
        "id": 3062,
        "questionFrontendId": "2877",
        "title": "Create a DataFrame from List",
        "titleSlug": "create-a-dataframe-from-list",
        "topicTags": [],
        "companyNames": [
            "meta",
            "microsoft",
            "bloomberg",
            "apple",
            "adobe",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 8,
        "url": "https://leetcode.com/problems/create-a-dataframe-from-list/description"
    },
    "38": {
        "difficulty": "MEDIUM",
        "id": 38,
        "questionFrontendId": "38",
        "title": "Count and Say",
        "titleSlug": "count-and-say",
        "topicTags": [
            {
                "name": "String",
                "slug": "string"
            }
        ],
        "companyNames": [
            "meta",
            "microsoft",
            "bloomberg",
            "apple",
            "adobe",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 8,
        "url": "https://leetcode.com/problems/count-and-say/description"
    },
    "52": {
        "difficulty": "HARD",
        "id": 52,
        "questionFrontendId": "52",
        "title": "N-Queens II",
        "titleSlug": "n-queens-ii",
        "topicTags": [
            {
                "name": "Backtracking",
                "slug": "backtracking"
            }
        ],
        "companyNames": [
            "meta",
            "microsoft",
            "bloomberg",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 6,
        "url": "https://leetcode.com/problems/n-queens-ii/description"
    },
    "60": {
        "difficulty": "HARD",
        "id": 60,
        "questionFrontendId": "60",
        "title": "Permutation Sequence",
        "titleSlug": "permutation-sequence",
        "topicTags": [
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Recursion",
                "slug": "recursion"
            }
        ],
        "companyNames": [
            "meta",
            "apple",
            "adobe",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 6,
        "url": "https://leetcode.com/problems/permutation-sequence/description"
    },
    "77": {
        "difficulty": "MEDIUM",
        "id": 77,
        "questionFrontendId": "77",
        "title": "Combinations",
        "titleSlug": "combinations",
        "topicTags": [
            {
                "name": "Backtracking",
                "slug": "backtracking"
            }
        ],
        "companyNames": [
            "meta",
            "tiktok",
            "microsoft",
            "bloomberg",
            "apple",
            "adobe",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 9,
        "url": "https://leetcode.com/problems/combinations/description"
    },
    "80": {
        "difficulty": "MEDIUM",
        "id": 80,
        "questionFrontendId": "80",
        "title": "Remove Duplicates from Sorted Array II",
        "titleSlug": "remove-duplicates-from-sorted-array-ii",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Two Pointers",
                "slug": "two-pointers"
            }
        ],
        "companyNames": [
            "meta",
            "tiktok",
            "microsoft",
            "bloomberg",
            "apple",
            "adobe",
            "tcs",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 10,
        "url": "https://leetcode.com/problems/remove-duplicates-from-sorted-array-ii/description"
    },
    "85": {
        "difficulty": "HARD",
        "id": 85,
        "questionFrontendId": "85",
        "title": "Maximal Rectangle",
        "titleSlug": "maximal-rectangle",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Stack",
                "slug": "stack"
            },
            {
                "name": "Matrix",
                "slug": "matrix"
            },
            {
                "name": "Monotonic Stack",
                "slug": "monotonic-stack"
            }
        ],
        "companyNames": [
            "meta",
            "tiktok",
            "microsoft",
            "oracle",
            "goldman_sachs",
            "bloomberg",
            "apple",
            "adobe",
            "tcs",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 12,
        "url": "https://leetcode.com/problems/maximal-rectangle/description"
    },
    "90": {
        "difficulty": "MEDIUM",
        "id": 90,
        "questionFrontendId": "90",
        "title": "Subsets II",
        "titleSlug": "subsets-ii",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Backtracking",
                "slug": "backtracking"
            },
            {
                "name": "Bit Manipulation",
                "slug": "bit-manipulation"
            }
        ],
        "companyNames": [
            "meta",
            "tiktok",
            "microsoft",
            "bloomberg",
            "apple",
            "adobe",
            "walmart_labs",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 10,
        "url": "https://leetcode.com/problems/subsets-ii/description"
    },
    "105": {
        "difficulty": "MEDIUM",
        "id": 105,
        "questionFrontendId": "105",
        "title": "Construct Binary Tree from Preorder and Inorder Traversal",
        "titleSlug": "construct-binary-tree-from-preorder-and-inorder-traversal",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Divide and Conquer",
                "slug": "divide-and-conquer"
            },
            {
                "name": "Tree",
                "slug": "tree"
            },
            {
                "name": "Binary Tree",
                "slug": "binary-tree"
            }
        ],
        "companyNames": [
            "meta",
            "tiktok",
            "microsoft",
            "bloomberg",
            "apple",
            "adobe",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 9,
        "url": "https://leetcode.com/problems/construct-binary-tree-from-preorder-and-inorder-traversal/description"
    },
    "120": {
        "difficulty": "MEDIUM",
        "id": 120,
        "questionFrontendId": "120",
        "title": "Triangle",
        "titleSlug": "triangle",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            }
        ],
        "companyNames": [
            "meta",
            "microsoft",
            "bloomberg",
            "apple",
            "adobe",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 8,
        "url": "https://leetcode.com/problems/triangle/description"
    },
    "130": {
        "difficulty": "MEDIUM",
        "id": 130,
        "questionFrontendId": "130",
        "title": "Surrounded Regions",
        "titleSlug": "surrounded-regions",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Breadth-First Search",
                "slug": "breadth-first-search"
            },
            {
                "name": "Union Find",
                "slug": "union-find"
            },
            {
                "name": "Matrix",
                "slug": "matrix"
            }
        ],
        "companyNames": [
            "meta",
            "tiktok",
            "microsoft",
            "goldman_sachs",
            "bloomberg",
            "apple",
            "adobe",
            "walmart_labs",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 11,
        "url": "https://leetcode.com/problems/surrounded-regions/description"
    },
    "167": {
        "difficulty": "MEDIUM",
        "id": 167,
        "questionFrontendId": "167",
        "title": "Two Sum II - Input Array Is Sorted",
        "titleSlug": "two-sum-ii-input-array-is-sorted",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Two Pointers",
                "slug": "two-pointers"
            },
            {
                "name": "Binary Search",
                "slug": "binary-search"
            }
        ],
        "companyNames": [
            "meta",
            "microsoft",
            "oracle",
            "goldman_sachs",
            "bloomberg",
            "apple",
            "adobe",
            "cisco",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 11,
        "url": "https://leetcode.com/problems/two-sum-ii-input-array-is-sorted/description"
    },
    "168": {
        "difficulty": "EASY",
        "id": 168,
        "questionFrontendId": "168",
        "title": "Excel Sheet Column Title",
        "titleSlug": "excel-sheet-column-title",
        "topicTags": [
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "String",
                "slug": "string"
            }
        ],
        "companyNames": [
            "meta",
            "microsoft",
            "oracle",
            "bloomberg",
            "apple",
            "accenture",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 9,
        "url": "https://leetcode.com/problems/excel-sheet-column-title/description"
    },
    "175": {
        "difficulty": "EASY",
        "id": 175,
        "questionFrontendId": "175",
        "title": "Combine Two Tables",
        "titleSlug": "combine-two-tables",
        "topicTags": [
            {
                "name": "Database",
                "slug": "database"
            }
        ],
        "companyNames": [
            "meta",
            "microsoft",
            "bloomberg",
            "apple",
            "adobe",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 8,
        "url": "https://leetcode.com/problems/combine-two-tables/description"
    },
    "178": {
        "difficulty": "MEDIUM",
        "id": 178,
        "questionFrontendId": "178",
        "title": "Rank Scores",
        "titleSlug": "rank-scores",
        "topicTags": [
            {
                "name": "Database",
                "slug": "database"
            }
        ],
        "companyNames": [
            "meta",
            "microsoft",
            "adobe",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 6,
        "url": "https://leetcode.com/problems/rank-scores/description"
    },
    "182": {
        "difficulty": "EASY",
        "id": 182,
        "questionFrontendId": "182",
        "title": "Duplicate Emails",
        "titleSlug": "duplicate-emails",
        "topicTags": [
            {
                "name": "Database",
                "slug": "database"
            }
        ],
        "companyNames": [
            "meta",
            "apple",
            "adobe",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 6,
        "url": "https://leetcode.com/problems/duplicate-emails/description"
    },
    "184": {
        "difficulty": "MEDIUM",
        "id": 184,
        "questionFrontendId": "184",
        "title": "Department Highest Salary",
        "titleSlug": "department-highest-salary",
        "topicTags": [
            {
                "name": "Database",
                "slug": "database"
            }
        ],
        "companyNames": [
            "meta",
            "microsoft",
            "adobe",
            "amazon",
            "uber"
        ],
        "frequencyCount": 5,
        "url": "https://leetcode.com/problems/department-highest-salary/description"
    },
    "185": {
        "difficulty": "HARD",
        "id": 185,
        "questionFrontendId": "185",
        "title": "Department Top Three Salaries",
        "titleSlug": "department-top-three-salaries",
        "topicTags": [
            {
                "name": "Database",
                "slug": "database"
            }
        ],
        "companyNames": [
            "meta",
            "microsoft",
            "bloomberg",
            "apple",
            "adobe",
            "tcs",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 9,
        "url": "https://leetcode.com/problems/department-top-three-salaries/description"
    },
    "196": {
        "difficulty": "EASY",
        "id": 196,
        "questionFrontendId": "196",
        "title": "Delete Duplicate Emails",
        "titleSlug": "delete-duplicate-emails",
        "topicTags": [
            {
                "name": "Database",
                "slug": "database"
            }
        ],
        "companyNames": [
            "meta",
            "oracle",
            "apple",
            "tcs",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 7,
        "url": "https://leetcode.com/problems/delete-duplicate-emails/description"
    },
    "201": {
        "difficulty": "MEDIUM",
        "id": 201,
        "questionFrontendId": "201",
        "title": "Bitwise AND of Numbers Range",
        "titleSlug": "bitwise-and-of-numbers-range",
        "topicTags": [
            {
                "name": "Bit Manipulation",
                "slug": "bit-manipulation"
            }
        ],
        "companyNames": [
            "meta",
            "apple",
            "adobe",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 6,
        "url": "https://leetcode.com/problems/bitwise-and-of-numbers-range/description"
    },
    "203": {
        "difficulty": "EASY",
        "id": 203,
        "questionFrontendId": "203",
        "title": "Remove Linked List Elements",
        "titleSlug": "remove-linked-list-elements",
        "topicTags": [
            {
                "name": "Linked List",
                "slug": "linked-list"
            },
            {
                "name": "Recursion",
                "slug": "recursion"
            }
        ],
        "companyNames": [
            "meta",
            "microsoft",
            "bloomberg",
            "apple",
            "adobe",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 8,
        "url": "https://leetcode.com/problems/remove-linked-list-elements/description"
    },
    "220": {
        "difficulty": "HARD",
        "id": 220,
        "questionFrontendId": "220",
        "title": "Contains Duplicate III",
        "titleSlug": "contains-duplicate-iii",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Sliding Window",
                "slug": "sliding-window"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            },
            {
                "name": "Bucket Sort",
                "slug": "bucket-sort"
            },
            {
                "name": "Ordered Set",
                "slug": "ordered-set"
            }
        ],
        "companyNames": [
            "meta",
            "adobe",
            "airbnb",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 6,
        "url": "https://leetcode.com/problems/contains-duplicate-iii/description"
    },
    "226": {
        "difficulty": "EASY",
        "id": 226,
        "questionFrontendId": "226",
        "title": "Invert Binary Tree",
        "titleSlug": "invert-binary-tree",
        "topicTags": [
            {
                "name": "Tree",
                "slug": "tree"
            },
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Breadth-First Search",
                "slug": "breadth-first-search"
            },
            {
                "name": "Binary Tree",
                "slug": "binary-tree"
            }
        ],
        "companyNames": [
            "meta",
            "tiktok",
            "microsoft",
            "oracle",
            "bloomberg",
            "apple",
            "adobe",
            "walmart_labs",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 11,
        "url": "https://leetcode.com/problems/invert-binary-tree/description"
    },
    "228": {
        "difficulty": "EASY",
        "id": 228,
        "questionFrontendId": "228",
        "title": "Summary Ranges",
        "titleSlug": "summary-ranges",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            }
        ],
        "companyNames": [
            "meta",
            "microsoft",
            "bloomberg",
            "apple",
            "adobe",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 8,
        "url": "https://leetcode.com/problems/summary-ranges/description"
    },
    "229": {
        "difficulty": "MEDIUM",
        "id": 229,
        "questionFrontendId": "229",
        "title": "Majority Element II",
        "titleSlug": "majority-element-ii",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            },
            {
                "name": "Counting",
                "slug": "counting"
            }
        ],
        "companyNames": [
            "meta",
            "microsoft",
            "bloomberg",
            "apple",
            "adobe",
            "tcs",
            "accenture",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 10,
        "url": "https://leetcode.com/problems/majority-element-ii/description"
    },
    "233": {
        "difficulty": "HARD",
        "id": 233,
        "questionFrontendId": "233",
        "title": "Number of Digit One",
        "titleSlug": "number-of-digit-one",
        "topicTags": [
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Recursion",
                "slug": "recursion"
            }
        ],
        "companyNames": [
            "meta",
            "microsoft",
            "apple",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 6,
        "url": "https://leetcode.com/problems/number-of-digit-one/description"
    },
    "247": {
        "difficulty": "MEDIUM",
        "id": 247,
        "questionFrontendId": "247",
        "title": "Strobogrammatic Number II",
        "titleSlug": "strobogrammatic-number-ii",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Recursion",
                "slug": "recursion"
            }
        ],
        "companyNames": [
            "meta",
            "google",
            "uber"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/strobogrammatic-number-ii/description"
    },
    "260": {
        "difficulty": "MEDIUM",
        "id": 260,
        "questionFrontendId": "260",
        "title": "Single Number III",
        "titleSlug": "single-number-iii",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Bit Manipulation",
                "slug": "bit-manipulation"
            }
        ],
        "companyNames": [
            "meta",
            "microsoft",
            "bloomberg",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 6,
        "url": "https://leetcode.com/problems/single-number-iii/description"
    },
    "264": {
        "difficulty": "MEDIUM",
        "id": 264,
        "questionFrontendId": "264",
        "title": "Ugly Number II",
        "titleSlug": "ugly-number-ii",
        "topicTags": [
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Heap (Priority Queue)",
                "slug": "heap-priority-queue"
            }
        ],
        "companyNames": [
            "meta",
            "tiktok",
            "microsoft",
            "bloomberg",
            "apple",
            "adobe",
            "accenture",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 10,
        "url": "https://leetcode.com/problems/ugly-number-ii/description"
    },
    "319": {
        "difficulty": "MEDIUM",
        "id": 319,
        "questionFrontendId": "319",
        "title": "Bulb Switcher",
        "titleSlug": "bulb-switcher",
        "topicTags": [
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Brainteaser",
                "slug": "brainteaser"
            }
        ],
        "companyNames": [
            "meta",
            "microsoft",
            "bloomberg",
            "apple",
            "adobe",
            "accenture",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 9,
        "url": "https://leetcode.com/problems/bulb-switcher/description"
    },
    "336": {
        "difficulty": "HARD",
        "id": 336,
        "questionFrontendId": "336",
        "title": "Palindrome Pairs",
        "titleSlug": "palindrome-pairs",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Trie",
                "slug": "trie"
            }
        ],
        "companyNames": [
            "meta",
            "airbnb",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 5,
        "url": "https://leetcode.com/problems/palindrome-pairs/description"
    },
    "344": {
        "difficulty": "EASY",
        "id": 344,
        "questionFrontendId": "344",
        "title": "Reverse String",
        "titleSlug": "reverse-string",
        "topicTags": [
            {
                "name": "Two Pointers",
                "slug": "two-pointers"
            },
            {
                "name": "String",
                "slug": "string"
            }
        ],
        "companyNames": [
            "meta",
            "microsoft",
            "goldman_sachs",
            "bloomberg",
            "apple",
            "adobe",
            "tcs",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 10,
        "url": "https://leetcode.com/problems/reverse-string/description"
    },
    "358": {
        "difficulty": "HARD",
        "id": 358,
        "questionFrontendId": "358",
        "title": "Rearrange String k Distance Apart",
        "titleSlug": "rearrange-string-k-distance-apart",
        "topicTags": [
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            },
            {
                "name": "Heap (Priority Queue)",
                "slug": "heap-priority-queue"
            },
            {
                "name": "Counting",
                "slug": "counting"
            }
        ],
        "companyNames": [
            "meta",
            "tiktok",
            "google",
            "uber"
        ],
        "frequencyCount": 4,
        "url": "https://leetcode.com/problems/rearrange-string-k-distance-apart/description"
    },
    "378": {
        "difficulty": "MEDIUM",
        "id": 378,
        "questionFrontendId": "378",
        "title": "Kth Smallest Element in a Sorted Matrix",
        "titleSlug": "kth-smallest-element-in-a-sorted-matrix",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Binary Search",
                "slug": "binary-search"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            },
            {
                "name": "Heap (Priority Queue)",
                "slug": "heap-priority-queue"
            },
            {
                "name": "Matrix",
                "slug": "matrix"
            }
        ],
        "companyNames": [
            "meta",
            "tiktok",
            "microsoft",
            "oracle",
            "bloomberg",
            "apple",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 9,
        "url": "https://leetcode.com/problems/kth-smallest-element-in-a-sorted-matrix/description"
    },
    "386": {
        "difficulty": "MEDIUM",
        "id": 386,
        "questionFrontendId": "386",
        "title": "Lexicographical Numbers",
        "titleSlug": "lexicographical-numbers",
        "topicTags": [
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Trie",
                "slug": "trie"
            }
        ],
        "companyNames": [
            "meta",
            "tiktok",
            "bloomberg",
            "apple",
            "amazon",
            "uber"
        ],
        "frequencyCount": 6,
        "url": "https://leetcode.com/problems/lexicographical-numbers/description"
    },
    "390": {
        "difficulty": "MEDIUM",
        "id": 390,
        "questionFrontendId": "390",
        "title": "Elimination Game",
        "titleSlug": "elimination-game",
        "topicTags": [
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Recursion",
                "slug": "recursion"
            }
        ],
        "companyNames": [
            "meta",
            "bloomberg",
            "adobe",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 6,
        "url": "https://leetcode.com/problems/elimination-game/description"
    },
    "400": {
        "difficulty": "MEDIUM",
        "id": 400,
        "questionFrontendId": "400",
        "title": "Nth Digit",
        "titleSlug": "nth-digit",
        "topicTags": [
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Binary Search",
                "slug": "binary-search"
            }
        ],
        "companyNames": [
            "meta",
            "tiktok",
            "microsoft",
            "bloomberg",
            "apple",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 8,
        "url": "https://leetcode.com/problems/nth-digit/description"
    },
    "407": {
        "difficulty": "HARD",
        "id": 407,
        "questionFrontendId": "407",
        "title": "Trapping Rain Water II",
        "titleSlug": "trapping-rain-water-ii",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Breadth-First Search",
                "slug": "breadth-first-search"
            },
            {
                "name": "Heap (Priority Queue)",
                "slug": "heap-priority-queue"
            },
            {
                "name": "Matrix",
                "slug": "matrix"
            }
        ],
        "companyNames": [
            "meta",
            "microsoft",
            "goldman_sachs",
            "apple",
            "doordash",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 8,
        "url": "https://leetcode.com/problems/trapping-rain-water-ii/description"
    },
    "408": {
        "difficulty": "EASY",
        "id": 408,
        "questionFrontendId": "408",
        "title": "Valid Word Abbreviation",
        "titleSlug": "valid-word-abbreviation",
        "topicTags": [
            {
                "name": "Two Pointers",
                "slug": "two-pointers"
            },
            {
                "name": "String",
                "slug": "string"
            }
        ],
        "companyNames": [
            "meta",
            "apple",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 5,
        "url": "https://leetcode.com/problems/valid-word-abbreviation/description"
    },
    "438": {
        "difficulty": "MEDIUM",
        "id": 438,
        "questionFrontendId": "438",
        "title": "Find All Anagrams in a String",
        "titleSlug": "find-all-anagrams-in-a-string",
        "topicTags": [
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Sliding Window",
                "slug": "sliding-window"
            }
        ],
        "companyNames": [
            "meta",
            "tiktok",
            "microsoft",
            "apple",
            "adobe",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 8,
        "url": "https://leetcode.com/problems/find-all-anagrams-in-a-string/description"
    },
    "441": {
        "difficulty": "EASY",
        "id": 441,
        "questionFrontendId": "441",
        "title": "Arranging Coins",
        "titleSlug": "arranging-coins",
        "topicTags": [
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Binary Search",
                "slug": "binary-search"
            }
        ],
        "companyNames": [
            "meta",
            "microsoft",
            "bloomberg",
            "apple",
            "adobe",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 8,
        "url": "https://leetcode.com/problems/arranging-coins/description"
    },
    "445": {
        "difficulty": "MEDIUM",
        "id": 445,
        "questionFrontendId": "445",
        "title": "Add Two Numbers II",
        "titleSlug": "add-two-numbers-ii",
        "topicTags": [
            {
                "name": "Linked List",
                "slug": "linked-list"
            },
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Stack",
                "slug": "stack"
            }
        ],
        "companyNames": [
            "meta",
            "tiktok",
            "microsoft",
            "bloomberg",
            "apple",
            "adobe",
            "amazon",
            "uber"
        ],
        "frequencyCount": 8,
        "url": "https://leetcode.com/problems/add-two-numbers-ii/description"
    },
    "449": {
        "difficulty": "MEDIUM",
        "id": 449,
        "questionFrontendId": "449",
        "title": "Serialize and Deserialize BST",
        "titleSlug": "serialize-and-deserialize-bst",
        "topicTags": [
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Tree",
                "slug": "tree"
            },
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Breadth-First Search",
                "slug": "breadth-first-search"
            },
            {
                "name": "Design",
                "slug": "design"
            },
            {
                "name": "Binary Search Tree",
                "slug": "binary-search-tree"
            },
            {
                "name": "Binary Tree",
                "slug": "binary-tree"
            }
        ],
        "companyNames": [
            "meta",
            "bloomberg",
            "amazon",
            "uber"
        ],
        "frequencyCount": 4,
        "url": "https://leetcode.com/problems/serialize-and-deserialize-bst/description"
    },
    "456": {
        "difficulty": "MEDIUM",
        "id": 456,
        "questionFrontendId": "456",
        "title": "132 Pattern",
        "titleSlug": "132-pattern",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Binary Search",
                "slug": "binary-search"
            },
            {
                "name": "Stack",
                "slug": "stack"
            },
            {
                "name": "Monotonic Stack",
                "slug": "monotonic-stack"
            },
            {
                "name": "Ordered Set",
                "slug": "ordered-set"
            }
        ],
        "companyNames": [
            "meta",
            "tiktok",
            "microsoft",
            "bloomberg",
            "apple",
            "adobe",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 9,
        "url": "https://leetcode.com/problems/132-pattern/description"
    },
    "500": {
        "difficulty": "EASY",
        "id": 500,
        "questionFrontendId": "500",
        "title": "Keyboard Row",
        "titleSlug": "keyboard-row",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "String",
                "slug": "string"
            }
        ],
        "companyNames": [
            "meta",
            "apple",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 5,
        "url": "https://leetcode.com/problems/keyboard-row/description"
    },
    "508": {
        "difficulty": "MEDIUM",
        "id": 508,
        "questionFrontendId": "508",
        "title": "Most Frequent Subtree Sum",
        "titleSlug": "most-frequent-subtree-sum",
        "topicTags": [
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Tree",
                "slug": "tree"
            },
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Binary Tree",
                "slug": "binary-tree"
            }
        ],
        "companyNames": [
            "meta",
            "bloomberg",
            "amazon",
            "uber"
        ],
        "frequencyCount": 4,
        "url": "https://leetcode.com/problems/most-frequent-subtree-sum/description"
    },
    "528": {
        "difficulty": "MEDIUM",
        "id": 528,
        "questionFrontendId": "1721",
        "title": "Swapping Nodes in a Linked List",
        "titleSlug": "swapping-nodes-in-a-linked-list",
        "topicTags": [
            {
                "name": "Linked List",
                "slug": "linked-list"
            },
            {
                "name": "Two Pointers",
                "slug": "two-pointers"
            }
        ],
        "companyNames": [
            "meta",
            "microsoft",
            "oracle",
            "bloomberg",
            "adobe",
            "nvidia",
            "amazon",
            "uber"
        ],
        "frequencyCount": 8,
        "url": "https://leetcode.com/problems/swapping-nodes-in-a-linked-list/description"
    },
    "532": {
        "difficulty": "MEDIUM",
        "id": 532,
        "questionFrontendId": "532",
        "title": "K-diff Pairs in an Array",
        "titleSlug": "k-diff-pairs-in-an-array",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Two Pointers",
                "slug": "two-pointers"
            },
            {
                "name": "Binary Search",
                "slug": "binary-search"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ],
        "companyNames": [
            "meta",
            "goldman_sachs",
            "bloomberg",
            "apple",
            "adobe",
            "tcs",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 9,
        "url": "https://leetcode.com/problems/k-diff-pairs-in-an-array/description"
    },
    "545": {
        "difficulty": "MEDIUM",
        "id": 545,
        "questionFrontendId": "545",
        "title": "Boundary of Binary Tree",
        "titleSlug": "boundary-of-binary-tree",
        "topicTags": [
            {
                "name": "Tree",
                "slug": "tree"
            },
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Binary Tree",
                "slug": "binary-tree"
            }
        ],
        "companyNames": [
            "meta",
            "microsoft",
            "oracle",
            "apple",
            "walmart_labs",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 8,
        "url": "https://leetcode.com/problems/boundary-of-binary-tree/description"
    },
    "546": {
        "difficulty": "HARD",
        "id": 546,
        "questionFrontendId": "546",
        "title": "Remove Boxes",
        "titleSlug": "remove-boxes",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Memoization",
                "slug": "memoization"
            }
        ],
        "companyNames": [
            "meta",
            "walmart_labs",
            "cisco",
            "amazon",
            "uber"
        ],
        "frequencyCount": 5,
        "url": "https://leetcode.com/problems/remove-boxes/description"
    },
    "556": {
        "difficulty": "MEDIUM",
        "id": 556,
        "questionFrontendId": "556",
        "title": "Next Greater Element III",
        "titleSlug": "next-greater-element-iii",
        "topicTags": [
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Two Pointers",
                "slug": "two-pointers"
            },
            {
                "name": "String",
                "slug": "string"
            }
        ],
        "companyNames": [
            "meta",
            "tiktok",
            "microsoft",
            "goldman_sachs",
            "bloomberg",
            "adobe",
            "doordash",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 10,
        "url": "https://leetcode.com/problems/next-greater-element-iii/description"
    },
    "561": {
        "difficulty": "EASY",
        "id": 561,
        "questionFrontendId": "561",
        "title": "Array Partition",
        "titleSlug": "array-partition",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            },
            {
                "name": "Counting Sort",
                "slug": "counting-sort"
            }
        ],
        "companyNames": [
            "meta",
            "bloomberg",
            "apple",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 6,
        "url": "https://leetcode.com/problems/array-partition/description"
    },
    "596": {
        "difficulty": "EASY",
        "id": 596,
        "questionFrontendId": "596",
        "title": "Classes More Than 5 Students",
        "titleSlug": "classes-more-than-5-students",
        "topicTags": [
            {
                "name": "Database",
                "slug": "database"
            }
        ],
        "companyNames": [
            "meta",
            "microsoft",
            "amazon",
            "uber"
        ],
        "frequencyCount": 4,
        "url": "https://leetcode.com/problems/classes-more-than-5-students/description"
    },
    "617": {
        "difficulty": "EASY",
        "id": 617,
        "questionFrontendId": "617",
        "title": "Merge Two Binary Trees",
        "titleSlug": "merge-two-binary-trees",
        "topicTags": [
            {
                "name": "Tree",
                "slug": "tree"
            },
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Breadth-First Search",
                "slug": "breadth-first-search"
            },
            {
                "name": "Binary Tree",
                "slug": "binary-tree"
            }
        ],
        "companyNames": [
            "meta",
            "microsoft",
            "apple",
            "adobe",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 7,
        "url": "https://leetcode.com/problems/merge-two-binary-trees/description"
    },
    "620": {
        "difficulty": "EASY",
        "id": 620,
        "questionFrontendId": "620",
        "title": "Not Boring Movies",
        "titleSlug": "not-boring-movies",
        "topicTags": [
            {
                "name": "Database",
                "slug": "database"
            }
        ],
        "companyNames": [
            "meta",
            "bloomberg",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 5,
        "url": "https://leetcode.com/problems/not-boring-movies/description"
    },
    "626": {
        "difficulty": "MEDIUM",
        "id": 626,
        "questionFrontendId": "626",
        "title": "Exchange Seats",
        "titleSlug": "exchange-seats",
        "topicTags": [
            {
                "name": "Database",
                "slug": "database"
            }
        ],
        "companyNames": [
            "meta",
            "microsoft",
            "bloomberg",
            "apple",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 7,
        "url": "https://leetcode.com/problems/exchange-seats/description"
    },
    "628": {
        "difficulty": "EASY",
        "id": 628,
        "questionFrontendId": "628",
        "title": "Maximum Product of Three Numbers",
        "titleSlug": "maximum-product-of-three-numbers",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ],
        "companyNames": [
            "meta",
            "microsoft",
            "bloomberg",
            "apple",
            "adobe",
            "amazon",
            "uber"
        ],
        "frequencyCount": 7,
        "url": "https://leetcode.com/problems/maximum-product-of-three-numbers/description"
    },
    "629": {
        "difficulty": "HARD",
        "id": 629,
        "questionFrontendId": "629",
        "title": "K Inverse Pairs Array",
        "titleSlug": "k-inverse-pairs-array",
        "topicTags": [
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            }
        ],
        "companyNames": [
            "meta",
            "bloomberg",
            "adobe",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 6,
        "url": "https://leetcode.com/problems/k-inverse-pairs-array/description"
    },
    "649": {
        "difficulty": "MEDIUM",
        "id": 649,
        "questionFrontendId": "649",
        "title": "Dota2 Senate",
        "titleSlug": "dota2-senate",
        "topicTags": [
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            },
            {
                "name": "Queue",
                "slug": "queue"
            }
        ],
        "companyNames": [
            "meta",
            "apple",
            "adobe",
            "amazon",
            "uber"
        ],
        "frequencyCount": 5,
        "url": "https://leetcode.com/problems/dota2-senate/description"
    },
    "664": {
        "difficulty": "HARD",
        "id": 664,
        "questionFrontendId": "664",
        "title": "Strange Printer",
        "titleSlug": "strange-printer",
        "topicTags": [
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            }
        ],
        "companyNames": [
            "meta",
            "bloomberg",
            "apple",
            "cisco",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 7,
        "url": "https://leetcode.com/problems/strange-printer/description"
    },
    "686": {
        "difficulty": "MEDIUM",
        "id": 686,
        "questionFrontendId": "686",
        "title": "Repeated String Match",
        "titleSlug": "repeated-string-match",
        "topicTags": [
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "String Matching",
                "slug": "string-matching"
            }
        ],
        "companyNames": [
            "meta",
            "bloomberg",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 5,
        "url": "https://leetcode.com/problems/repeated-string-match/description"
    },
    "715": {
        "difficulty": "HARD",
        "id": 715,
        "questionFrontendId": "715",
        "title": "Range Module",
        "titleSlug": "range-module",
        "topicTags": [
            {
                "name": "Design",
                "slug": "design"
            },
            {
                "name": "Segment Tree",
                "slug": "segment-tree"
            },
            {
                "name": "Ordered Set",
                "slug": "ordered-set"
            }
        ],
        "companyNames": [
            "meta",
            "adobe",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 5,
        "url": "https://leetcode.com/problems/range-module/description"
    },
    "731": {
        "difficulty": "MEDIUM",
        "id": 731,
        "questionFrontendId": "731",
        "title": "My Calendar II",
        "titleSlug": "my-calendar-ii",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Binary Search",
                "slug": "binary-search"
            },
            {
                "name": "Design",
                "slug": "design"
            },
            {
                "name": "Segment Tree",
                "slug": "segment-tree"
            },
            {
                "name": "Prefix Sum",
                "slug": "prefix-sum"
            },
            {
                "name": "Ordered Set",
                "slug": "ordered-set"
            }
        ],
        "companyNames": [
            "meta",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 4,
        "url": "https://leetcode.com/problems/my-calendar-ii/description"
    },
    "741": {
        "difficulty": "HARD",
        "id": 741,
        "questionFrontendId": "741",
        "title": "Cherry Pickup",
        "titleSlug": "cherry-pickup",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Matrix",
                "slug": "matrix"
            }
        ],
        "companyNames": [
            "meta",
            "microsoft",
            "cisco",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 6,
        "url": "https://leetcode.com/problems/cherry-pickup/description"
    },
    "748": {
        "difficulty": "EASY",
        "id": 748,
        "questionFrontendId": "747",
        "title": "Largest Number At Least Twice of Others",
        "titleSlug": "largest-number-at-least-twice-of-others",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ],
        "companyNames": [
            "meta",
            "microsoft",
            "apple",
            "google",
            "uber"
        ],
        "frequencyCount": 5,
        "url": "https://leetcode.com/problems/largest-number-at-least-twice-of-others/description"
    },
    "759": {
        "difficulty": "HARD",
        "id": 759,
        "questionFrontendId": "757",
        "title": "Set Intersection Size At Least Two",
        "titleSlug": "set-intersection-size-at-least-two",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ],
        "companyNames": [
            "meta",
            "uber"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/set-intersection-size-at-least-two/description"
    },
    "765": {
        "difficulty": "HARD",
        "id": 765,
        "questionFrontendId": "428",
        "title": "Serialize and Deserialize N-ary Tree",
        "titleSlug": "serialize-and-deserialize-n-ary-tree",
        "topicTags": [
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Tree",
                "slug": "tree"
            },
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Breadth-First Search",
                "slug": "breadth-first-search"
            }
        ],
        "companyNames": [
            "meta",
            "microsoft",
            "bloomberg",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 6,
        "url": "https://leetcode.com/problems/serialize-and-deserialize-n-ary-tree/description"
    },
    "769": {
        "difficulty": "MEDIUM",
        "id": 769,
        "questionFrontendId": "764",
        "title": "Largest Plus Sign",
        "titleSlug": "largest-plus-sign",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            }
        ],
        "companyNames": [
            "meta",
            "microsoft",
            "uber"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/largest-plus-sign/description"
    },
    "787": {
        "difficulty": "HARD",
        "id": 787,
        "questionFrontendId": "773",
        "title": "Sliding Puzzle",
        "titleSlug": "sliding-puzzle",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Breadth-First Search",
                "slug": "breadth-first-search"
            },
            {
                "name": "Matrix",
                "slug": "matrix"
            }
        ],
        "companyNames": [
            "meta",
            "tiktok",
            "nvidia",
            "airbnb",
            "amazon",
            "uber"
        ],
        "frequencyCount": 6,
        "url": "https://leetcode.com/problems/sliding-puzzle/description"
    },
    "789": {
        "difficulty": "EASY",
        "id": 789,
        "questionFrontendId": "703",
        "title": "Kth Largest Element in a Stream",
        "titleSlug": "kth-largest-element-in-a-stream",
        "topicTags": [
            {
                "name": "Tree",
                "slug": "tree"
            },
            {
                "name": "Design",
                "slug": "design"
            },
            {
                "name": "Binary Search Tree",
                "slug": "binary-search-tree"
            },
            {
                "name": "Heap (Priority Queue)",
                "slug": "heap-priority-queue"
            },
            {
                "name": "Binary Tree",
                "slug": "binary-tree"
            },
            {
                "name": "Data Stream",
                "slug": "data-stream"
            }
        ],
        "companyNames": [
            "meta",
            "microsoft",
            "bloomberg",
            "apple",
            "adobe",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 8,
        "url": "https://leetcode.com/problems/kth-largest-element-in-a-stream/description"
    },
    "796": {
        "difficulty": "HARD",
        "id": 796,
        "questionFrontendId": "780",
        "title": "Reaching Points",
        "titleSlug": "reaching-points",
        "topicTags": [
            {
                "name": "Math",
                "slug": "math"
            }
        ],
        "companyNames": [
            "meta",
            "goldman_sachs",
            "bloomberg",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 6,
        "url": "https://leetcode.com/problems/reaching-points/description"
    },
    "803": {
        "difficulty": "MEDIUM",
        "id": 803,
        "questionFrontendId": "787",
        "title": "Cheapest Flights Within K Stops",
        "titleSlug": "cheapest-flights-within-k-stops",
        "topicTags": [
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Breadth-First Search",
                "slug": "breadth-first-search"
            },
            {
                "name": "Graph",
                "slug": "graph"
            },
            {
                "name": "Heap (Priority Queue)",
                "slug": "heap-priority-queue"
            },
            {
                "name": "Shortest Path",
                "slug": "shortest-path"
            }
        ],
        "companyNames": [
            "meta",
            "tiktok",
            "microsoft",
            "oracle",
            "bloomberg",
            "apple",
            "adobe",
            "airbnb",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 11,
        "url": "https://leetcode.com/problems/cheapest-flights-within-k-stops/description"
    },
    "804": {
        "difficulty": "MEDIUM",
        "id": 804,
        "questionFrontendId": "788",
        "title": "Rotated Digits",
        "titleSlug": "rotated-digits",
        "topicTags": [
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            }
        ],
        "companyNames": [
            "meta",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 4,
        "url": "https://leetcode.com/problems/rotated-digits/description"
    },
    "808": {
        "difficulty": "MEDIUM",
        "id": 808,
        "questionFrontendId": "792",
        "title": "Number of Matching Subsequences",
        "titleSlug": "number-of-matching-subsequences",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Binary Search",
                "slug": "binary-search"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Trie",
                "slug": "trie"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ],
        "companyNames": [
            "meta",
            "apple",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 5,
        "url": "https://leetcode.com/problems/number-of-matching-subsequences/description"
    },
    "811": {
        "difficulty": "MEDIUM",
        "id": 811,
        "questionFrontendId": "795",
        "title": "Number of Subarrays with Bounded Maximum",
        "titleSlug": "number-of-subarrays-with-bounded-maximum",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Two Pointers",
                "slug": "two-pointers"
            }
        ],
        "companyNames": [
            "meta",
            "adobe",
            "uber"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/number-of-subarrays-with-bounded-maximum/description"
    },
    "827": {
        "difficulty": "MEDIUM",
        "id": 827,
        "questionFrontendId": "809",
        "title": "Expressive Words",
        "titleSlug": "expressive-words",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Two Pointers",
                "slug": "two-pointers"
            },
            {
                "name": "String",
                "slug": "string"
            }
        ],
        "companyNames": [
            "meta",
            "cisco",
            "google",
            "uber"
        ],
        "frequencyCount": 4,
        "url": "https://leetcode.com/problems/expressive-words/description"
    },
    "831": {
        "difficulty": "MEDIUM",
        "id": 831,
        "questionFrontendId": "813",
        "title": "Largest Sum of Averages",
        "titleSlug": "largest-sum-of-averages",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Prefix Sum",
                "slug": "prefix-sum"
            }
        ],
        "companyNames": [
            "meta",
            "google",
            "uber"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/largest-sum-of-averages/description"
    },
    "861": {
        "difficulty": "EASY",
        "id": 861,
        "questionFrontendId": "832",
        "title": "Flipping an Image",
        "titleSlug": "flipping-an-image",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Two Pointers",
                "slug": "two-pointers"
            },
            {
                "name": "Bit Manipulation",
                "slug": "bit-manipulation"
            },
            {
                "name": "Matrix",
                "slug": "matrix"
            },
            {
                "name": "Simulation",
                "slug": "simulation"
            }
        ],
        "companyNames": [
            "meta",
            "microsoft",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 5,
        "url": "https://leetcode.com/problems/flipping-an-image/description"
    },
    "881": {
        "difficulty": "MEDIUM",
        "id": 881,
        "questionFrontendId": "851",
        "title": "Loud and Rich",
        "titleSlug": "loud-and-rich",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Graph",
                "slug": "graph"
            },
            {
                "name": "Topological Sort",
                "slug": "topological-sort"
            }
        ],
        "companyNames": [
            "meta",
            "amazon",
            "uber"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/loud-and-rich/description"
    },
    "895": {
        "difficulty": "HARD",
        "id": 895,
        "questionFrontendId": "864",
        "title": "Shortest Path to Get All Keys",
        "titleSlug": "shortest-path-to-get-all-keys",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Bit Manipulation",
                "slug": "bit-manipulation"
            },
            {
                "name": "Breadth-First Search",
                "slug": "breadth-first-search"
            },
            {
                "name": "Matrix",
                "slug": "matrix"
            }
        ],
        "companyNames": [
            "meta",
            "adobe",
            "airbnb",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 6,
        "url": "https://leetcode.com/problems/shortest-path-to-get-all-keys/description"
    },
    "909": {
        "difficulty": "MEDIUM",
        "id": 909,
        "questionFrontendId": "877",
        "title": "Stone Game",
        "titleSlug": "stone-game",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Game Theory",
                "slug": "game-theory"
            }
        ],
        "companyNames": [
            "meta",
            "tiktok",
            "microsoft",
            "bloomberg",
            "cisco",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 8,
        "url": "https://leetcode.com/problems/stone-game/description"
    },
    "911": {
        "difficulty": "HARD",
        "id": 911,
        "questionFrontendId": "879",
        "title": "Profitable Schemes",
        "titleSlug": "profitable-schemes",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            }
        ],
        "companyNames": [
            "meta",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 4,
        "url": "https://leetcode.com/problems/profitable-schemes/description"
    },
    "917": {
        "difficulty": "MEDIUM",
        "id": 917,
        "questionFrontendId": "881",
        "title": "Boats to Save People",
        "titleSlug": "boats-to-save-people",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Two Pointers",
                "slug": "two-pointers"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ],
        "companyNames": [
            "meta",
            "microsoft",
            "bloomberg",
            "apple",
            "walmart_labs",
            "accenture",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 9,
        "url": "https://leetcode.com/problems/boats-to-save-people/description"
    },
    "924": {
        "difficulty": "EASY",
        "id": 924,
        "questionFrontendId": "888",
        "title": "Fair Candy Swap",
        "titleSlug": "fair-candy-swap",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Binary Search",
                "slug": "binary-search"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ],
        "companyNames": [
            "meta",
            "bloomberg",
            "apple",
            "adobe",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 7,
        "url": "https://leetcode.com/problems/fair-candy-swap/description"
    },
    "932": {
        "difficulty": "EASY",
        "id": 932,
        "questionFrontendId": "896",
        "title": "Monotonic Array",
        "titleSlug": "monotonic-array",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            }
        ],
        "companyNames": [
            "meta",
            "tiktok",
            "bloomberg",
            "adobe",
            "nvidia",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 8,
        "url": "https://leetcode.com/problems/monotonic-array/description"
    },
    "937": {
        "difficulty": "MEDIUM",
        "id": 937,
        "questionFrontendId": "901",
        "title": "Online Stock Span",
        "titleSlug": "online-stock-span",
        "topicTags": [
            {
                "name": "Stack",
                "slug": "stack"
            },
            {
                "name": "Design",
                "slug": "design"
            },
            {
                "name": "Monotonic Stack",
                "slug": "monotonic-stack"
            },
            {
                "name": "Data Stream",
                "slug": "data-stream"
            }
        ],
        "companyNames": [
            "meta",
            "microsoft",
            "bloomberg",
            "apple",
            "adobe",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 8,
        "url": "https://leetcode.com/problems/online-stock-span/description"
    },
    "953": {
        "difficulty": "EASY",
        "id": 953,
        "questionFrontendId": "917",
        "title": "Reverse Only Letters",
        "titleSlug": "reverse-only-letters",
        "topicTags": [
            {
                "name": "Two Pointers",
                "slug": "two-pointers"
            },
            {
                "name": "String",
                "slug": "string"
            }
        ],
        "companyNames": [
            "meta",
            "apple",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 5,
        "url": "https://leetcode.com/problems/reverse-only-letters/description"
    },
    "955": {
        "difficulty": "MEDIUM",
        "id": 955,
        "questionFrontendId": "919",
        "title": "Complete Binary Tree Inserter",
        "titleSlug": "complete-binary-tree-inserter",
        "topicTags": [
            {
                "name": "Tree",
                "slug": "tree"
            },
            {
                "name": "Breadth-First Search",
                "slug": "breadth-first-search"
            },
            {
                "name": "Design",
                "slug": "design"
            },
            {
                "name": "Binary Tree",
                "slug": "binary-tree"
            }
        ],
        "companyNames": [
            "meta",
            "tiktok",
            "google",
            "uber"
        ],
        "frequencyCount": 4,
        "url": "https://leetcode.com/problems/complete-binary-tree-inserter/description"
    },
    "965": {
        "difficulty": "EASY",
        "id": 965,
        "questionFrontendId": "929",
        "title": "Unique Email Addresses",
        "titleSlug": "unique-email-addresses",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "String",
                "slug": "string"
            }
        ],
        "companyNames": [
            "meta",
            "apple",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 5,
        "url": "https://leetcode.com/problems/unique-email-addresses/description"
    },
    "977": {
        "difficulty": "HARD",
        "id": 977,
        "questionFrontendId": "940",
        "title": "Distinct Subsequences II",
        "titleSlug": "distinct-subsequences-ii",
        "topicTags": [
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            }
        ],
        "companyNames": [
            "meta",
            "adobe",
            "google",
            "uber"
        ],
        "frequencyCount": 4,
        "url": "https://leetcode.com/problems/distinct-subsequences-ii/description"
    },
    "978": {
        "difficulty": "EASY",
        "id": 978,
        "questionFrontendId": "941",
        "title": "Valid Mountain Array",
        "titleSlug": "valid-mountain-array",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            }
        ],
        "companyNames": [
            "meta",
            "adobe",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 5,
        "url": "https://leetcode.com/problems/valid-mountain-array/description"
    },
    "984": {
        "difficulty": "MEDIUM",
        "id": 984,
        "questionFrontendId": "947",
        "title": "Most Stones Removed with Same Row or Column",
        "titleSlug": "most-stones-removed-with-same-row-or-column",
        "topicTags": [
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Union Find",
                "slug": "union-find"
            },
            {
                "name": "Graph",
                "slug": "graph"
            }
        ],
        "companyNames": [
            "meta",
            "tiktok",
            "microsoft",
            "bloomberg",
            "apple",
            "adobe",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 9,
        "url": "https://leetcode.com/problems/most-stones-removed-with-same-row-or-column/description"
    },
    "985": {
        "difficulty": "MEDIUM",
        "id": 985,
        "questionFrontendId": "948",
        "title": "Bag of Tokens",
        "titleSlug": "bag-of-tokens",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Two Pointers",
                "slug": "two-pointers"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ],
        "companyNames": [
            "meta",
            "microsoft",
            "bloomberg",
            "apple",
            "adobe",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 8,
        "url": "https://leetcode.com/problems/bag-of-tokens/description"
    },
    "993": {
        "difficulty": "HARD",
        "id": 993,
        "questionFrontendId": "956",
        "title": "Tallest Billboard",
        "titleSlug": "tallest-billboard",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            }
        ],
        "companyNames": [
            "meta",
            "microsoft",
            "adobe",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 6,
        "url": "https://leetcode.com/problems/tallest-billboard/description"
    },
    "1025": {
        "difficulty": "MEDIUM",
        "id": 1025,
        "questionFrontendId": "983",
        "title": "Minimum Cost For Tickets",
        "titleSlug": "minimum-cost-for-tickets",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            }
        ],
        "companyNames": [
            "meta",
            "apple",
            "adobe",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 6,
        "url": "https://leetcode.com/problems/minimum-cost-for-tickets/description"
    },
    "1039": {
        "difficulty": "EASY",
        "id": 1039,
        "questionFrontendId": "997",
        "title": "Find the Town Judge",
        "titleSlug": "find-the-town-judge",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Graph",
                "slug": "graph"
            }
        ],
        "companyNames": [
            "meta",
            "microsoft",
            "bloomberg",
            "apple",
            "adobe",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 8,
        "url": "https://leetcode.com/problems/find-the-town-judge/description"
    },
    "1087": {
        "difficulty": "MEDIUM",
        "id": 1087,
        "questionFrontendId": "1027",
        "title": "Longest Arithmetic Subsequence",
        "titleSlug": "longest-arithmetic-subsequence",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Binary Search",
                "slug": "binary-search"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            }
        ],
        "companyNames": [
            "meta",
            "microsoft",
            "bloomberg",
            "apple",
            "adobe",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 8,
        "url": "https://leetcode.com/problems/longest-arithmetic-subsequence/description"
    },
    "1105": {
        "difficulty": "MEDIUM",
        "id": 1105,
        "questionFrontendId": "1035",
        "title": "Uncrossed Lines",
        "titleSlug": "uncrossed-lines",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            }
        ],
        "companyNames": [
            "meta",
            "microsoft",
            "bloomberg",
            "apple",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 7,
        "url": "https://leetcode.com/problems/uncrossed-lines/description"
    },
    "1112": {
        "difficulty": "EASY",
        "id": 1112,
        "questionFrontendId": "1160",
        "title": "Find Words That Can Be Formed by Characters",
        "titleSlug": "find-words-that-can-be-formed-by-characters",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "String",
                "slug": "string"
            }
        ],
        "companyNames": [
            "meta",
            "adobe",
            "amazon",
            "uber"
        ],
        "frequencyCount": 4,
        "url": "https://leetcode.com/problems/find-words-that-can-be-formed-by-characters/description"
    },
    "1116": {
        "difficulty": "MEDIUM",
        "id": 1116,
        "questionFrontendId": "1161",
        "title": "Maximum Level Sum of a Binary Tree",
        "titleSlug": "maximum-level-sum-of-a-binary-tree",
        "topicTags": [
            {
                "name": "Tree",
                "slug": "tree"
            },
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Breadth-First Search",
                "slug": "breadth-first-search"
            },
            {
                "name": "Binary Tree",
                "slug": "binary-tree"
            }
        ],
        "companyNames": [
            "meta",
            "microsoft",
            "apple",
            "adobe",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 7,
        "url": "https://leetcode.com/problems/maximum-level-sum-of-a-binary-tree/description"
    },
    "1117": {
        "difficulty": "MEDIUM",
        "id": 1117,
        "questionFrontendId": "1162",
        "title": "As Far from Land as Possible",
        "titleSlug": "as-far-from-land-as-possible",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Breadth-First Search",
                "slug": "breadth-first-search"
            },
            {
                "name": "Matrix",
                "slug": "matrix"
            }
        ],
        "companyNames": [
            "meta",
            "adobe",
            "amazon",
            "uber"
        ],
        "frequencyCount": 4,
        "url": "https://leetcode.com/problems/as-far-from-land-as-possible/description"
    },
    "1128": {
        "difficulty": "EASY",
        "id": 1128,
        "questionFrontendId": "1047",
        "title": "Remove All Adjacent Duplicates In String",
        "titleSlug": "remove-all-adjacent-duplicates-in-string",
        "topicTags": [
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Stack",
                "slug": "stack"
            }
        ],
        "companyNames": [
            "meta",
            "microsoft",
            "oracle",
            "goldman_sachs",
            "bloomberg",
            "apple",
            "adobe",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 10,
        "url": "https://leetcode.com/problems/remove-all-adjacent-duplicates-in-string/description"
    },
    "1168": {
        "difficulty": "EASY",
        "id": 1168,
        "questionFrontendId": "1089",
        "title": "Duplicate Zeros",
        "titleSlug": "duplicate-zeros",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Two Pointers",
                "slug": "two-pointers"
            }
        ],
        "companyNames": [
            "meta",
            "bloomberg",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 5,
        "url": "https://leetcode.com/problems/duplicate-zeros/description"
    },
    "1171": {
        "difficulty": "MEDIUM",
        "id": 1171,
        "questionFrontendId": "1091",
        "title": "Shortest Path in Binary Matrix",
        "titleSlug": "shortest-path-in-binary-matrix",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Breadth-First Search",
                "slug": "breadth-first-search"
            },
            {
                "name": "Matrix",
                "slug": "matrix"
            }
        ],
        "companyNames": [
            "meta",
            "tiktok",
            "microsoft",
            "oracle",
            "bloomberg",
            "adobe",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 9,
        "url": "https://leetcode.com/problems/shortest-path-in-binary-matrix/description"
    },
    "1182": {
        "difficulty": "MEDIUM",
        "id": 1182,
        "questionFrontendId": "550",
        "title": "Game Play Analysis IV",
        "titleSlug": "game-play-analysis-iv",
        "topicTags": [
            {
                "name": "Database",
                "slug": "database"
            }
        ],
        "companyNames": [
            "meta",
            "adobe",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 5,
        "url": "https://leetcode.com/problems/game-play-analysis-iv/description"
    },
    "1241": {
        "difficulty": "EASY",
        "id": 1241,
        "questionFrontendId": "1313",
        "title": "Decompress Run-Length Encoded List",
        "titleSlug": "decompress-run-length-encoded-list",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            }
        ],
        "companyNames": [
            "meta",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 4,
        "url": "https://leetcode.com/problems/decompress-run-length-encoded-list/description"
    },
    "1245": {
        "difficulty": "EASY",
        "id": 1245,
        "questionFrontendId": "1141",
        "title": "User Activity for the Past 30 Days I",
        "titleSlug": "user-activity-for-the-past-30-days-i",
        "topicTags": [
            {
                "name": "Database",
                "slug": "database"
            }
        ],
        "companyNames": [
            "meta",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 4,
        "url": "https://leetcode.com/problems/user-activity-for-the-past-30-days-i/description"
    },
    "1263": {
        "difficulty": "MEDIUM",
        "id": 1263,
        "questionFrontendId": "1155",
        "title": "Number of Dice Rolls With Target Sum",
        "titleSlug": "number-of-dice-rolls-with-target-sum",
        "topicTags": [
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            }
        ],
        "companyNames": [
            "meta",
            "microsoft",
            "bloomberg",
            "apple",
            "adobe",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 8,
        "url": "https://leetcode.com/problems/number-of-dice-rolls-with-target-sum/description"
    },
    "1288": {
        "difficulty": "MEDIUM",
        "id": 1288,
        "questionFrontendId": "1186",
        "title": "Maximum Subarray Sum with One Deletion",
        "titleSlug": "maximum-subarray-sum-with-one-deletion",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            }
        ],
        "companyNames": [
            "meta",
            "adobe",
            "amazon",
            "uber"
        ],
        "frequencyCount": 4,
        "url": "https://leetcode.com/problems/maximum-subarray-sum-with-one-deletion/description"
    },
    "1308": {
        "difficulty": "MEDIUM",
        "id": 1308,
        "questionFrontendId": "1202",
        "title": "Smallest String With Swaps",
        "titleSlug": "smallest-string-with-swaps",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Breadth-First Search",
                "slug": "breadth-first-search"
            },
            {
                "name": "Union Find",
                "slug": "union-find"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ],
        "companyNames": [
            "meta",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 4,
        "url": "https://leetcode.com/problems/smallest-string-with-swaps/description"
    },
    "1327": {
        "difficulty": "MEDIUM",
        "id": 1327,
        "questionFrontendId": "1204",
        "title": "Last Person to Fit in the Bus",
        "titleSlug": "last-person-to-fit-in-the-bus",
        "topicTags": [
            {
                "name": "Database",
                "slug": "database"
            }
        ],
        "companyNames": [
            "meta",
            "microsoft",
            "bloomberg",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 6,
        "url": "https://leetcode.com/problems/last-person-to-fit-in-the-bus/description"
    },
    "1370": {
        "difficulty": "MEDIUM",
        "id": 1370,
        "questionFrontendId": "1248",
        "title": "Count Number of Nice Subarrays",
        "titleSlug": "count-number-of-nice-subarrays",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Sliding Window",
                "slug": "sliding-window"
            }
        ],
        "companyNames": [
            "meta",
            "tiktok",
            "microsoft",
            "bloomberg",
            "adobe",
            "walmart_labs",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 9,
        "url": "https://leetcode.com/problems/count-number-of-nice-subarrays/description"
    },
    "1380": {
        "difficulty": "MEDIUM",
        "id": 1380,
        "questionFrontendId": "1254",
        "title": "Number of Closed Islands",
        "titleSlug": "number-of-closed-islands",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Breadth-First Search",
                "slug": "breadth-first-search"
            },
            {
                "name": "Union Find",
                "slug": "union-find"
            },
            {
                "name": "Matrix",
                "slug": "matrix"
            }
        ],
        "companyNames": [
            "meta",
            "microsoft",
            "bloomberg",
            "apple",
            "adobe",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 8,
        "url": "https://leetcode.com/problems/number-of-closed-islands/description"
    },
    "1393": {
        "difficulty": "HARD",
        "id": 1393,
        "questionFrontendId": "2218",
        "title": "Maximum Value of K Coins From Piles",
        "titleSlug": "maximum-value-of-k-coins-from-piles",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Prefix Sum",
                "slug": "prefix-sum"
            }
        ],
        "companyNames": [
            "meta",
            "microsoft",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 5,
        "url": "https://leetcode.com/problems/maximum-value-of-k-coins-from-piles/description"
    },
    "1395": {
        "difficulty": "EASY",
        "id": 1395,
        "questionFrontendId": "1266",
        "title": "Minimum Time Visiting All Points",
        "titleSlug": "minimum-time-visiting-all-points",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Geometry",
                "slug": "geometry"
            }
        ],
        "companyNames": [
            "meta",
            "google",
            "uber"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/minimum-time-visiting-all-points/description"
    },
    "1400": {
        "difficulty": "EASY",
        "id": 1400,
        "questionFrontendId": "1275",
        "title": "Find Winner on a Tic Tac Toe Game",
        "titleSlug": "find-winner-on-a-tic-tac-toe-game",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Matrix",
                "slug": "matrix"
            },
            {
                "name": "Simulation",
                "slug": "simulation"
            }
        ],
        "companyNames": [
            "meta",
            "tiktok",
            "microsoft",
            "apple",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 7,
        "url": "https://leetcode.com/problems/find-winner-on-a-tic-tac-toe-game/description"
    },
    "1414": {
        "difficulty": "HARD",
        "id": 1414,
        "questionFrontendId": "1293",
        "title": "Shortest Path in a Grid with Obstacles Elimination",
        "titleSlug": "shortest-path-in-a-grid-with-obstacles-elimination",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Breadth-First Search",
                "slug": "breadth-first-search"
            },
            {
                "name": "Matrix",
                "slug": "matrix"
            }
        ],
        "companyNames": [
            "meta",
            "tiktok",
            "goldman_sachs",
            "bloomberg",
            "apple",
            "adobe",
            "doordash",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 10,
        "url": "https://leetcode.com/problems/shortest-path-in-a-grid-with-obstacles-elimination/description"
    },
    "1421": {
        "difficulty": "EASY",
        "id": 1421,
        "questionFrontendId": "1295",
        "title": "Find Numbers with Even Number of Digits",
        "titleSlug": "find-numbers-with-even-number-of-digits",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            }
        ],
        "companyNames": [
            "meta",
            "adobe",
            "amazon",
            "uber"
        ],
        "frequencyCount": 4,
        "url": "https://leetcode.com/problems/find-numbers-with-even-number-of-digits/description"
    },
    "1442": {
        "difficulty": "MEDIUM",
        "id": 1442,
        "questionFrontendId": "1319",
        "title": "Number of Operations to Make Network Connected",
        "titleSlug": "number-of-operations-to-make-network-connected",
        "topicTags": [
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Breadth-First Search",
                "slug": "breadth-first-search"
            },
            {
                "name": "Union Find",
                "slug": "union-find"
            },
            {
                "name": "Graph",
                "slug": "graph"
            }
        ],
        "companyNames": [
            "meta",
            "adobe",
            "nvidia",
            "cisco",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 7,
        "url": "https://leetcode.com/problems/number-of-operations-to-make-network-connected/description"
    },
    "1444": {
        "difficulty": "EASY",
        "id": 1444,
        "questionFrontendId": "1342",
        "title": "Number of Steps to Reduce a Number to Zero",
        "titleSlug": "number-of-steps-to-reduce-a-number-to-zero",
        "topicTags": [
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Bit Manipulation",
                "slug": "bit-manipulation"
            }
        ],
        "companyNames": [
            "meta",
            "microsoft",
            "apple",
            "adobe",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 7,
        "url": "https://leetcode.com/problems/number-of-steps-to-reduce-a-number-to-zero/description"
    },
    "1448": {
        "difficulty": "EASY",
        "id": 1448,
        "questionFrontendId": "1323",
        "title": "Maximum 69 Number",
        "titleSlug": "maximum-69-number",
        "topicTags": [
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            }
        ],
        "companyNames": [
            "meta",
            "adobe",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 5,
        "url": "https://leetcode.com/problems/maximum-69-number/description"
    },
    "1452": {
        "difficulty": "MEDIUM",
        "id": 1452,
        "questionFrontendId": "1321",
        "title": "Restaurant Growth",
        "titleSlug": "restaurant-growth",
        "topicTags": [
            {
                "name": "Database",
                "slug": "database"
            }
        ],
        "companyNames": [
            "meta",
            "apple",
            "adobe",
            "amazon",
            "uber"
        ],
        "frequencyCount": 5,
        "url": "https://leetcode.com/problems/restaurant-growth/description"
    },
    "1458": {
        "difficulty": "EASY",
        "id": 1458,
        "questionFrontendId": "1356",
        "title": "Sort Integers by The Number of 1 Bits",
        "titleSlug": "sort-integers-by-the-number-of-1-bits",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Bit Manipulation",
                "slug": "bit-manipulation"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            },
            {
                "name": "Counting",
                "slug": "counting"
            }
        ],
        "companyNames": [
            "meta",
            "microsoft",
            "goldman_sachs",
            "adobe",
            "walmart_labs",
            "accenture",
            "amazon",
            "uber"
        ],
        "frequencyCount": 8,
        "url": "https://leetcode.com/problems/sort-integers-by-the-number-of-1-bits/description"
    },
    "1464": {
        "difficulty": "MEDIUM",
        "id": 1464,
        "questionFrontendId": "1338",
        "title": "Reduce Array Size to The Half",
        "titleSlug": "reduce-array-size-to-the-half",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            },
            {
                "name": "Heap (Priority Queue)",
                "slug": "heap-priority-queue"
            }
        ],
        "companyNames": [
            "meta",
            "bloomberg",
            "uber"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/reduce-array-size-to-the-half/description"
    },
    "1474": {
        "difficulty": "MEDIUM",
        "id": 1474,
        "questionFrontendId": "1372",
        "title": "Longest ZigZag Path in a Binary Tree",
        "titleSlug": "longest-zigzag-path-in-a-binary-tree",
        "topicTags": [
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Tree",
                "slug": "tree"
            },
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Binary Tree",
                "slug": "binary-tree"
            }
        ],
        "companyNames": [
            "meta",
            "microsoft",
            "apple",
            "amazon",
            "uber"
        ],
        "frequencyCount": 5,
        "url": "https://leetcode.com/problems/longest-zigzag-path-in-a-binary-tree/description"
    },
    "1475": {
        "difficulty": "HARD",
        "id": 1475,
        "questionFrontendId": "1373",
        "title": "Maximum Sum BST in Binary Tree",
        "titleSlug": "maximum-sum-bst-in-binary-tree",
        "topicTags": [
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Tree",
                "slug": "tree"
            },
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Binary Search Tree",
                "slug": "binary-search-tree"
            },
            {
                "name": "Binary Tree",
                "slug": "binary-tree"
            }
        ],
        "companyNames": [
            "meta",
            "apple",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 5,
        "url": "https://leetcode.com/problems/maximum-sum-bst-in-binary-tree/description"
    },
    "1482": {
        "difficulty": "EASY",
        "id": 1482,
        "questionFrontendId": "1365",
        "title": "How Many Numbers Are Smaller Than the Current Number",
        "titleSlug": "how-many-numbers-are-smaller-than-the-current-number",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            },
            {
                "name": "Counting",
                "slug": "counting"
            }
        ],
        "companyNames": [
            "meta",
            "microsoft",
            "apple",
            "adobe",
            "tcs",
            "accenture",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 9,
        "url": "https://leetcode.com/problems/how-many-numbers-are-smaller-than-the-current-number/description"
    },
    "1492": {
        "difficulty": "MEDIUM",
        "id": 1492,
        "questionFrontendId": "1376",
        "title": "Time Needed to Inform All Employees",
        "titleSlug": "time-needed-to-inform-all-employees",
        "topicTags": [
            {
                "name": "Tree",
                "slug": "tree"
            },
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Breadth-First Search",
                "slug": "breadth-first-search"
            }
        ],
        "companyNames": [
            "meta",
            "microsoft",
            "bloomberg",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 6,
        "url": "https://leetcode.com/problems/time-needed-to-inform-all-employees/description"
    },
    "1503": {
        "difficulty": "HARD",
        "id": 1503,
        "questionFrontendId": "1402",
        "title": "Reducing Dishes",
        "titleSlug": "reducing-dishes",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ],
        "companyNames": [
            "meta",
            "microsoft",
            "bloomberg",
            "amazon",
            "uber"
        ],
        "frequencyCount": 5,
        "url": "https://leetcode.com/problems/reducing-dishes/description"
    },
    "1511": {
        "difficulty": "MEDIUM",
        "id": 1511,
        "questionFrontendId": "1395",
        "title": "Count Number of Teams",
        "titleSlug": "count-number-of-teams",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Binary Indexed Tree",
                "slug": "binary-indexed-tree"
            },
            {
                "name": "Segment Tree",
                "slug": "segment-tree"
            }
        ],
        "companyNames": [
            "meta",
            "goldman_sachs",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 5,
        "url": "https://leetcode.com/problems/count-number-of-teams/description"
    },
    "1538": {
        "difficulty": "MEDIUM",
        "id": 1538,
        "questionFrontendId": "1423",
        "title": "Maximum Points You Can Obtain from Cards",
        "titleSlug": "maximum-points-you-can-obtain-from-cards",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Sliding Window",
                "slug": "sliding-window"
            },
            {
                "name": "Prefix Sum",
                "slug": "prefix-sum"
            }
        ],
        "companyNames": [
            "meta",
            "tiktok",
            "microsoft",
            "bloomberg",
            "apple",
            "adobe",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 9,
        "url": "https://leetcode.com/problems/maximum-points-you-can-obtain-from-cards/description"
    },
    "1604": {
        "difficulty": "MEDIUM",
        "id": 1604,
        "questionFrontendId": "1481",
        "title": "Least Number of Unique Integers after K Removals",
        "titleSlug": "least-number-of-unique-integers-after-k-removals",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            },
            {
                "name": "Counting",
                "slug": "counting"
            }
        ],
        "companyNames": [
            "meta",
            "tiktok",
            "apple",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 6,
        "url": "https://leetcode.com/problems/least-number-of-unique-integers-after-k-removals/description"
    },
    "1626": {
        "difficulty": "EASY",
        "id": 1626,
        "questionFrontendId": "1502",
        "title": "Can Make Arithmetic Progression From Sequence",
        "titleSlug": "can-make-arithmetic-progression-from-sequence",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ],
        "companyNames": [
            "meta",
            "apple",
            "amazon",
            "uber"
        ],
        "frequencyCount": 4,
        "url": "https://leetcode.com/problems/can-make-arithmetic-progression-from-sequence/description"
    },
    "1706": {
        "difficulty": "MEDIUM",
        "id": 1706,
        "questionFrontendId": "1584",
        "title": "Min Cost to Connect All Points",
        "titleSlug": "min-cost-to-connect-all-points",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Union Find",
                "slug": "union-find"
            },
            {
                "name": "Graph",
                "slug": "graph"
            },
            {
                "name": "Minimum Spanning Tree",
                "slug": "minimum-spanning-tree"
            }
        ],
        "companyNames": [
            "meta",
            "microsoft",
            "bloomberg",
            "adobe",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 7,
        "url": "https://leetcode.com/problems/min-cost-to-connect-all-points/description"
    },
    "1724": {
        "difficulty": "EASY",
        "id": 1724,
        "questionFrontendId": "1581",
        "title": "Customer Who Visited but Did Not Make Any Transactions",
        "titleSlug": "customer-who-visited-but-did-not-make-any-transactions",
        "topicTags": [
            {
                "name": "Database",
                "slug": "database"
            }
        ],
        "companyNames": [
            "meta",
            "microsoft",
            "bloomberg",
            "apple",
            "adobe",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 8,
        "url": "https://leetcode.com/problems/customer-who-visited-but-did-not-make-any-transactions/description"
    },
    "1762": {
        "difficulty": "MEDIUM",
        "id": 1762,
        "questionFrontendId": "1642",
        "title": "Furthest Building You Can Reach",
        "titleSlug": "furthest-building-you-can-reach",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            },
            {
                "name": "Heap (Priority Queue)",
                "slug": "heap-priority-queue"
            }
        ],
        "companyNames": [
            "meta",
            "tiktok",
            "microsoft",
            "bloomberg",
            "apple",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 8,
        "url": "https://leetcode.com/problems/furthest-building-you-can-reach/description"
    },
    "1765": {
        "difficulty": "MEDIUM",
        "id": 1765,
        "questionFrontendId": "1669",
        "title": "Merge In Between Linked Lists",
        "titleSlug": "merge-in-between-linked-lists",
        "topicTags": [
            {
                "name": "Linked List",
                "slug": "linked-list"
            }
        ],
        "companyNames": [
            "meta",
            "microsoft",
            "amazon",
            "uber"
        ],
        "frequencyCount": 4,
        "url": "https://leetcode.com/problems/merge-in-between-linked-lists/description"
    },
    "1787": {
        "difficulty": "MEDIUM",
        "id": 1787,
        "questionFrontendId": "1685",
        "title": "Sum of Absolute Differences in a Sorted Array",
        "titleSlug": "sum-of-absolute-differences-in-a-sorted-array",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Prefix Sum",
                "slug": "prefix-sum"
            }
        ],
        "companyNames": [
            "meta",
            "tiktok",
            "adobe",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 6,
        "url": "https://leetcode.com/problems/sum-of-absolute-differences-in-a-sorted-array/description"
    },
    "1802": {
        "difficulty": "EASY",
        "id": 1802,
        "questionFrontendId": "1700",
        "title": "Number of Students Unable to Eat Lunch",
        "titleSlug": "number-of-students-unable-to-eat-lunch",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Stack",
                "slug": "stack"
            },
            {
                "name": "Queue",
                "slug": "queue"
            },
            {
                "name": "Simulation",
                "slug": "simulation"
            }
        ],
        "companyNames": [
            "meta",
            "microsoft",
            "bloomberg",
            "apple",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 7,
        "url": "https://leetcode.com/problems/number-of-students-unable-to-eat-lunch/description"
    },
    "1807": {
        "difficulty": "MEDIUM",
        "id": 1807,
        "questionFrontendId": "1689",
        "title": "Partitioning Into Minimum Number Of Deci-Binary Numbers",
        "titleSlug": "partitioning-into-minimum-number-of-deci-binary-numbers",
        "topicTags": [
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            }
        ],
        "companyNames": [
            "meta",
            "apple",
            "adobe",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 6,
        "url": "https://leetcode.com/problems/partitioning-into-minimum-number-of-deci-binary-numbers/description"
    },
    "1817": {
        "difficulty": "EASY",
        "id": 1817,
        "questionFrontendId": "1716",
        "title": "Calculate Money in Leetcode Bank",
        "titleSlug": "calculate-money-in-leetcode-bank",
        "topicTags": [
            {
                "name": "Math",
                "slug": "math"
            }
        ],
        "companyNames": [
            "meta",
            "bloomberg",
            "adobe",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 6,
        "url": "https://leetcode.com/problems/calculate-money-in-leetcode-bank/description"
    },
    "1845": {
        "difficulty": "MEDIUM",
        "id": 1845,
        "questionFrontendId": "1727",
        "title": "Largest Submatrix With Rearrangements",
        "titleSlug": "largest-submatrix-with-rearrangements",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            },
            {
                "name": "Matrix",
                "slug": "matrix"
            }
        ],
        "companyNames": [
            "meta",
            "bloomberg",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 5,
        "url": "https://leetcode.com/problems/largest-submatrix-with-rearrangements/description"
    },
    "1875": {
        "difficulty": "HARD",
        "id": 1875,
        "questionFrontendId": "1766",
        "title": "Tree of Coprimes",
        "titleSlug": "tree-of-coprimes",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Tree",
                "slug": "tree"
            },
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Number Theory",
                "slug": "number-theory"
            }
        ],
        "companyNames": [
            "meta",
            "google",
            "uber"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/tree-of-coprimes/description"
    },
    "1877": {
        "difficulty": "EASY",
        "id": 1877,
        "questionFrontendId": "1729",
        "title": "Find Followers Count",
        "titleSlug": "find-followers-count",
        "topicTags": [
            {
                "name": "Database",
                "slug": "database"
            }
        ],
        "companyNames": [
            "meta",
            "apple",
            "google",
            "uber"
        ],
        "frequencyCount": 4,
        "url": "https://leetcode.com/problems/find-followers-count/description"
    },
    "1881": {
        "difficulty": "HARD",
        "id": 1881,
        "questionFrontendId": "1755",
        "title": "Closest Subsequence Sum",
        "titleSlug": "closest-subsequence-sum",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Two Pointers",
                "slug": "two-pointers"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Bit Manipulation",
                "slug": "bit-manipulation"
            },
            {
                "name": "Bitmask",
                "slug": "bitmask"
            }
        ],
        "companyNames": [
            "meta",
            "amazon",
            "uber"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/closest-subsequence-sum/description"
    },
    "1925": {
        "difficulty": "MEDIUM",
        "id": 1925,
        "questionFrontendId": "1814",
        "title": "Count Nice Pairs in an Array",
        "titleSlug": "count-nice-pairs-in-an-array",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Counting",
                "slug": "counting"
            }
        ],
        "companyNames": [
            "meta",
            "microsoft",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 5,
        "url": "https://leetcode.com/problems/count-nice-pairs-in-an-array/description"
    },
    "1929": {
        "difficulty": "MEDIUM",
        "id": 1929,
        "questionFrontendId": "1802",
        "title": "Maximum Value at a Given Index in a Bounded Array",
        "titleSlug": "maximum-value-at-a-given-index-in-a-bounded-array",
        "topicTags": [
            {
                "name": "Binary Search",
                "slug": "binary-search"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            }
        ],
        "companyNames": [
            "meta",
            "tiktok",
            "microsoft",
            "oracle",
            "bloomberg",
            "apple",
            "adobe",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 10,
        "url": "https://leetcode.com/problems/maximum-value-at-a-given-index-in-a-bounded-array/description"
    },
    "1969": {
        "difficulty": "MEDIUM",
        "id": 1969,
        "questionFrontendId": "1820",
        "title": "Maximum Number of Accepted Invitations",
        "titleSlug": "maximum-number-of-accepted-invitations",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Graph",
                "slug": "graph"
            },
            {
                "name": "Matrix",
                "slug": "matrix"
            }
        ],
        "companyNames": [
            "meta",
            "bloomberg",
            "google",
            "uber"
        ],
        "frequencyCount": 4,
        "url": "https://leetcode.com/problems/maximum-number-of-accepted-invitations/description"
    },
    "1997": {
        "difficulty": "HARD",
        "id": 1997,
        "questionFrontendId": "1842",
        "title": "Next Palindrome Using Same Digits",
        "titleSlug": "next-palindrome-using-same-digits",
        "topicTags": [
            {
                "name": "Two Pointers",
                "slug": "two-pointers"
            },
            {
                "name": "String",
                "slug": "string"
            }
        ],
        "companyNames": [
            "meta",
            "amazon",
            "uber"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/next-palindrome-using-same-digits/description"
    },
    "2023": {
        "difficulty": "HARD",
        "id": 2023,
        "questionFrontendId": "1912",
        "title": "Design Movie Rental System",
        "titleSlug": "design-movie-rental-system",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Design",
                "slug": "design"
            },
            {
                "name": "Heap (Priority Queue)",
                "slug": "heap-priority-queue"
            },
            {
                "name": "Ordered Set",
                "slug": "ordered-set"
            }
        ],
        "companyNames": [
            "meta",
            "uber"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/design-movie-rental-system/description"
    },
    "2024": {
        "difficulty": "EASY",
        "id": 2024,
        "questionFrontendId": "1873",
        "title": "Calculate Special Bonus",
        "titleSlug": "calculate-special-bonus",
        "topicTags": [
            {
                "name": "Database",
                "slug": "database"
            }
        ],
        "companyNames": [
            "meta",
            "apple",
            "adobe",
            "uber"
        ],
        "frequencyCount": 4,
        "url": "https://leetcode.com/problems/calculate-special-bonus/description"
    },
    "2049": {
        "difficulty": "MEDIUM",
        "id": 2049,
        "questionFrontendId": "1921",
        "title": "Eliminate Maximum Number of Monsters",
        "titleSlug": "eliminate-maximum-number-of-monsters",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ],
        "companyNames": [
            "meta",
            "bloomberg",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 5,
        "url": "https://leetcode.com/problems/eliminate-maximum-number-of-monsters/description"
    },
    "2059": {
        "difficulty": "MEDIUM",
        "id": 2059,
        "questionFrontendId": "1930",
        "title": "Unique Length-3 Palindromic Subsequences",
        "titleSlug": "unique-length-3-palindromic-subsequences",
        "topicTags": [
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Bit Manipulation",
                "slug": "bit-manipulation"
            },
            {
                "name": "Prefix Sum",
                "slug": "prefix-sum"
            }
        ],
        "companyNames": [
            "meta",
            "apple",
            "adobe",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 6,
        "url": "https://leetcode.com/problems/unique-length-3-palindromic-subsequences/description"
    },
    "2087": {
        "difficulty": "MEDIUM",
        "id": 2087,
        "questionFrontendId": "1934",
        "title": "Confirmation Rate",
        "titleSlug": "confirmation-rate",
        "topicTags": [
            {
                "name": "Database",
                "slug": "database"
            }
        ],
        "companyNames": [
            "meta",
            "microsoft",
            "bloomberg",
            "adobe",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 7,
        "url": "https://leetcode.com/problems/confirmation-rate/description"
    },
    "2102": {
        "difficulty": "EASY",
        "id": 2102,
        "questionFrontendId": "1991",
        "title": "Find the Middle Index in Array",
        "titleSlug": "find-the-middle-index-in-array",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Prefix Sum",
                "slug": "prefix-sum"
            }
        ],
        "companyNames": [
            "meta",
            "uber"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/find-the-middle-index-in-array/description"
    },
    "2123": {
        "difficulty": "MEDIUM",
        "id": 2123,
        "questionFrontendId": "1996",
        "title": "The Number of Weak Characters in the Game",
        "titleSlug": "the-number-of-weak-characters-in-the-game",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Stack",
                "slug": "stack"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            },
            {
                "name": "Monotonic Stack",
                "slug": "monotonic-stack"
            }
        ],
        "companyNames": [
            "meta",
            "apple",
            "google",
            "uber"
        ],
        "frequencyCount": 4,
        "url": "https://leetcode.com/problems/the-number-of-weak-characters-in-the-game/description"
    },
    "2134": {
        "difficulty": "MEDIUM",
        "id": 2134,
        "questionFrontendId": "2024",
        "title": "Maximize the Confusion of an Exam",
        "titleSlug": "maximize-the-confusion-of-an-exam",
        "topicTags": [
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Binary Search",
                "slug": "binary-search"
            },
            {
                "name": "Sliding Window",
                "slug": "sliding-window"
            },
            {
                "name": "Prefix Sum",
                "slug": "prefix-sum"
            }
        ],
        "companyNames": [
            "meta",
            "bloomberg",
            "apple",
            "adobe",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 7,
        "url": "https://leetcode.com/problems/maximize-the-confusion-of-an-exam/description"
    },
    "2206": {
        "difficulty": "MEDIUM",
        "id": 2206,
        "questionFrontendId": "2101",
        "title": "Detonate the Maximum Bombs",
        "titleSlug": "detonate-the-maximum-bombs",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Breadth-First Search",
                "slug": "breadth-first-search"
            },
            {
                "name": "Graph",
                "slug": "graph"
            },
            {
                "name": "Geometry",
                "slug": "geometry"
            }
        ],
        "companyNames": [
            "meta",
            "apple",
            "adobe",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 6,
        "url": "https://leetcode.com/problems/detonate-the-maximum-bombs/description"
    },
    "2301": {
        "difficulty": "HARD",
        "id": 2301,
        "questionFrontendId": "2183",
        "title": "Count Array Pairs Divisible by K",
        "titleSlug": "count-array-pairs-divisible-by-k",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Number Theory",
                "slug": "number-theory"
            }
        ],
        "companyNames": [
            "meta",
            "adobe",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 5,
        "url": "https://leetcode.com/problems/count-array-pairs-divisible-by-k/description"
    },
    "2359": {
        "difficulty": "MEDIUM",
        "id": 2359,
        "questionFrontendId": "2271",
        "title": "Maximum White Tiles Covered by a Carpet",
        "titleSlug": "maximum-white-tiles-covered-by-a-carpet",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Binary Search",
                "slug": "binary-search"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            },
            {
                "name": "Prefix Sum",
                "slug": "prefix-sum"
            }
        ],
        "companyNames": [
            "meta",
            "google",
            "uber"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/maximum-white-tiles-covered-by-a-carpet/description"
    },
    "2442": {
        "difficulty": "EASY",
        "id": 2442,
        "questionFrontendId": "2367",
        "title": "Number of Arithmetic Triplets",
        "titleSlug": "number-of-arithmetic-triplets",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Two Pointers",
                "slug": "two-pointers"
            },
            {
                "name": "Enumeration",
                "slug": "enumeration"
            }
        ],
        "companyNames": [
            "meta",
            "adobe",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 5,
        "url": "https://leetcode.com/problems/number-of-arithmetic-triplets/description"
    },
    "2486": {
        "difficulty": "EASY",
        "id": 2486,
        "questionFrontendId": "2404",
        "title": "Most Frequent Even Element",
        "titleSlug": "most-frequent-even-element",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Counting",
                "slug": "counting"
            }
        ],
        "companyNames": [
            "meta",
            "bloomberg",
            "adobe",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 6,
        "url": "https://leetcode.com/problems/most-frequent-even-element/description"
    },
    "2491": {
        "difficulty": "EASY",
        "id": 2491,
        "questionFrontendId": "2413",
        "title": "Smallest Even Multiple",
        "titleSlug": "smallest-even-multiple",
        "topicTags": [
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Number Theory",
                "slug": "number-theory"
            }
        ],
        "companyNames": [
            "meta",
            "microsoft",
            "apple",
            "adobe",
            "amazon",
            "uber"
        ],
        "frequencyCount": 6,
        "url": "https://leetcode.com/problems/smallest-even-multiple/description"
    },
    "2502": {
        "difficulty": "EASY",
        "id": 2502,
        "questionFrontendId": "2418",
        "title": "Sort the People",
        "titleSlug": "sort-the-people",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ],
        "companyNames": [
            "meta",
            "bloomberg",
            "apple",
            "adobe",
            "google",
            "uber"
        ],
        "frequencyCount": 6,
        "url": "https://leetcode.com/problems/sort-the-people/description"
    },
    "2510": {
        "difficulty": "HARD",
        "id": 2510,
        "questionFrontendId": "2430",
        "title": "Maximum Deletions on a String",
        "titleSlug": "maximum-deletions-on-a-string",
        "topicTags": [
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Rolling Hash",
                "slug": "rolling-hash"
            },
            {
                "name": "String Matching",
                "slug": "string-matching"
            },
            {
                "name": "Hash Function",
                "slug": "hash-function"
            }
        ],
        "companyNames": [
            "meta",
            "adobe",
            "uber"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/maximum-deletions-on-a-string/description"
    },
    "2538": {
        "difficulty": "HARD",
        "id": 2538,
        "questionFrontendId": "2448",
        "title": "Minimum Cost to Make Array Equal",
        "titleSlug": "minimum-cost-to-make-array-equal",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Binary Search",
                "slug": "binary-search"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            },
            {
                "name": "Prefix Sum",
                "slug": "prefix-sum"
            }
        ],
        "companyNames": [
            "meta",
            "microsoft",
            "apple",
            "cisco",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 7,
        "url": "https://leetcode.com/problems/minimum-cost-to-make-array-equal/description"
    },
    "2581": {
        "difficulty": "MEDIUM",
        "id": 2581,
        "questionFrontendId": "2491",
        "title": "Divide Players Into Teams of Equal Skill",
        "titleSlug": "divide-players-into-teams-of-equal-skill",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Two Pointers",
                "slug": "two-pointers"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ],
        "companyNames": [
            "meta",
            "uber"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/divide-players-into-teams-of-equal-skill/description"
    },
    "2636": {
        "difficulty": "MEDIUM",
        "id": 2636,
        "questionFrontendId": "2542",
        "title": "Maximum Subsequence Score",
        "titleSlug": "maximum-subsequence-score",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            },
            {
                "name": "Heap (Priority Queue)",
                "slug": "heap-priority-queue"
            }
        ],
        "companyNames": [
            "meta",
            "microsoft",
            "bloomberg",
            "adobe",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 7,
        "url": "https://leetcode.com/problems/maximum-subsequence-score/description"
    },
    "2716": {
        "difficulty": "MEDIUM",
        "id": 2716,
        "questionFrontendId": "2601",
        "title": "Prime Subtraction Operation",
        "titleSlug": "prime-subtraction-operation",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Binary Search",
                "slug": "binary-search"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            },
            {
                "name": "Number Theory",
                "slug": "number-theory"
            }
        ],
        "companyNames": [
            "meta",
            "google",
            "uber"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/prime-subtraction-operation/description"
    },
    "2720": {
        "difficulty": "MEDIUM",
        "id": 2720,
        "questionFrontendId": "2616",
        "title": "Minimize the Maximum Difference of Pairs",
        "titleSlug": "minimize-the-maximum-difference-of-pairs",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Binary Search",
                "slug": "binary-search"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            }
        ],
        "companyNames": [
            "meta",
            "microsoft",
            "apple",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 6,
        "url": "https://leetcode.com/problems/minimize-the-maximum-difference-of-pairs/description"
    },
    "2731": {
        "difficulty": "MEDIUM",
        "id": 2731,
        "questionFrontendId": "2623",
        "title": "Memoize",
        "titleSlug": "memoize",
        "topicTags": [],
        "companyNames": [
            "meta",
            "apple",
            "amazon",
            "uber"
        ],
        "frequencyCount": 4,
        "url": "https://leetcode.com/problems/memoize/description"
    },
    "2741": {
        "difficulty": "EASY",
        "id": 2741,
        "questionFrontendId": "2629",
        "title": "Function Composition",
        "titleSlug": "function-composition",
        "topicTags": [],
        "companyNames": [
            "meta",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 4,
        "url": "https://leetcode.com/problems/function-composition/description"
    },
    "2750": {
        "difficulty": "MEDIUM",
        "id": 2750,
        "questionFrontendId": "2636",
        "title": "Promise Pool",
        "titleSlug": "promise-pool",
        "topicTags": [],
        "companyNames": [
            "meta",
            "tiktok",
            "google",
            "uber"
        ],
        "frequencyCount": 4,
        "url": "https://leetcode.com/problems/promise-pool/description"
    },
    "2755": {
        "difficulty": "MEDIUM",
        "id": 2755,
        "questionFrontendId": "2707",
        "title": "Extra Characters in a String",
        "titleSlug": "extra-characters-in-a-string",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Trie",
                "slug": "trie"
            }
        ],
        "companyNames": [
            "meta",
            "bloomberg",
            "adobe",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 6,
        "url": "https://leetcode.com/problems/extra-characters-in-a-string/description"
    },
    "2758": {
        "difficulty": "MEDIUM",
        "id": 2758,
        "questionFrontendId": "2618",
        "title": "Check if Object Instance of Class",
        "titleSlug": "check-if-object-instance-of-class",
        "topicTags": [],
        "companyNames": [
            "meta",
            "apple",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 5,
        "url": "https://leetcode.com/problems/check-if-object-instance-of-class/description"
    },
    "2775": {
        "difficulty": "EASY",
        "id": 2775,
        "questionFrontendId": "2648",
        "title": "Generate Fibonacci Sequence",
        "titleSlug": "generate-fibonacci-sequence",
        "topicTags": [],
        "companyNames": [
            "meta",
            "amazon",
            "uber"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/generate-fibonacci-sequence/description"
    },
    "2808": {
        "difficulty": "HARD",
        "id": 2808,
        "questionFrontendId": "2742",
        "title": "Painting the Walls",
        "titleSlug": "painting-the-walls",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            }
        ],
        "companyNames": [
            "meta",
            "microsoft",
            "bloomberg",
            "apple",
            "adobe",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 8,
        "url": "https://leetcode.com/problems/painting-the-walls/description"
    },
    "2832": {
        "difficulty": "MEDIUM",
        "id": 2832,
        "questionFrontendId": "2831",
        "title": "Find the Longest Equal Subarray",
        "titleSlug": "find-the-longest-equal-subarray",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Binary Search",
                "slug": "binary-search"
            },
            {
                "name": "Sliding Window",
                "slug": "sliding-window"
            }
        ],
        "companyNames": [
            "meta",
            "bloomberg",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 5,
        "url": "https://leetcode.com/problems/find-the-longest-equal-subarray/description"
    },
    "2859": {
        "difficulty": "EASY",
        "id": 2859,
        "questionFrontendId": "2723",
        "title": "Add Two Promises",
        "titleSlug": "add-two-promises",
        "topicTags": [],
        "companyNames": [
            "meta",
            "microsoft",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 5,
        "url": "https://leetcode.com/problems/add-two-promises/description"
    },
    "2868": {
        "difficulty": "MEDIUM",
        "id": 2868,
        "questionFrontendId": "2762",
        "title": "Continuous Subarrays",
        "titleSlug": "continuous-subarrays",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Queue",
                "slug": "queue"
            },
            {
                "name": "Sliding Window",
                "slug": "sliding-window"
            },
            {
                "name": "Heap (Priority Queue)",
                "slug": "heap-priority-queue"
            },
            {
                "name": "Ordered Set",
                "slug": "ordered-set"
            },
            {
                "name": "Monotonic Queue",
                "slug": "monotonic-queue"
            }
        ],
        "companyNames": [
            "meta",
            "adobe",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 5,
        "url": "https://leetcode.com/problems/continuous-subarrays/description"
    },
    "2876": {
        "difficulty": "EASY",
        "id": 2876,
        "questionFrontendId": "2798",
        "title": "Number of Employees Who Met the Target",
        "titleSlug": "number-of-employees-who-met-the-target",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            }
        ],
        "companyNames": [
            "meta",
            "adobe",
            "tcs",
            "amazon",
            "uber"
        ],
        "frequencyCount": 5,
        "url": "https://leetcode.com/problems/number-of-employees-who-met-the-target/description"
    },
    "2884": {
        "difficulty": "HARD",
        "id": 2884,
        "questionFrontendId": "2781",
        "title": "Length of the Longest Valid Substring",
        "titleSlug": "length-of-the-longest-valid-substring",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Sliding Window",
                "slug": "sliding-window"
            }
        ],
        "companyNames": [
            "meta",
            "tiktok",
            "amazon",
            "uber"
        ],
        "frequencyCount": 4,
        "url": "https://leetcode.com/problems/length-of-the-longest-valid-substring/description"
    },
    "3000": {
        "difficulty": "MEDIUM",
        "id": 3000,
        "questionFrontendId": "2817",
        "title": "Minimum Absolute Difference Between Elements With Constraint",
        "titleSlug": "minimum-absolute-difference-between-elements-with-constraint",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Binary Search",
                "slug": "binary-search"
            },
            {
                "name": "Ordered Set",
                "slug": "ordered-set"
            }
        ],
        "companyNames": [
            "meta",
            "microsoft",
            "google",
            "amazon",
            "uber"
        ],
        "frequencyCount": 5,
        "url": "https://leetcode.com/problems/minimum-absolute-difference-between-elements-with-constraint/description"
    },
    "3075": {
        "difficulty": "EASY",
        "id": 3075,
        "questionFrontendId": "2883",
        "title": "Drop Missing Data",
        "titleSlug": "drop-missing-data",
        "topicTags": [],
        "companyNames": [
            "meta",
            "uber"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/drop-missing-data/description"
    },
    "3105": {
        "difficulty": "HARD",
        "id": 3105,
        "questionFrontendId": "2858",
        "title": "Minimum Edge Reversals So Every Node Is Reachable",
        "titleSlug": "minimum-edge-reversals-so-every-node-is-reachable",
        "topicTags": [
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Breadth-First Search",
                "slug": "breadth-first-search"
            },
            {
                "name": "Graph",
                "slug": "graph"
            }
        ],
        "companyNames": [
            "meta",
            "uber"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/minimum-edge-reversals-so-every-node-is-reachable/description"
    },
    "3191": {
        "difficulty": "MEDIUM",
        "id": 3191,
        "questionFrontendId": "2925",
        "title": "Maximum Score After Applying Operations on a Tree",
        "titleSlug": "maximum-score-after-applying-operations-on-a-tree",
        "topicTags": [
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Tree",
                "slug": "tree"
            },
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            }
        ],
        "companyNames": [
            "meta",
            "google",
            "uber"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/maximum-score-after-applying-operations-on-a-tree/description"
    },
    "3309": {
        "difficulty": "EASY",
        "id": 3309,
        "questionFrontendId": "3042",
        "title": "Count Prefix and Suffix Pairs I",
        "titleSlug": "count-prefix-and-suffix-pairs-i",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Trie",
                "slug": "trie"
            },
            {
                "name": "Rolling Hash",
                "slug": "rolling-hash"
            },
            {
                "name": "String Matching",
                "slug": "string-matching"
            },
            {
                "name": "Hash Function",
                "slug": "hash-function"
            }
        ],
        "companyNames": [
            "meta",
            "uber"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/count-prefix-and-suffix-pairs-i/description"
    },
    "1555": {
        "difficulty": "HARD",
        "id": 1555,
        "questionFrontendId": "1444",
        "title": "Number of Ways of Cutting a Pizza",
        "titleSlug": "number-of-ways-of-cutting-a-pizza",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Memoization",
                "slug": "memoization"
            },
            {
                "name": "Matrix",
                "slug": "matrix"
            }
        ],
        "companyNames": [
            "tiktok",
            "google"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/number-of-ways-of-cutting-a-pizza/description"
    },
    "785": {
        "difficulty": "HARD",
        "id": 785,
        "questionFrontendId": "772",
        "title": "Basic Calculator III",
        "titleSlug": "basic-calculator-iii",
        "topicTags": [
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Stack",
                "slug": "stack"
            },
            {
                "name": "Recursion",
                "slug": "recursion"
            }
        ],
        "companyNames": [
            "tiktok",
            "microsoft",
            "apple",
            "doordash",
            "google",
            "amazon"
        ],
        "frequencyCount": 6,
        "url": "https://leetcode.com/problems/basic-calculator-iii/description"
    },
    "93": {
        "difficulty": "MEDIUM",
        "id": 93,
        "questionFrontendId": "93",
        "title": "Restore IP Addresses",
        "titleSlug": "restore-ip-addresses",
        "topicTags": [
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Backtracking",
                "slug": "backtracking"
            }
        ],
        "companyNames": [
            "tiktok",
            "microsoft",
            "oracle",
            "bloomberg",
            "apple",
            "adobe",
            "google",
            "amazon"
        ],
        "frequencyCount": 8,
        "url": "https://leetcode.com/problems/restore-ip-addresses/description"
    },
    "2419": {
        "difficulty": "HARD",
        "id": 2419,
        "questionFrontendId": "2334",
        "title": "Subarray With Elements Greater Than Varying Threshold",
        "titleSlug": "subarray-with-elements-greater-than-varying-threshold",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Stack",
                "slug": "stack"
            },
            {
                "name": "Union Find",
                "slug": "union-find"
            },
            {
                "name": "Monotonic Stack",
                "slug": "monotonic-stack"
            }
        ],
        "companyNames": [
            "tiktok",
            "google"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/subarray-with-elements-greater-than-varying-threshold/description"
    },
    "395": {
        "difficulty": "MEDIUM",
        "id": 395,
        "questionFrontendId": "395",
        "title": "Longest Substring with At Least K Repeating Characters",
        "titleSlug": "longest-substring-with-at-least-k-repeating-characters",
        "topicTags": [
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Divide and Conquer",
                "slug": "divide-and-conquer"
            },
            {
                "name": "Sliding Window",
                "slug": "sliding-window"
            }
        ],
        "companyNames": [
            "tiktok",
            "microsoft",
            "apple",
            "adobe",
            "google",
            "amazon"
        ],
        "frequencyCount": 6,
        "url": "https://leetcode.com/problems/longest-substring-with-at-least-k-repeating-characters/description"
    },
    "982": {
        "difficulty": "MEDIUM",
        "id": 982,
        "questionFrontendId": "945",
        "title": "Minimum Increment to Make Array Unique",
        "titleSlug": "minimum-increment-to-make-array-unique",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            },
            {
                "name": "Counting",
                "slug": "counting"
            }
        ],
        "companyNames": [
            "tiktok",
            "microsoft",
            "goldman_sachs",
            "bloomberg",
            "apple",
            "google",
            "amazon"
        ],
        "frequencyCount": 7,
        "url": "https://leetcode.com/problems/minimum-increment-to-make-array-unique/description"
    },
    "694": {
        "difficulty": "MEDIUM",
        "id": 694,
        "questionFrontendId": "694",
        "title": "Number of Distinct Islands",
        "titleSlug": "number-of-distinct-islands",
        "topicTags": [
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Breadth-First Search",
                "slug": "breadth-first-search"
            },
            {
                "name": "Union Find",
                "slug": "union-find"
            },
            {
                "name": "Hash Function",
                "slug": "hash-function"
            }
        ],
        "companyNames": [
            "tiktok",
            "microsoft",
            "oracle",
            "bloomberg",
            "amazon"
        ],
        "frequencyCount": 5,
        "url": "https://leetcode.com/problems/number-of-distinct-islands/description"
    },
    "886": {
        "difficulty": "MEDIUM",
        "id": 886,
        "questionFrontendId": "856",
        "title": "Score of Parentheses",
        "titleSlug": "score-of-parentheses",
        "topicTags": [
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Stack",
                "slug": "stack"
            }
        ],
        "companyNames": [
            "tiktok",
            "microsoft",
            "bloomberg",
            "apple",
            "amazon"
        ],
        "frequencyCount": 5,
        "url": "https://leetcode.com/problems/score-of-parentheses/description"
    },
    "227": {
        "difficulty": "MEDIUM",
        "id": 227,
        "questionFrontendId": "227",
        "title": "Basic Calculator II",
        "titleSlug": "basic-calculator-ii",
        "topicTags": [
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Stack",
                "slug": "stack"
            }
        ],
        "companyNames": [
            "tiktok",
            "microsoft",
            "bloomberg",
            "apple",
            "adobe",
            "walmart_labs",
            "airbnb",
            "accenture",
            "doordash",
            "google",
            "amazon"
        ],
        "frequencyCount": 11,
        "url": "https://leetcode.com/problems/basic-calculator-ii/description"
    },
    "1371": {
        "difficulty": "MEDIUM",
        "id": 1371,
        "questionFrontendId": "1249",
        "title": "Minimum Remove to Make Valid Parentheses",
        "titleSlug": "minimum-remove-to-make-valid-parentheses",
        "topicTags": [
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Stack",
                "slug": "stack"
            }
        ],
        "companyNames": [
            "tiktok",
            "microsoft",
            "goldman_sachs",
            "bloomberg",
            "apple",
            "adobe",
            "google",
            "amazon"
        ],
        "frequencyCount": 8,
        "url": "https://leetcode.com/problems/minimum-remove-to-make-valid-parentheses/description"
    },
    "666": {
        "difficulty": "MEDIUM",
        "id": 666,
        "questionFrontendId": "666",
        "title": "Path Sum IV",
        "titleSlug": "path-sum-iv",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Tree",
                "slug": "tree"
            },
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Binary Tree",
                "slug": "binary-tree"
            }
        ],
        "companyNames": [
            "tiktok"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/path-sum-iv/description"
    },
    "1055": {
        "difficulty": "MEDIUM",
        "id": 1055,
        "questionFrontendId": "1010",
        "title": "Pairs of Songs With Total Durations Divisible by 60",
        "titleSlug": "pairs-of-songs-with-total-durations-divisible-by-60",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Counting",
                "slug": "counting"
            }
        ],
        "companyNames": [
            "tiktok",
            "microsoft",
            "oracle",
            "goldman_sachs",
            "bloomberg",
            "apple",
            "walmart_labs",
            "amazon"
        ],
        "frequencyCount": 8,
        "url": "https://leetcode.com/problems/pairs-of-songs-with-total-durations-divisible-by-60/description"
    },
    "1971": {
        "difficulty": "MEDIUM",
        "id": 1971,
        "questionFrontendId": "1860",
        "title": "Incremental Memory Leak",
        "titleSlug": "incremental-memory-leak",
        "topicTags": [
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Simulation",
                "slug": "simulation"
            }
        ],
        "companyNames": [
            "tiktok"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/incremental-memory-leak/description"
    },
    "2610": {
        "difficulty": "MEDIUM",
        "id": 2610,
        "questionFrontendId": "2523",
        "title": "Closest Prime Numbers in Range",
        "titleSlug": "closest-prime-numbers-in-range",
        "topicTags": [
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Number Theory",
                "slug": "number-theory"
            }
        ],
        "companyNames": [
            "tiktok"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/closest-prime-numbers-in-range/description"
    },
    "2676": {
        "difficulty": "MEDIUM",
        "id": 2676,
        "questionFrontendId": "2640",
        "title": "Find the Score of All Prefixes of an Array",
        "titleSlug": "find-the-score-of-all-prefixes-of-an-array",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Prefix Sum",
                "slug": "prefix-sum"
            }
        ],
        "companyNames": [
            "tiktok",
            "amazon"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/find-the-score-of-all-prefixes-of-an-array/description"
    },
    "1320": {
        "difficulty": "MEDIUM",
        "id": 1320,
        "questionFrontendId": "1209",
        "title": "Remove All Adjacent Duplicates in String II",
        "titleSlug": "remove-all-adjacent-duplicates-in-string-ii",
        "topicTags": [
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Stack",
                "slug": "stack"
            }
        ],
        "companyNames": [
            "tiktok",
            "microsoft",
            "oracle",
            "goldman_sachs",
            "bloomberg",
            "adobe",
            "google",
            "amazon"
        ],
        "frequencyCount": 8,
        "url": "https://leetcode.com/problems/remove-all-adjacent-duplicates-in-string-ii/description"
    },
    "2249": {
        "difficulty": "MEDIUM",
        "id": 2249,
        "questionFrontendId": "2145",
        "title": "Count the Hidden Sequences",
        "titleSlug": "count-the-hidden-sequences",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Prefix Sum",
                "slug": "prefix-sum"
            }
        ],
        "companyNames": [
            "tiktok",
            "amazon"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/count-the-hidden-sequences/description"
    },
    "2492": {
        "difficulty": "MEDIUM",
        "id": 2492,
        "questionFrontendId": "2414",
        "title": "Length of the Longest Alphabetical Continuous Substring",
        "titleSlug": "length-of-the-longest-alphabetical-continuous-substring",
        "topicTags": [
            {
                "name": "String",
                "slug": "string"
            }
        ],
        "companyNames": [
            "tiktok"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/length-of-the-longest-alphabetical-continuous-substring/description"
    },
    "2543": {
        "difficulty": "MEDIUM",
        "id": 2543,
        "questionFrontendId": "2456",
        "title": "Most Popular Video Creator",
        "titleSlug": "most-popular-video-creator",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            },
            {
                "name": "Heap (Priority Queue)",
                "slug": "heap-priority-queue"
            }
        ],
        "companyNames": [
            "tiktok"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/most-popular-video-creator/description"
    },
    "2856": {
        "difficulty": "MEDIUM",
        "id": 2856,
        "questionFrontendId": "2799",
        "title": "Count Complete Subarrays in an Array",
        "titleSlug": "count-complete-subarrays-in-an-array",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Sliding Window",
                "slug": "sliding-window"
            }
        ],
        "companyNames": [
            "tiktok",
            "amazon"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/count-complete-subarrays-in-an-array/description"
    },
    "3327": {
        "difficulty": "HARD",
        "id": 3327,
        "questionFrontendId": "3086",
        "title": "Minimum Moves to Pick K Ones",
        "titleSlug": "minimum-moves-to-pick-k-ones",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            },
            {
                "name": "Sliding Window",
                "slug": "sliding-window"
            },
            {
                "name": "Prefix Sum",
                "slug": "prefix-sum"
            }
        ],
        "companyNames": [
            "tiktok"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/minimum-moves-to-pick-k-ones/description"
    },
    "259": {
        "difficulty": "MEDIUM",
        "id": 259,
        "questionFrontendId": "259",
        "title": "3Sum Smaller",
        "titleSlug": "3sum-smaller",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Two Pointers",
                "slug": "two-pointers"
            },
            {
                "name": "Binary Search",
                "slug": "binary-search"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ],
        "companyNames": [
            "tiktok",
            "microsoft",
            "google",
            "amazon"
        ],
        "frequencyCount": 4,
        "url": "https://leetcode.com/problems/3sum-smaller/description"
    },
    "684": {
        "difficulty": "MEDIUM",
        "id": 684,
        "questionFrontendId": "684",
        "title": "Redundant Connection",
        "titleSlug": "redundant-connection",
        "topicTags": [
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Breadth-First Search",
                "slug": "breadth-first-search"
            },
            {
                "name": "Union Find",
                "slug": "union-find"
            },
            {
                "name": "Graph",
                "slug": "graph"
            }
        ],
        "companyNames": [
            "tiktok",
            "bloomberg",
            "apple",
            "adobe",
            "google",
            "amazon"
        ],
        "frequencyCount": 6,
        "url": "https://leetcode.com/problems/redundant-connection/description"
    },
    "815": {
        "difficulty": "MEDIUM",
        "id": 815,
        "questionFrontendId": "799",
        "title": "Champagne Tower",
        "titleSlug": "champagne-tower",
        "topicTags": [
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            }
        ],
        "companyNames": [
            "tiktok",
            "microsoft",
            "bloomberg",
            "adobe",
            "google",
            "amazon"
        ],
        "frequencyCount": 6,
        "url": "https://leetcode.com/problems/champagne-tower/description"
    },
    "1653": {
        "difficulty": "MEDIUM",
        "id": 1653,
        "questionFrontendId": "1530",
        "title": "Number of Good Leaf Nodes Pairs",
        "titleSlug": "number-of-good-leaf-nodes-pairs",
        "topicTags": [
            {
                "name": "Tree",
                "slug": "tree"
            },
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Binary Tree",
                "slug": "binary-tree"
            }
        ],
        "companyNames": [
            "tiktok",
            "google",
            "amazon"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/number-of-good-leaf-nodes-pairs/description"
    },
    "163": {
        "difficulty": "EASY",
        "id": 163,
        "questionFrontendId": "163",
        "title": "Missing Ranges",
        "titleSlug": "missing-ranges",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            }
        ],
        "companyNames": [
            "tiktok",
            "google",
            "amazon"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/missing-ranges/description"
    },
    "204": {
        "difficulty": "MEDIUM",
        "id": 204,
        "questionFrontendId": "204",
        "title": "Count Primes",
        "titleSlug": "count-primes",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Enumeration",
                "slug": "enumeration"
            },
            {
                "name": "Number Theory",
                "slug": "number-theory"
            }
        ],
        "companyNames": [
            "tiktok",
            "microsoft",
            "goldman_sachs",
            "bloomberg",
            "apple",
            "adobe",
            "walmart_labs",
            "tcs",
            "accenture",
            "google",
            "amazon"
        ],
        "frequencyCount": 11,
        "url": "https://leetcode.com/problems/count-primes/description"
    },
    "1447": {
        "difficulty": "HARD",
        "id": 1447,
        "questionFrontendId": "1345",
        "title": "Jump Game IV",
        "titleSlug": "jump-game-iv",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Breadth-First Search",
                "slug": "breadth-first-search"
            }
        ],
        "companyNames": [
            "tiktok",
            "google",
            "amazon"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/jump-game-iv/description"
    },
    "468": {
        "difficulty": "MEDIUM",
        "id": 468,
        "questionFrontendId": "468",
        "title": "Validate IP Address",
        "titleSlug": "validate-ip-address",
        "topicTags": [
            {
                "name": "String",
                "slug": "string"
            }
        ],
        "companyNames": [
            "tiktok",
            "microsoft",
            "oracle",
            "apple",
            "cisco",
            "amazon"
        ],
        "frequencyCount": 6,
        "url": "https://leetcode.com/problems/validate-ip-address/description"
    },
    "670": {
        "difficulty": "MEDIUM",
        "id": 670,
        "questionFrontendId": "670",
        "title": "Maximum Swap",
        "titleSlug": "maximum-swap",
        "topicTags": [
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            }
        ],
        "companyNames": [
            "tiktok",
            "apple",
            "google",
            "amazon"
        ],
        "frequencyCount": 4,
        "url": "https://leetcode.com/problems/maximum-swap/description"
    },
    "2217": {
        "difficulty": "MEDIUM",
        "id": 2217,
        "questionFrontendId": "2096",
        "title": "Step-By-Step Directions From a Binary Tree Node to Another",
        "titleSlug": "step-by-step-directions-from-a-binary-tree-node-to-another",
        "topicTags": [
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Tree",
                "slug": "tree"
            },
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Binary Tree",
                "slug": "binary-tree"
            }
        ],
        "companyNames": [
            "tiktok",
            "microsoft",
            "google",
            "amazon"
        ],
        "frequencyCount": 4,
        "url": "https://leetcode.com/problems/step-by-step-directions-from-a-binary-tree-node-to-another/description"
    },
    "96": {
        "difficulty": "MEDIUM",
        "id": 96,
        "questionFrontendId": "96",
        "title": "Unique Binary Search Trees",
        "titleSlug": "unique-binary-search-trees",
        "topicTags": [
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Tree",
                "slug": "tree"
            },
            {
                "name": "Binary Search Tree",
                "slug": "binary-search-tree"
            },
            {
                "name": "Binary Tree",
                "slug": "binary-tree"
            }
        ],
        "companyNames": [
            "tiktok",
            "microsoft",
            "oracle",
            "bloomberg",
            "apple",
            "adobe",
            "google",
            "amazon"
        ],
        "frequencyCount": 8,
        "url": "https://leetcode.com/problems/unique-binary-search-trees/description"
    },
    "165": {
        "difficulty": "MEDIUM",
        "id": 165,
        "questionFrontendId": "165",
        "title": "Compare Version Numbers",
        "titleSlug": "compare-version-numbers",
        "topicTags": [
            {
                "name": "Two Pointers",
                "slug": "two-pointers"
            },
            {
                "name": "String",
                "slug": "string"
            }
        ],
        "companyNames": [
            "tiktok",
            "microsoft",
            "oracle",
            "bloomberg",
            "apple",
            "adobe",
            "google",
            "amazon"
        ],
        "frequencyCount": 8,
        "url": "https://leetcode.com/problems/compare-version-numbers/description"
    },
    "282": {
        "difficulty": "HARD",
        "id": 282,
        "questionFrontendId": "282",
        "title": "Expression Add Operators",
        "titleSlug": "expression-add-operators",
        "topicTags": [
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Backtracking",
                "slug": "backtracking"
            }
        ],
        "companyNames": [
            "tiktok",
            "google"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/expression-add-operators/description"
    },
    "398": {
        "difficulty": "MEDIUM",
        "id": 398,
        "questionFrontendId": "398",
        "title": "Random Pick Index",
        "titleSlug": "random-pick-index",
        "topicTags": [
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Reservoir Sampling",
                "slug": "reservoir-sampling"
            },
            {
                "name": "Randomized",
                "slug": "randomized"
            }
        ],
        "companyNames": [
            "tiktok",
            "google",
            "amazon"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/random-pick-index/description"
    },
    "437": {
        "difficulty": "MEDIUM",
        "id": 437,
        "questionFrontendId": "437",
        "title": "Path Sum III",
        "titleSlug": "path-sum-iii",
        "topicTags": [
            {
                "name": "Tree",
                "slug": "tree"
            },
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Binary Tree",
                "slug": "binary-tree"
            }
        ],
        "companyNames": [
            "tiktok",
            "microsoft",
            "bloomberg",
            "apple",
            "adobe",
            "walmart_labs",
            "doordash",
            "google",
            "amazon"
        ],
        "frequencyCount": 9,
        "url": "https://leetcode.com/problems/path-sum-iii/description"
    },
    "960": {
        "difficulty": "HARD",
        "id": 960,
        "questionFrontendId": "924",
        "title": "Minimize Malware Spread",
        "titleSlug": "minimize-malware-spread",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Breadth-First Search",
                "slug": "breadth-first-search"
            },
            {
                "name": "Union Find",
                "slug": "union-find"
            },
            {
                "name": "Graph",
                "slug": "graph"
            }
        ],
        "companyNames": [
            "tiktok"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/minimize-malware-spread/description"
    },
    "1095": {
        "difficulty": "MEDIUM",
        "id": 1095,
        "questionFrontendId": "1029",
        "title": "Two City Scheduling",
        "titleSlug": "two-city-scheduling",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ],
        "companyNames": [
            "tiktok",
            "bloomberg",
            "doordash",
            "google",
            "amazon"
        ],
        "frequencyCount": 5,
        "url": "https://leetcode.com/problems/two-city-scheduling/description"
    },
    "1107": {
        "difficulty": "MEDIUM",
        "id": 1107,
        "questionFrontendId": "1151",
        "title": "Minimum Swaps to Group All 1's Together",
        "titleSlug": "minimum-swaps-to-group-all-1s-together",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Sliding Window",
                "slug": "sliding-window"
            }
        ],
        "companyNames": [
            "tiktok"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/minimum-swaps-to-group-all-1s-together/description"
    },
    "1483": {
        "difficulty": "MEDIUM",
        "id": 1483,
        "questionFrontendId": "1366",
        "title": "Rank Teams by Votes",
        "titleSlug": "rank-teams-by-votes",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            },
            {
                "name": "Counting",
                "slug": "counting"
            }
        ],
        "companyNames": [
            "tiktok",
            "microsoft",
            "google"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/rank-teams-by-votes/description"
    },
    "1648": {
        "difficulty": "MEDIUM",
        "id": 1648,
        "questionFrontendId": "1541",
        "title": "Minimum Insertions to Balance a Parentheses String",
        "titleSlug": "minimum-insertions-to-balance-a-parentheses-string",
        "topicTags": [
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Stack",
                "slug": "stack"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            }
        ],
        "companyNames": [
            "tiktok"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/minimum-insertions-to-balance-a-parentheses-string/description"
    },
    "2176": {
        "difficulty": "HARD",
        "id": 2176,
        "questionFrontendId": "2050",
        "title": "Parallel Courses III",
        "titleSlug": "parallel-courses-iii",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Graph",
                "slug": "graph"
            },
            {
                "name": "Topological Sort",
                "slug": "topological-sort"
            }
        ],
        "companyNames": [
            "tiktok",
            "microsoft",
            "google"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/parallel-courses-iii/description"
    },
    "113": {
        "difficulty": "MEDIUM",
        "id": 113,
        "questionFrontendId": "113",
        "title": "Path Sum II",
        "titleSlug": "path-sum-ii",
        "topicTags": [
            {
                "name": "Backtracking",
                "slug": "backtracking"
            },
            {
                "name": "Tree",
                "slug": "tree"
            },
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Binary Tree",
                "slug": "binary-tree"
            }
        ],
        "companyNames": [
            "tiktok",
            "microsoft",
            "oracle",
            "bloomberg",
            "adobe",
            "walmart_labs",
            "doordash",
            "google",
            "amazon"
        ],
        "frequencyCount": 9,
        "url": "https://leetcode.com/problems/path-sum-ii/description"
    },
    "333": {
        "difficulty": "MEDIUM",
        "id": 333,
        "questionFrontendId": "333",
        "title": "Largest BST Subtree",
        "titleSlug": "largest-bst-subtree",
        "topicTags": [
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Tree",
                "slug": "tree"
            },
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Binary Search Tree",
                "slug": "binary-search-tree"
            },
            {
                "name": "Binary Tree",
                "slug": "binary-tree"
            }
        ],
        "companyNames": [
            "tiktok",
            "microsoft",
            "oracle"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/largest-bst-subtree/description"
    },
    "415": {
        "difficulty": "EASY",
        "id": 415,
        "questionFrontendId": "415",
        "title": "Add Strings",
        "titleSlug": "add-strings",
        "topicTags": [
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Simulation",
                "slug": "simulation"
            }
        ],
        "companyNames": [
            "tiktok",
            "microsoft",
            "oracle",
            "apple",
            "adobe",
            "airbnb",
            "google",
            "amazon"
        ],
        "frequencyCount": 8,
        "url": "https://leetcode.com/problems/add-strings/description"
    },
    "652": {
        "difficulty": "MEDIUM",
        "id": 652,
        "questionFrontendId": "652",
        "title": "Find Duplicate Subtrees",
        "titleSlug": "find-duplicate-subtrees",
        "topicTags": [
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Tree",
                "slug": "tree"
            },
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Binary Tree",
                "slug": "binary-tree"
            }
        ],
        "companyNames": [
            "tiktok",
            "microsoft",
            "oracle",
            "bloomberg",
            "adobe",
            "google",
            "amazon"
        ],
        "frequencyCount": 7,
        "url": "https://leetcode.com/problems/find-duplicate-subtrees/description"
    },
    "860": {
        "difficulty": "MEDIUM",
        "id": 860,
        "questionFrontendId": "622",
        "title": "Design Circular Queue",
        "titleSlug": "design-circular-queue",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Linked List",
                "slug": "linked-list"
            },
            {
                "name": "Design",
                "slug": "design"
            },
            {
                "name": "Queue",
                "slug": "queue"
            }
        ],
        "companyNames": [
            "tiktok",
            "microsoft",
            "oracle",
            "bloomberg",
            "apple",
            "nvidia",
            "google",
            "amazon"
        ],
        "frequencyCount": 8,
        "url": "https://leetcode.com/problems/design-circular-queue/description"
    },
    "957": {
        "difficulty": "MEDIUM",
        "id": 957,
        "questionFrontendId": "921",
        "title": "Minimum Add to Make Parentheses Valid",
        "titleSlug": "minimum-add-to-make-parentheses-valid",
        "topicTags": [
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Stack",
                "slug": "stack"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            }
        ],
        "companyNames": [
            "tiktok",
            "microsoft",
            "bloomberg",
            "apple",
            "adobe",
            "walmart_labs",
            "nvidia",
            "google",
            "amazon"
        ],
        "frequencyCount": 9,
        "url": "https://leetcode.com/problems/minimum-add-to-make-parentheses-valid/description"
    },
    "1035": {
        "difficulty": "EASY",
        "id": 1035,
        "questionFrontendId": "993",
        "title": "Cousins in Binary Tree",
        "titleSlug": "cousins-in-binary-tree",
        "topicTags": [
            {
                "name": "Tree",
                "slug": "tree"
            },
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Breadth-First Search",
                "slug": "breadth-first-search"
            },
            {
                "name": "Binary Tree",
                "slug": "binary-tree"
            }
        ],
        "companyNames": [
            "tiktok",
            "microsoft",
            "bloomberg",
            "adobe",
            "google",
            "amazon"
        ],
        "frequencyCount": 6,
        "url": "https://leetcode.com/problems/cousins-in-binary-tree/description"
    },
    "1283": {
        "difficulty": "EASY",
        "id": 1283,
        "questionFrontendId": "1507",
        "title": "Reformat Date",
        "titleSlug": "reformat-date",
        "topicTags": [
            {
                "name": "String",
                "slug": "string"
            }
        ],
        "companyNames": [
            "tiktok",
            "goldman_sachs"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/reformat-date/description"
    },
    "1375": {
        "difficulty": "MEDIUM",
        "id": 1375,
        "questionFrontendId": "2217",
        "title": "Find Palindrome With Fixed Length",
        "titleSlug": "find-palindrome-with-fixed-length",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Math",
                "slug": "math"
            }
        ],
        "companyNames": [
            "tiktok"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/find-palindrome-with-fixed-length/description"
    },
    "1419": {
        "difficulty": "HARD",
        "id": 1419,
        "questionFrontendId": "2263",
        "title": "Make Array Non-decreasing or Non-increasing",
        "titleSlug": "make-array-non-decreasing-or-non-increasing",
        "topicTags": [
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            }
        ],
        "companyNames": [
            "tiktok",
            "oracle"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/make-array-non-decreasing-or-non-increasing/description"
    },
    "2375": {
        "difficulty": "HARD",
        "id": 2375,
        "questionFrontendId": "2290",
        "title": "Minimum Obstacle Removal to Reach Corner",
        "titleSlug": "minimum-obstacle-removal-to-reach-corner",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Breadth-First Search",
                "slug": "breadth-first-search"
            },
            {
                "name": "Graph",
                "slug": "graph"
            },
            {
                "name": "Heap (Priority Queue)",
                "slug": "heap-priority-queue"
            },
            {
                "name": "Matrix",
                "slug": "matrix"
            },
            {
                "name": "Shortest Path",
                "slug": "shortest-path"
            }
        ],
        "companyNames": [
            "tiktok",
            "google"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/minimum-obstacle-removal-to-reach-corner/description"
    },
    "159": {
        "difficulty": "MEDIUM",
        "id": 159,
        "questionFrontendId": "159",
        "title": "Longest Substring with At Most Two Distinct Characters",
        "titleSlug": "longest-substring-with-at-most-two-distinct-characters",
        "topicTags": [
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Sliding Window",
                "slug": "sliding-window"
            }
        ],
        "companyNames": [
            "tiktok",
            "microsoft",
            "oracle",
            "bloomberg",
            "google",
            "amazon"
        ],
        "frequencyCount": 6,
        "url": "https://leetcode.com/problems/longest-substring-with-at-most-two-distinct-characters/description"
    },
    "166": {
        "difficulty": "MEDIUM",
        "id": 166,
        "questionFrontendId": "166",
        "title": "Fraction to Recurring Decimal",
        "titleSlug": "fraction-to-recurring-decimal",
        "topicTags": [
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "String",
                "slug": "string"
            }
        ],
        "companyNames": [
            "tiktok",
            "goldman_sachs",
            "google",
            "amazon"
        ],
        "frequencyCount": 4,
        "url": "https://leetcode.com/problems/fraction-to-recurring-decimal/description"
    },
    "314": {
        "difficulty": "MEDIUM",
        "id": 314,
        "questionFrontendId": "314",
        "title": "Binary Tree Vertical Order Traversal",
        "titleSlug": "binary-tree-vertical-order-traversal",
        "topicTags": [
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Tree",
                "slug": "tree"
            },
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Breadth-First Search",
                "slug": "breadth-first-search"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            },
            {
                "name": "Binary Tree",
                "slug": "binary-tree"
            }
        ],
        "companyNames": [
            "tiktok",
            "microsoft",
            "oracle",
            "bloomberg",
            "apple",
            "google",
            "amazon"
        ],
        "frequencyCount": 7,
        "url": "https://leetcode.com/problems/binary-tree-vertical-order-traversal/description"
    },
    "340": {
        "difficulty": "MEDIUM",
        "id": 340,
        "questionFrontendId": "340",
        "title": "Longest Substring with At Most K Distinct Characters",
        "titleSlug": "longest-substring-with-at-most-k-distinct-characters",
        "topicTags": [
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Sliding Window",
                "slug": "sliding-window"
            }
        ],
        "companyNames": [
            "tiktok",
            "microsoft",
            "goldman_sachs",
            "google",
            "amazon"
        ],
        "frequencyCount": 5,
        "url": "https://leetcode.com/problems/longest-substring-with-at-most-k-distinct-characters/description"
    },
    "348": {
        "difficulty": "MEDIUM",
        "id": 348,
        "questionFrontendId": "348",
        "title": "Design Tic-Tac-Toe",
        "titleSlug": "design-tic-tac-toe",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Design",
                "slug": "design"
            },
            {
                "name": "Matrix",
                "slug": "matrix"
            },
            {
                "name": "Simulation",
                "slug": "simulation"
            }
        ],
        "companyNames": [
            "tiktok",
            "microsoft",
            "apple",
            "airbnb",
            "google",
            "amazon"
        ],
        "frequencyCount": 6,
        "url": "https://leetcode.com/problems/design-tic-tac-toe/description"
    },
    "475": {
        "difficulty": "MEDIUM",
        "id": 475,
        "questionFrontendId": "475",
        "title": "Heaters",
        "titleSlug": "heaters",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Two Pointers",
                "slug": "two-pointers"
            },
            {
                "name": "Binary Search",
                "slug": "binary-search"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ],
        "companyNames": [
            "tiktok",
            "microsoft",
            "apple",
            "google",
            "amazon"
        ],
        "frequencyCount": 5,
        "url": "https://leetcode.com/problems/heaters/description"
    },
    "480": {
        "difficulty": "HARD",
        "id": 480,
        "questionFrontendId": "480",
        "title": "Sliding Window Median",
        "titleSlug": "sliding-window-median",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Sliding Window",
                "slug": "sliding-window"
            },
            {
                "name": "Heap (Priority Queue)",
                "slug": "heap-priority-queue"
            }
        ],
        "companyNames": [
            "tiktok",
            "google",
            "amazon"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/sliding-window-median/description"
    },
    "691": {
        "difficulty": "HARD",
        "id": 691,
        "questionFrontendId": "691",
        "title": "Stickers to Spell Word",
        "titleSlug": "stickers-to-spell-word",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Backtracking",
                "slug": "backtracking"
            },
            {
                "name": "Bit Manipulation",
                "slug": "bit-manipulation"
            },
            {
                "name": "Bitmask",
                "slug": "bitmask"
            }
        ],
        "companyNames": [
            "tiktok",
            "bloomberg",
            "google",
            "amazon"
        ],
        "frequencyCount": 4,
        "url": "https://leetcode.com/problems/stickers-to-spell-word/description"
    },
    "713": {
        "difficulty": "MEDIUM",
        "id": 713,
        "questionFrontendId": "713",
        "title": "Subarray Product Less Than K",
        "titleSlug": "subarray-product-less-than-k",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Sliding Window",
                "slug": "sliding-window"
            }
        ],
        "companyNames": [
            "tiktok",
            "oracle",
            "bloomberg",
            "apple",
            "adobe",
            "nvidia",
            "google",
            "amazon"
        ],
        "frequencyCount": 8,
        "url": "https://leetcode.com/problems/subarray-product-less-than-k/description"
    },
    "721": {
        "difficulty": "MEDIUM",
        "id": 721,
        "questionFrontendId": "721",
        "title": "Accounts Merge",
        "titleSlug": "accounts-merge",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Breadth-First Search",
                "slug": "breadth-first-search"
            },
            {
                "name": "Union Find",
                "slug": "union-find"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ],
        "companyNames": [
            "tiktok",
            "microsoft",
            "bloomberg",
            "apple",
            "adobe",
            "google",
            "amazon"
        ],
        "frequencyCount": 7,
        "url": "https://leetcode.com/problems/accounts-merge/description"
    },
    "726": {
        "difficulty": "HARD",
        "id": 726,
        "questionFrontendId": "726",
        "title": "Number of Atoms",
        "titleSlug": "number-of-atoms",
        "topicTags": [
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Stack",
                "slug": "stack"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ],
        "companyNames": [
            "tiktok",
            "microsoft",
            "bloomberg",
            "apple",
            "google",
            "amazon"
        ],
        "frequencyCount": 6,
        "url": "https://leetcode.com/problems/number-of-atoms/description"
    },
    "962": {
        "difficulty": "MEDIUM",
        "id": 962,
        "questionFrontendId": "926",
        "title": "Flip String to Monotone Increasing",
        "titleSlug": "flip-string-to-monotone-increasing",
        "topicTags": [
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            }
        ],
        "companyNames": [
            "tiktok",
            "google",
            "amazon"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/flip-string-to-monotone-increasing/description"
    },
    "964": {
        "difficulty": "HARD",
        "id": 964,
        "questionFrontendId": "928",
        "title": "Minimize Malware Spread II",
        "titleSlug": "minimize-malware-spread-ii",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Breadth-First Search",
                "slug": "breadth-first-search"
            },
            {
                "name": "Union Find",
                "slug": "union-find"
            },
            {
                "name": "Graph",
                "slug": "graph"
            }
        ],
        "companyNames": [
            "tiktok"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/minimize-malware-spread-ii/description"
    },
    "1081": {
        "difficulty": "MEDIUM",
        "id": 1081,
        "questionFrontendId": "1024",
        "title": "Video Stitching",
        "titleSlug": "video-stitching",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            }
        ],
        "companyNames": [
            "tiktok",
            "google"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/video-stitching/description"
    },
    "1190": {
        "difficulty": "MEDIUM",
        "id": 1190,
        "questionFrontendId": "1257",
        "title": "Smallest Common Region",
        "titleSlug": "smallest-common-region",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Tree",
                "slug": "tree"
            },
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Breadth-First Search",
                "slug": "breadth-first-search"
            }
        ],
        "companyNames": [
            "tiktok",
            "airbnb"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/smallest-common-region/description"
    },
    "1477": {
        "difficulty": "MEDIUM",
        "id": 1477,
        "questionFrontendId": "1352",
        "title": "Product of the Last K Numbers",
        "titleSlug": "product-of-the-last-k-numbers",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Design",
                "slug": "design"
            },
            {
                "name": "Queue",
                "slug": "queue"
            },
            {
                "name": "Data Stream",
                "slug": "data-stream"
            }
        ],
        "companyNames": [
            "tiktok",
            "microsoft",
            "apple",
            "google",
            "amazon"
        ],
        "frequencyCount": 5,
        "url": "https://leetcode.com/problems/product-of-the-last-k-numbers/description"
    },
    "2565": {
        "difficulty": "MEDIUM",
        "id": 2565,
        "questionFrontendId": "2422",
        "title": "Merge Operations to Turn Array Into a Palindrome",
        "titleSlug": "merge-operations-to-turn-array-into-a-palindrome",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Two Pointers",
                "slug": "two-pointers"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            }
        ],
        "companyNames": [
            "tiktok",
            "oracle",
            "adobe",
            "amazon"
        ],
        "frequencyCount": 4,
        "url": "https://leetcode.com/problems/merge-operations-to-turn-array-into-a-palindrome/description"
    },
    "2594": {
        "difficulty": "EASY",
        "id": 2594,
        "questionFrontendId": "2506",
        "title": "Count Pairs Of Similar Strings",
        "titleSlug": "count-pairs-of-similar-strings",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Bit Manipulation",
                "slug": "bit-manipulation"
            }
        ],
        "companyNames": [
            "tiktok",
            "oracle",
            "bloomberg",
            "apple"
        ],
        "frequencyCount": 4,
        "url": "https://leetcode.com/problems/count-pairs-of-similar-strings/description"
    },
    "99": {
        "difficulty": "MEDIUM",
        "id": 99,
        "questionFrontendId": "99",
        "title": "Recover Binary Search Tree",
        "titleSlug": "recover-binary-search-tree",
        "topicTags": [
            {
                "name": "Tree",
                "slug": "tree"
            },
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Binary Search Tree",
                "slug": "binary-search-tree"
            },
            {
                "name": "Binary Tree",
                "slug": "binary-tree"
            }
        ],
        "companyNames": [
            "tiktok",
            "microsoft",
            "oracle",
            "bloomberg",
            "apple",
            "adobe",
            "google",
            "amazon"
        ],
        "frequencyCount": 8,
        "url": "https://leetcode.com/problems/recover-binary-search-tree/description"
    },
    "142": {
        "difficulty": "MEDIUM",
        "id": 142,
        "questionFrontendId": "142",
        "title": "Linked List Cycle II",
        "titleSlug": "linked-list-cycle-ii",
        "topicTags": [
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Linked List",
                "slug": "linked-list"
            },
            {
                "name": "Two Pointers",
                "slug": "two-pointers"
            }
        ],
        "companyNames": [
            "tiktok",
            "microsoft",
            "bloomberg",
            "apple",
            "adobe",
            "nvidia",
            "google",
            "amazon"
        ],
        "frequencyCount": 8,
        "url": "https://leetcode.com/problems/linked-list-cycle-ii/description"
    },
    "284": {
        "difficulty": "MEDIUM",
        "id": 284,
        "questionFrontendId": "284",
        "title": "Peeking Iterator",
        "titleSlug": "peeking-iterator",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Design",
                "slug": "design"
            },
            {
                "name": "Iterator",
                "slug": "iterator"
            }
        ],
        "companyNames": [
            "tiktok",
            "apple",
            "google"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/peeking-iterator/description"
    },
    "418": {
        "difficulty": "MEDIUM",
        "id": 418,
        "questionFrontendId": "418",
        "title": "Sentence Screen Fitting",
        "titleSlug": "sentence-screen-fitting",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            }
        ],
        "companyNames": [
            "tiktok",
            "google"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/sentence-screen-fitting/description"
    },
    "498": {
        "difficulty": "MEDIUM",
        "id": 498,
        "questionFrontendId": "498",
        "title": "Diagonal Traverse",
        "titleSlug": "diagonal-traverse",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Matrix",
                "slug": "matrix"
            },
            {
                "name": "Simulation",
                "slug": "simulation"
            }
        ],
        "companyNames": [
            "tiktok",
            "microsoft",
            "google",
            "amazon"
        ],
        "frequencyCount": 4,
        "url": "https://leetcode.com/problems/diagonal-traverse/description"
    },
    "562": {
        "difficulty": "MEDIUM",
        "id": 562,
        "questionFrontendId": "562",
        "title": "Longest Line of Consecutive One in Matrix",
        "titleSlug": "longest-line-of-consecutive-one-in-matrix",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Matrix",
                "slug": "matrix"
            }
        ],
        "companyNames": [
            "tiktok",
            "google"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/longest-line-of-consecutive-one-in-matrix/description"
    },
    "673": {
        "difficulty": "MEDIUM",
        "id": 673,
        "questionFrontendId": "673",
        "title": "Number of Longest Increasing Subsequence",
        "titleSlug": "number-of-longest-increasing-subsequence",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Binary Indexed Tree",
                "slug": "binary-indexed-tree"
            },
            {
                "name": "Segment Tree",
                "slug": "segment-tree"
            }
        ],
        "companyNames": [
            "tiktok",
            "bloomberg",
            "adobe",
            "google",
            "amazon"
        ],
        "frequencyCount": 5,
        "url": "https://leetcode.com/problems/number-of-longest-increasing-subsequence/description"
    },
    "714": {
        "difficulty": "MEDIUM",
        "id": 714,
        "questionFrontendId": "714",
        "title": "Best Time to Buy and Sell Stock with Transaction Fee",
        "titleSlug": "best-time-to-buy-and-sell-stock-with-transaction-fee",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            }
        ],
        "companyNames": [
            "tiktok",
            "microsoft",
            "goldman_sachs",
            "bloomberg",
            "apple",
            "adobe",
            "amazon"
        ],
        "frequencyCount": 7,
        "url": "https://leetcode.com/problems/best-time-to-buy-and-sell-stock-with-transaction-fee/description"
    },
    "744": {
        "difficulty": "MEDIUM",
        "id": 744,
        "questionFrontendId": "743",
        "title": "Network Delay Time",
        "titleSlug": "network-delay-time",
        "topicTags": [
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Breadth-First Search",
                "slug": "breadth-first-search"
            },
            {
                "name": "Graph",
                "slug": "graph"
            },
            {
                "name": "Heap (Priority Queue)",
                "slug": "heap-priority-queue"
            },
            {
                "name": "Shortest Path",
                "slug": "shortest-path"
            }
        ],
        "companyNames": [
            "tiktok",
            "microsoft",
            "bloomberg",
            "apple",
            "adobe",
            "google",
            "amazon"
        ],
        "frequencyCount": 7,
        "url": "https://leetcode.com/problems/network-delay-time/description"
    },
    "746": {
        "difficulty": "HARD",
        "id": 746,
        "questionFrontendId": "745",
        "title": "Prefix and Suffix Search",
        "titleSlug": "prefix-and-suffix-search",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Design",
                "slug": "design"
            },
            {
                "name": "Trie",
                "slug": "trie"
            }
        ],
        "companyNames": [
            "tiktok",
            "microsoft",
            "apple",
            "google"
        ],
        "frequencyCount": 4,
        "url": "https://leetcode.com/problems/prefix-and-suffix-search/description"
    },
    "758": {
        "difficulty": "MEDIUM",
        "id": 758,
        "questionFrontendId": "426",
        "title": "Convert Binary Search Tree to Sorted Doubly Linked List",
        "titleSlug": "convert-binary-search-tree-to-sorted-doubly-linked-list",
        "topicTags": [
            {
                "name": "Linked List",
                "slug": "linked-list"
            },
            {
                "name": "Stack",
                "slug": "stack"
            },
            {
                "name": "Tree",
                "slug": "tree"
            },
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Binary Search Tree",
                "slug": "binary-search-tree"
            },
            {
                "name": "Binary Tree",
                "slug": "binary-tree"
            },
            {
                "name": "Doubly-Linked List",
                "slug": "doubly-linked-list"
            }
        ],
        "companyNames": [
            "tiktok",
            "microsoft",
            "amazon"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/convert-binary-search-tree-to-sorted-doubly-linked-list/description"
    },
    "863": {
        "difficulty": "HARD",
        "id": 863,
        "questionFrontendId": "834",
        "title": "Sum of Distances in Tree",
        "titleSlug": "sum-of-distances-in-tree",
        "topicTags": [
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Tree",
                "slug": "tree"
            },
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Graph",
                "slug": "graph"
            }
        ],
        "companyNames": [
            "tiktok",
            "microsoft",
            "oracle",
            "adobe",
            "google",
            "amazon"
        ],
        "frequencyCount": 6,
        "url": "https://leetcode.com/problems/sum-of-distances-in-tree/description"
    },
    "874": {
        "difficulty": "EASY",
        "id": 874,
        "questionFrontendId": "844",
        "title": "Backspace String Compare",
        "titleSlug": "backspace-string-compare",
        "topicTags": [
            {
                "name": "Two Pointers",
                "slug": "two-pointers"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Stack",
                "slug": "stack"
            },
            {
                "name": "Simulation",
                "slug": "simulation"
            }
        ],
        "companyNames": [
            "tiktok",
            "microsoft",
            "oracle",
            "goldman_sachs",
            "apple",
            "adobe",
            "google",
            "amazon"
        ],
        "frequencyCount": 8,
        "url": "https://leetcode.com/problems/backspace-string-compare/description"
    },
    "1083": {
        "difficulty": "EASY",
        "id": 1083,
        "questionFrontendId": "1099",
        "title": "Two Sum Less Than K",
        "titleSlug": "two-sum-less-than-k",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Two Pointers",
                "slug": "two-pointers"
            },
            {
                "name": "Binary Search",
                "slug": "binary-search"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ],
        "companyNames": [
            "tiktok",
            "amazon"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/two-sum-less-than-k/description"
    },
    "1125": {
        "difficulty": "MEDIUM",
        "id": 1125,
        "questionFrontendId": "1166",
        "title": "Design File System",
        "titleSlug": "design-file-system",
        "topicTags": [
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Design",
                "slug": "design"
            },
            {
                "name": "Trie",
                "slug": "trie"
            }
        ],
        "companyNames": [
            "tiktok",
            "microsoft",
            "oracle",
            "airbnb",
            "doordash",
            "google",
            "amazon"
        ],
        "frequencyCount": 7,
        "url": "https://leetcode.com/problems/design-file-system/description"
    },
    "1285": {
        "difficulty": "MEDIUM",
        "id": 1285,
        "questionFrontendId": "1382",
        "title": "Balance a Binary Search Tree",
        "titleSlug": "balance-a-binary-search-tree",
        "topicTags": [
            {
                "name": "Divide and Conquer",
                "slug": "divide-and-conquer"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            },
            {
                "name": "Tree",
                "slug": "tree"
            },
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Binary Search Tree",
                "slug": "binary-search-tree"
            },
            {
                "name": "Binary Tree",
                "slug": "binary-tree"
            }
        ],
        "companyNames": [
            "tiktok",
            "microsoft",
            "bloomberg",
            "google",
            "amazon"
        ],
        "frequencyCount": 5,
        "url": "https://leetcode.com/problems/balance-a-binary-search-tree/description"
    },
    "1304": {
        "difficulty": "MEDIUM",
        "id": 1304,
        "questionFrontendId": "1405",
        "title": "Longest Happy String",
        "titleSlug": "longest-happy-string",
        "topicTags": [
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            },
            {
                "name": "Heap (Priority Queue)",
                "slug": "heap-priority-queue"
            }
        ],
        "companyNames": [
            "tiktok",
            "microsoft",
            "adobe",
            "amazon"
        ],
        "frequencyCount": 4,
        "url": "https://leetcode.com/problems/longest-happy-string/description"
    },
    "1305": {
        "difficulty": "HARD",
        "id": 1305,
        "questionFrontendId": "1944",
        "title": "Number of Visible People in a Queue",
        "titleSlug": "number-of-visible-people-in-a-queue",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Stack",
                "slug": "stack"
            },
            {
                "name": "Monotonic Stack",
                "slug": "monotonic-stack"
            }
        ],
        "companyNames": [
            "tiktok",
            "microsoft",
            "doordash",
            "google",
            "amazon"
        ],
        "frequencyCount": 5,
        "url": "https://leetcode.com/problems/number-of-visible-people-in-a-queue/description"
    },
    "1457": {
        "difficulty": "HARD",
        "id": 1457,
        "questionFrontendId": "1335",
        "title": "Minimum Difficulty of a Job Schedule",
        "titleSlug": "minimum-difficulty-of-a-job-schedule",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            }
        ],
        "companyNames": [
            "tiktok",
            "bloomberg",
            "apple",
            "adobe",
            "google",
            "amazon"
        ],
        "frequencyCount": 6,
        "url": "https://leetcode.com/problems/minimum-difficulty-of-a-job-schedule/description"
    },
    "1909": {
        "difficulty": "MEDIUM",
        "id": 1909,
        "questionFrontendId": "1762",
        "title": "Buildings With an Ocean View",
        "titleSlug": "buildings-with-an-ocean-view",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Stack",
                "slug": "stack"
            },
            {
                "name": "Monotonic Stack",
                "slug": "monotonic-stack"
            }
        ],
        "companyNames": [
            "tiktok",
            "microsoft",
            "amazon"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/buildings-with-an-ocean-view/description"
    },
    "1972": {
        "difficulty": "MEDIUM",
        "id": 1972,
        "questionFrontendId": "1861",
        "title": "Rotating the Box",
        "titleSlug": "rotating-the-box",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Two Pointers",
                "slug": "two-pointers"
            },
            {
                "name": "Matrix",
                "slug": "matrix"
            }
        ],
        "companyNames": [
            "tiktok",
            "adobe"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/rotating-the-box/description"
    },
    "2047": {
        "difficulty": "MEDIUM",
        "id": 2047,
        "questionFrontendId": "1901",
        "title": "Find a Peak Element II",
        "titleSlug": "find-a-peak-element-ii",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Binary Search",
                "slug": "binary-search"
            },
            {
                "name": "Matrix",
                "slug": "matrix"
            }
        ],
        "companyNames": [
            "tiktok",
            "bloomberg",
            "apple",
            "adobe",
            "google",
            "amazon"
        ],
        "frequencyCount": 6,
        "url": "https://leetcode.com/problems/find-a-peak-element-ii/description"
    },
    "2210": {
        "difficulty": "EASY",
        "id": 2210,
        "questionFrontendId": "2089",
        "title": "Find Target Indices After Sorting Array",
        "titleSlug": "find-target-indices-after-sorting-array",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Binary Search",
                "slug": "binary-search"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ],
        "companyNames": [
            "tiktok",
            "apple",
            "google",
            "amazon"
        ],
        "frequencyCount": 4,
        "url": "https://leetcode.com/problems/find-target-indices-after-sorting-array/description"
    },
    "2227": {
        "difficulty": "MEDIUM",
        "id": 2227,
        "questionFrontendId": "2104",
        "title": "Sum of Subarray Ranges",
        "titleSlug": "sum-of-subarray-ranges",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Stack",
                "slug": "stack"
            },
            {
                "name": "Monotonic Stack",
                "slug": "monotonic-stack"
            }
        ],
        "companyNames": [
            "tiktok",
            "microsoft",
            "bloomberg",
            "apple",
            "google",
            "amazon"
        ],
        "frequencyCount": 6,
        "url": "https://leetcode.com/problems/sum-of-subarray-ranges/description"
    },
    "2255": {
        "difficulty": "MEDIUM",
        "id": 2255,
        "questionFrontendId": "2134",
        "title": "Minimum Swaps to Group All 1's Together II",
        "titleSlug": "minimum-swaps-to-group-all-1s-together-ii",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Sliding Window",
                "slug": "sliding-window"
            }
        ],
        "companyNames": [
            "tiktok",
            "bloomberg",
            "google",
            "amazon"
        ],
        "frequencyCount": 4,
        "url": "https://leetcode.com/problems/minimum-swaps-to-group-all-1s-together-ii/description"
    },
    "2505": {
        "difficulty": "HARD",
        "id": 2505,
        "questionFrontendId": "2421",
        "title": "Number of Good Paths",
        "titleSlug": "number-of-good-paths",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Tree",
                "slug": "tree"
            },
            {
                "name": "Union Find",
                "slug": "union-find"
            },
            {
                "name": "Graph",
                "slug": "graph"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ],
        "companyNames": [
            "tiktok",
            "adobe",
            "google",
            "amazon"
        ],
        "frequencyCount": 4,
        "url": "https://leetcode.com/problems/number-of-good-paths/description"
    },
    "2743": {
        "difficulty": "MEDIUM",
        "id": 2743,
        "questionFrontendId": "2627",
        "title": "Debounce",
        "titleSlug": "debounce",
        "topicTags": [],
        "companyNames": [
            "tiktok",
            "apple",
            "google",
            "amazon"
        ],
        "frequencyCount": 4,
        "url": "https://leetcode.com/problems/debounce/description"
    },
    "2765": {
        "difficulty": "HARD",
        "id": 2765,
        "questionFrontendId": "2659",
        "title": "Make Array Empty",
        "titleSlug": "make-array-empty",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Binary Search",
                "slug": "binary-search"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            },
            {
                "name": "Binary Indexed Tree",
                "slug": "binary-indexed-tree"
            },
            {
                "name": "Segment Tree",
                "slug": "segment-tree"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            },
            {
                "name": "Ordered Set",
                "slug": "ordered-set"
            }
        ],
        "companyNames": [
            "tiktok",
            "adobe"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/make-array-empty/description"
    },
    "252": {
        "difficulty": "EASY",
        "id": 252,
        "questionFrontendId": "252",
        "title": "Meeting Rooms",
        "titleSlug": "meeting-rooms",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ],
        "companyNames": [
            "tiktok",
            "microsoft",
            "oracle",
            "apple",
            "adobe",
            "google",
            "amazon"
        ],
        "frequencyCount": 7,
        "url": "https://leetcode.com/problems/meeting-rooms/description"
    },
    "307": {
        "difficulty": "MEDIUM",
        "id": 307,
        "questionFrontendId": "307",
        "title": "Range Sum Query - Mutable",
        "titleSlug": "range-sum-query-mutable",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Design",
                "slug": "design"
            },
            {
                "name": "Binary Indexed Tree",
                "slug": "binary-indexed-tree"
            },
            {
                "name": "Segment Tree",
                "slug": "segment-tree"
            }
        ],
        "companyNames": [
            "tiktok",
            "bloomberg",
            "google"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/range-sum-query-mutable/description"
    },
    "317": {
        "difficulty": "HARD",
        "id": 317,
        "questionFrontendId": "317",
        "title": "Shortest Distance from All Buildings",
        "titleSlug": "shortest-distance-from-all-buildings",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Breadth-First Search",
                "slug": "breadth-first-search"
            },
            {
                "name": "Matrix",
                "slug": "matrix"
            }
        ],
        "companyNames": [
            "tiktok",
            "doordash",
            "google",
            "amazon"
        ],
        "frequencyCount": 4,
        "url": "https://leetcode.com/problems/shortest-distance-from-all-buildings/description"
    },
    "472": {
        "difficulty": "HARD",
        "id": 472,
        "questionFrontendId": "472",
        "title": "Concatenated Words",
        "titleSlug": "concatenated-words",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Trie",
                "slug": "trie"
            }
        ],
        "companyNames": [
            "tiktok",
            "microsoft",
            "bloomberg",
            "apple",
            "google",
            "amazon"
        ],
        "frequencyCount": 6,
        "url": "https://leetcode.com/problems/concatenated-words/description"
    },
    "539": {
        "difficulty": "MEDIUM",
        "id": 539,
        "questionFrontendId": "539",
        "title": "Minimum Time Difference",
        "titleSlug": "minimum-time-difference",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ],
        "companyNames": [
            "tiktok",
            "microsoft",
            "bloomberg",
            "adobe",
            "google",
            "amazon"
        ],
        "frequencyCount": 6,
        "url": "https://leetcode.com/problems/minimum-time-difference/description"
    },
    "547": {
        "difficulty": "MEDIUM",
        "id": 547,
        "questionFrontendId": "547",
        "title": "Number of Provinces",
        "titleSlug": "number-of-provinces",
        "topicTags": [
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Breadth-First Search",
                "slug": "breadth-first-search"
            },
            {
                "name": "Union Find",
                "slug": "union-find"
            },
            {
                "name": "Graph",
                "slug": "graph"
            }
        ],
        "companyNames": [
            "tiktok",
            "bloomberg",
            "apple",
            "adobe",
            "doordash",
            "google",
            "amazon"
        ],
        "frequencyCount": 7,
        "url": "https://leetcode.com/problems/number-of-provinces/description"
    },
    "779": {
        "difficulty": "HARD",
        "id": 779,
        "questionFrontendId": "768",
        "title": "Max Chunks To Make Sorted II",
        "titleSlug": "max-chunks-to-make-sorted-ii",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Stack",
                "slug": "stack"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            },
            {
                "name": "Monotonic Stack",
                "slug": "monotonic-stack"
            }
        ],
        "companyNames": [
            "tiktok",
            "apple",
            "google"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/max-chunks-to-make-sorted-ii/description"
    },
    "853": {
        "difficulty": "MEDIUM",
        "id": 853,
        "questionFrontendId": "826",
        "title": "Most Profit Assigning Work",
        "titleSlug": "most-profit-assigning-work",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Two Pointers",
                "slug": "two-pointers"
            },
            {
                "name": "Binary Search",
                "slug": "binary-search"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ],
        "companyNames": [
            "tiktok",
            "microsoft",
            "bloomberg",
            "doordash",
            "google",
            "amazon"
        ],
        "frequencyCount": 6,
        "url": "https://leetcode.com/problems/most-profit-assigning-work/description"
    },
    "869": {
        "difficulty": "HARD",
        "id": 869,
        "questionFrontendId": "839",
        "title": "Similar String Groups",
        "titleSlug": "similar-string-groups",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Breadth-First Search",
                "slug": "breadth-first-search"
            },
            {
                "name": "Union Find",
                "slug": "union-find"
            }
        ],
        "companyNames": [
            "tiktok",
            "bloomberg",
            "apple",
            "adobe",
            "google",
            "amazon"
        ],
        "frequencyCount": 6,
        "url": "https://leetcode.com/problems/similar-string-groups/description"
    },
    "883": {
        "difficulty": "MEDIUM",
        "id": 883,
        "questionFrontendId": "853",
        "title": "Car Fleet",
        "titleSlug": "car-fleet",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Stack",
                "slug": "stack"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            },
            {
                "name": "Monotonic Stack",
                "slug": "monotonic-stack"
            }
        ],
        "companyNames": [
            "tiktok",
            "microsoft",
            "bloomberg",
            "apple",
            "adobe",
            "google",
            "amazon"
        ],
        "frequencyCount": 7,
        "url": "https://leetcode.com/problems/car-fleet/description"
    },
    "931": {
        "difficulty": "HARD",
        "id": 931,
        "questionFrontendId": "895",
        "title": "Maximum Frequency Stack",
        "titleSlug": "maximum-frequency-stack",
        "topicTags": [
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Stack",
                "slug": "stack"
            },
            {
                "name": "Design",
                "slug": "design"
            },
            {
                "name": "Ordered Set",
                "slug": "ordered-set"
            }
        ],
        "companyNames": [
            "tiktok",
            "microsoft",
            "bloomberg",
            "adobe",
            "amazon"
        ],
        "frequencyCount": 5,
        "url": "https://leetcode.com/problems/maximum-frequency-stack/description"
    },
    "972": {
        "difficulty": "MEDIUM",
        "id": 972,
        "questionFrontendId": "935",
        "title": "Knight Dialer",
        "titleSlug": "knight-dialer",
        "topicTags": [
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            }
        ],
        "companyNames": [
            "tiktok",
            "microsoft",
            "bloomberg",
            "adobe",
            "google",
            "amazon"
        ],
        "frequencyCount": 6,
        "url": "https://leetcode.com/problems/knight-dialer/description"
    },
    "1022": {
        "difficulty": "HARD",
        "id": 1022,
        "questionFrontendId": "980",
        "title": "Unique Paths III",
        "titleSlug": "unique-paths-iii",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Backtracking",
                "slug": "backtracking"
            },
            {
                "name": "Bit Manipulation",
                "slug": "bit-manipulation"
            },
            {
                "name": "Matrix",
                "slug": "matrix"
            }
        ],
        "companyNames": [
            "tiktok",
            "bloomberg",
            "adobe",
            "google",
            "amazon"
        ],
        "frequencyCount": 5,
        "url": "https://leetcode.com/problems/unique-paths-iii/description"
    },
    "1029": {
        "difficulty": "HARD",
        "id": 1029,
        "questionFrontendId": "987",
        "title": "Vertical Order Traversal of a Binary Tree",
        "titleSlug": "vertical-order-traversal-of-a-binary-tree",
        "topicTags": [
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Tree",
                "slug": "tree"
            },
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Breadth-First Search",
                "slug": "breadth-first-search"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            },
            {
                "name": "Binary Tree",
                "slug": "binary-tree"
            }
        ],
        "companyNames": [
            "tiktok",
            "microsoft",
            "oracle",
            "bloomberg",
            "apple",
            "adobe",
            "doordash",
            "google",
            "amazon"
        ],
        "frequencyCount": 9,
        "url": "https://leetcode.com/problems/vertical-order-traversal-of-a-binary-tree/description"
    },
    "1060": {
        "difficulty": "MEDIUM",
        "id": 1060,
        "questionFrontendId": "1062",
        "title": "Longest Repeating Substring",
        "titleSlug": "longest-repeating-substring",
        "topicTags": [
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Binary Search",
                "slug": "binary-search"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Rolling Hash",
                "slug": "rolling-hash"
            },
            {
                "name": "Suffix Array",
                "slug": "suffix-array"
            },
            {
                "name": "Hash Function",
                "slug": "hash-function"
            }
        ],
        "companyNames": [
            "tiktok",
            "google",
            "amazon"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/longest-repeating-substring/description"
    },
    "1124": {
        "difficulty": "HARD",
        "id": 1124,
        "questionFrontendId": "1153",
        "title": "String Transforms Into Another String",
        "titleSlug": "string-transforms-into-another-string",
        "topicTags": [
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "String",
                "slug": "string"
            }
        ],
        "companyNames": [
            "tiktok",
            "google"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/string-transforms-into-another-string/description"
    },
    "1207": {
        "difficulty": "MEDIUM",
        "id": 1207,
        "questionFrontendId": "1110",
        "title": "Delete Nodes And Return Forest",
        "titleSlug": "delete-nodes-and-return-forest",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Tree",
                "slug": "tree"
            },
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Binary Tree",
                "slug": "binary-tree"
            }
        ],
        "companyNames": [
            "tiktok",
            "apple",
            "google",
            "amazon"
        ],
        "frequencyCount": 4,
        "url": "https://leetcode.com/problems/delete-nodes-and-return-forest/description"
    },
    "1398": {
        "difficulty": "HARD",
        "id": 1398,
        "questionFrontendId": "1269",
        "title": "Number of Ways to Stay in the Same Place After Some Steps",
        "titleSlug": "number-of-ways-to-stay-in-the-same-place-after-some-steps",
        "topicTags": [
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            }
        ],
        "companyNames": [
            "tiktok",
            "google",
            "amazon"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/number-of-ways-to-stay-in-the-same-place-after-some-steps/description"
    },
    "1460": {
        "difficulty": "MEDIUM",
        "id": 1460,
        "questionFrontendId": "1358",
        "title": "Number of Substrings Containing All Three Characters",
        "titleSlug": "number-of-substrings-containing-all-three-characters",
        "topicTags": [
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Sliding Window",
                "slug": "sliding-window"
            }
        ],
        "companyNames": [
            "tiktok",
            "bloomberg",
            "adobe",
            "google",
            "amazon"
        ],
        "frequencyCount": 5,
        "url": "https://leetcode.com/problems/number-of-substrings-containing-all-three-characters/description"
    },
    "1605": {
        "difficulty": "MEDIUM",
        "id": 1605,
        "questionFrontendId": "1482",
        "title": "Minimum Number of Days to Make m Bouquets",
        "titleSlug": "minimum-number-of-days-to-make-m-bouquets",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Binary Search",
                "slug": "binary-search"
            }
        ],
        "companyNames": [
            "tiktok",
            "microsoft",
            "bloomberg",
            "adobe",
            "google",
            "amazon"
        ],
        "frequencyCount": 6,
        "url": "https://leetcode.com/problems/minimum-number-of-days-to-make-m-bouquets/description"
    },
    "1678": {
        "difficulty": "MEDIUM",
        "id": 1678,
        "questionFrontendId": "1573",
        "title": "Number of Ways to Split a String",
        "titleSlug": "number-of-ways-to-split-a-string",
        "topicTags": [
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "String",
                "slug": "string"
            }
        ],
        "companyNames": [
            "tiktok",
            "microsoft",
            "bloomberg"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/number-of-ways-to-split-a-string/description"
    },
    "1687": {
        "difficulty": "HARD",
        "id": 1687,
        "questionFrontendId": "1548",
        "title": "The Most Similar Path in a Graph",
        "titleSlug": "the-most-similar-path-in-a-graph",
        "topicTags": [
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Graph",
                "slug": "graph"
            }
        ],
        "companyNames": [
            "tiktok",
            "google"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/the-most-similar-path-in-a-graph/description"
    },
    "1702": {
        "difficulty": "MEDIUM",
        "id": 1702,
        "questionFrontendId": "1555",
        "title": "Bank Account Summary",
        "titleSlug": "bank-account-summary",
        "topicTags": [
            {
                "name": "Database",
                "slug": "database"
            }
        ],
        "companyNames": [
            "tiktok"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/bank-account-summary/description"
    },
    "1713": {
        "difficulty": "MEDIUM",
        "id": 1713,
        "questionFrontendId": "1570",
        "title": "Dot Product of Two Sparse Vectors",
        "titleSlug": "dot-product-of-two-sparse-vectors",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Two Pointers",
                "slug": "two-pointers"
            },
            {
                "name": "Design",
                "slug": "design"
            }
        ],
        "companyNames": [
            "tiktok",
            "microsoft",
            "bloomberg",
            "apple",
            "nvidia",
            "amazon"
        ],
        "frequencyCount": 6,
        "url": "https://leetcode.com/problems/dot-product-of-two-sparse-vectors/description"
    },
    "1770": {
        "difficulty": "MEDIUM",
        "id": 1770,
        "questionFrontendId": "1647",
        "title": "Minimum Deletions to Make Character Frequencies Unique",
        "titleSlug": "minimum-deletions-to-make-character-frequencies-unique",
        "topicTags": [
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ],
        "companyNames": [
            "tiktok",
            "microsoft",
            "adobe",
            "cisco",
            "google",
            "amazon"
        ],
        "frequencyCount": 6,
        "url": "https://leetcode.com/problems/minimum-deletions-to-make-character-frequencies-unique/description"
    },
    "1825": {
        "difficulty": "HARD",
        "id": 1825,
        "questionFrontendId": "1723",
        "title": "Find Minimum Time to Finish All Jobs",
        "titleSlug": "find-minimum-time-to-finish-all-jobs",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Backtracking",
                "slug": "backtracking"
            },
            {
                "name": "Bit Manipulation",
                "slug": "bit-manipulation"
            },
            {
                "name": "Bitmask",
                "slug": "bitmask"
            }
        ],
        "companyNames": [
            "tiktok",
            "microsoft",
            "google",
            "amazon"
        ],
        "frequencyCount": 4,
        "url": "https://leetcode.com/problems/find-minimum-time-to-finish-all-jobs/description"
    },
    "2035": {
        "difficulty": "MEDIUM",
        "id": 2035,
        "questionFrontendId": "1905",
        "title": "Count Sub Islands",
        "titleSlug": "count-sub-islands",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Breadth-First Search",
                "slug": "breadth-first-search"
            },
            {
                "name": "Union Find",
                "slug": "union-find"
            },
            {
                "name": "Matrix",
                "slug": "matrix"
            }
        ],
        "companyNames": [
            "tiktok",
            "bloomberg",
            "doordash",
            "amazon"
        ],
        "frequencyCount": 4,
        "url": "https://leetcode.com/problems/count-sub-islands/description"
    },
    "2039": {
        "difficulty": "MEDIUM",
        "id": 2039,
        "questionFrontendId": "1927",
        "title": "Sum Game",
        "titleSlug": "sum-game",
        "topicTags": [
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            },
            {
                "name": "Game Theory",
                "slug": "game-theory"
            }
        ],
        "companyNames": [
            "tiktok"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/sum-game/description"
    },
    "2504": {
        "difficulty": "MEDIUM",
        "id": 2504,
        "questionFrontendId": "2420",
        "title": "Find All Good Indices",
        "titleSlug": "find-all-good-indices",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Prefix Sum",
                "slug": "prefix-sum"
            }
        ],
        "companyNames": [
            "tiktok",
            "goldman_sachs",
            "amazon"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/find-all-good-indices/description"
    },
    "2657": {
        "difficulty": "HARD",
        "id": 2657,
        "questionFrontendId": "2589",
        "title": "Minimum Time to Complete All Tasks",
        "titleSlug": "minimum-time-to-complete-all-tasks",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Binary Search",
                "slug": "binary-search"
            },
            {
                "name": "Stack",
                "slug": "stack"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ],
        "companyNames": [
            "tiktok",
            "apple",
            "google"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/minimum-time-to-complete-all-tasks/description"
    },
    "2682": {
        "difficulty": "HARD",
        "id": 2682,
        "questionFrontendId": "2552",
        "title": "Count Increasing Quadruplets",
        "titleSlug": "count-increasing-quadruplets",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Binary Indexed Tree",
                "slug": "binary-indexed-tree"
            },
            {
                "name": "Enumeration",
                "slug": "enumeration"
            },
            {
                "name": "Prefix Sum",
                "slug": "prefix-sum"
            }
        ],
        "companyNames": [
            "tiktok",
            "google"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/count-increasing-quadruplets/description"
    },
    "2807": {
        "difficulty": "MEDIUM",
        "id": 2807,
        "questionFrontendId": "2721",
        "title": "Execute Asynchronous Functions in Parallel",
        "titleSlug": "execute-asynchronous-functions-in-parallel",
        "topicTags": [],
        "companyNames": [
            "tiktok",
            "amazon"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/execute-asynchronous-functions-in-parallel/description"
    },
    "2853": {
        "difficulty": "HARD",
        "id": 2853,
        "questionFrontendId": "2701",
        "title": "Consecutive Transactions with Increasing Amounts",
        "titleSlug": "consecutive-transactions-with-increasing-amounts",
        "topicTags": [
            {
                "name": "Database",
                "slug": "database"
            }
        ],
        "companyNames": [
            "tiktok",
            "amazon"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/consecutive-transactions-with-increasing-amounts/description"
    },
    "2905": {
        "difficulty": "HARD",
        "id": 2905,
        "questionFrontendId": "2791",
        "title": "Count Paths That Can Form a Palindrome in a Tree",
        "titleSlug": "count-paths-that-can-form-a-palindrome-in-a-tree",
        "topicTags": [
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Bit Manipulation",
                "slug": "bit-manipulation"
            },
            {
                "name": "Tree",
                "slug": "tree"
            },
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Bitmask",
                "slug": "bitmask"
            }
        ],
        "companyNames": [
            "tiktok"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/count-paths-that-can-form-a-palindrome-in-a-tree/description"
    },
    "3092": {
        "difficulty": "MEDIUM",
        "id": 3092,
        "questionFrontendId": "2850",
        "title": "Minimum Moves to Spread Stones Over Grid",
        "titleSlug": "minimum-moves-to-spread-stones-over-grid",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Breadth-First Search",
                "slug": "breadth-first-search"
            },
            {
                "name": "Matrix",
                "slug": "matrix"
            }
        ],
        "companyNames": [
            "tiktok",
            "microsoft",
            "amazon"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/minimum-moves-to-spread-stones-over-grid/description"
    },
    "3158": {
        "difficulty": "MEDIUM",
        "id": 3158,
        "questionFrontendId": "2863",
        "title": "Maximum Length of Semi-Decreasing Subarrays",
        "titleSlug": "maximum-length-of-semi-decreasing-subarrays",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Stack",
                "slug": "stack"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            },
            {
                "name": "Monotonic Stack",
                "slug": "monotonic-stack"
            }
        ],
        "companyNames": [
            "tiktok",
            "google"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/maximum-length-of-semi-decreasing-subarrays/description"
    },
    "273": {
        "difficulty": "HARD",
        "id": 273,
        "questionFrontendId": "273",
        "title": "Integer to English Words",
        "titleSlug": "integer-to-english-words",
        "topicTags": [
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Recursion",
                "slug": "recursion"
            }
        ],
        "companyNames": [
            "microsoft",
            "oracle",
            "goldman_sachs",
            "bloomberg",
            "apple",
            "adobe",
            "tcs",
            "accenture",
            "doordash",
            "google",
            "amazon"
        ],
        "frequencyCount": 11,
        "url": "https://leetcode.com/problems/integer-to-english-words/description"
    },
    "116": {
        "difficulty": "MEDIUM",
        "id": 116,
        "questionFrontendId": "116",
        "title": "Populating Next Right Pointers in Each Node",
        "titleSlug": "populating-next-right-pointers-in-each-node",
        "topicTags": [
            {
                "name": "Linked List",
                "slug": "linked-list"
            },
            {
                "name": "Tree",
                "slug": "tree"
            },
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Breadth-First Search",
                "slug": "breadth-first-search"
            },
            {
                "name": "Binary Tree",
                "slug": "binary-tree"
            }
        ],
        "companyNames": [
            "microsoft",
            "oracle",
            "bloomberg",
            "apple",
            "adobe",
            "walmart_labs",
            "google",
            "amazon"
        ],
        "frequencyCount": 8,
        "url": "https://leetcode.com/problems/populating-next-right-pointers-in-each-node/description"
    },
    "237": {
        "difficulty": "MEDIUM",
        "id": 237,
        "questionFrontendId": "237",
        "title": "Delete Node in a Linked List",
        "titleSlug": "delete-node-in-a-linked-list",
        "topicTags": [
            {
                "name": "Linked List",
                "slug": "linked-list"
            }
        ],
        "companyNames": [
            "microsoft",
            "oracle",
            "bloomberg",
            "apple",
            "adobe",
            "nvidia",
            "google",
            "amazon"
        ],
        "frequencyCount": 8,
        "url": "https://leetcode.com/problems/delete-node-in-a-linked-list/description"
    },
    "2364": {
        "difficulty": "HARD",
        "id": 2364,
        "questionFrontendId": "2246",
        "title": "Longest Path With Different Adjacent Characters",
        "titleSlug": "longest-path-with-different-adjacent-characters",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Tree",
                "slug": "tree"
            },
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Graph",
                "slug": "graph"
            },
            {
                "name": "Topological Sort",
                "slug": "topological-sort"
            }
        ],
        "companyNames": [
            "microsoft",
            "google",
            "amazon"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/longest-path-with-different-adjacent-characters/description"
    },
    "2475": {
        "difficulty": "MEDIUM",
        "id": 2475,
        "questionFrontendId": "2384",
        "title": "Largest Palindromic Number",
        "titleSlug": "largest-palindromic-number",
        "topicTags": [
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            },
            {
                "name": "Counting",
                "slug": "counting"
            }
        ],
        "companyNames": [
            "microsoft",
            "bloomberg",
            "amazon"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/largest-palindromic-number/description"
    },
    "285": {
        "difficulty": "MEDIUM",
        "id": 285,
        "questionFrontendId": "285",
        "title": "Inorder Successor in BST",
        "titleSlug": "inorder-successor-in-bst",
        "topicTags": [
            {
                "name": "Tree",
                "slug": "tree"
            },
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Binary Search Tree",
                "slug": "binary-search-tree"
            },
            {
                "name": "Binary Tree",
                "slug": "binary-tree"
            }
        ],
        "companyNames": [
            "microsoft",
            "apple"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/inorder-successor-in-bst/description"
    },
    "2155": {
        "difficulty": "MEDIUM",
        "id": 2155,
        "questionFrontendId": "2028",
        "title": "Find Missing Observations",
        "titleSlug": "find-missing-observations",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Simulation",
                "slug": "simulation"
            }
        ],
        "companyNames": [
            "microsoft",
            "amazon"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/find-missing-observations/description"
    },
    "419": {
        "difficulty": "MEDIUM",
        "id": 419,
        "questionFrontendId": "419",
        "title": "Battleships in a Board",
        "titleSlug": "battleships-in-a-board",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Matrix",
                "slug": "matrix"
            }
        ],
        "companyNames": [
            "microsoft",
            "google",
            "amazon"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/battleships-in-a-board/description"
    },
    "1428": {
        "difficulty": "MEDIUM",
        "id": 1428,
        "questionFrontendId": "1306",
        "title": "Jump Game III",
        "titleSlug": "jump-game-iii",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Breadth-First Search",
                "slug": "breadth-first-search"
            }
        ],
        "companyNames": [
            "microsoft",
            "goldman_sachs",
            "google"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/jump-game-iii/description"
    },
    "1487": {
        "difficulty": "MEDIUM",
        "id": 1487,
        "questionFrontendId": "1386",
        "title": "Cinema Seat Allocation",
        "titleSlug": "cinema-seat-allocation",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            },
            {
                "name": "Bit Manipulation",
                "slug": "bit-manipulation"
            }
        ],
        "companyNames": [
            "microsoft",
            "google",
            "amazon"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/cinema-seat-allocation/description"
    },
    "1950": {
        "difficulty": "EASY",
        "id": 1950,
        "questionFrontendId": "1822",
        "title": "Sign of the Product of an Array",
        "titleSlug": "sign-of-the-product-of-an-array",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Math",
                "slug": "math"
            }
        ],
        "companyNames": [
            "microsoft",
            "apple",
            "adobe",
            "google",
            "amazon"
        ],
        "frequencyCount": 5,
        "url": "https://leetcode.com/problems/sign-of-the-product-of-an-array/description"
    },
    "2487": {
        "difficulty": "MEDIUM",
        "id": 2487,
        "questionFrontendId": "2405",
        "title": "Optimal Partition of String",
        "titleSlug": "optimal-partition-of-string",
        "topicTags": [
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            }
        ],
        "companyNames": [
            "microsoft",
            "bloomberg",
            "adobe",
            "google",
            "amazon"
        ],
        "frequencyCount": 5,
        "url": "https://leetcode.com/problems/optimal-partition-of-string/description"
    },
    "1360": {
        "difficulty": "MEDIUM",
        "id": 1360,
        "questionFrontendId": "1239",
        "title": "Maximum Length of a Concatenated String with Unique Characters",
        "titleSlug": "maximum-length-of-a-concatenated-string-with-unique-characters",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Backtracking",
                "slug": "backtracking"
            },
            {
                "name": "Bit Manipulation",
                "slug": "bit-manipulation"
            }
        ],
        "companyNames": [
            "microsoft",
            "apple",
            "adobe",
            "google",
            "amazon"
        ],
        "frequencyCount": 5,
        "url": "https://leetcode.com/problems/maximum-length-of-a-concatenated-string-with-unique-characters/description"
    },
    "1642": {
        "difficulty": "EASY",
        "id": 1642,
        "questionFrontendId": "1518",
        "title": "Water Bottles",
        "titleSlug": "water-bottles",
        "topicTags": [
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Simulation",
                "slug": "simulation"
            }
        ],
        "companyNames": [
            "microsoft",
            "bloomberg",
            "adobe",
            "amazon"
        ],
        "frequencyCount": 4,
        "url": "https://leetcode.com/problems/water-bottles/description"
    },
    "3318": {
        "difficulty": "MEDIUM",
        "id": 3318,
        "questionFrontendId": "3040",
        "title": "Maximum Number of Operations With the Same Score II",
        "titleSlug": "maximum-number-of-operations-with-the-same-score-ii",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Memoization",
                "slug": "memoization"
            }
        ],
        "companyNames": [
            "microsoft",
            "apple"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/maximum-number-of-operations-with-the-same-score-ii/description"
    },
    "722": {
        "difficulty": "MEDIUM",
        "id": 722,
        "questionFrontendId": "722",
        "title": "Remove Comments",
        "titleSlug": "remove-comments",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "String",
                "slug": "string"
            }
        ],
        "companyNames": [
            "microsoft",
            "apple",
            "google"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/remove-comments/description"
    },
    "1356": {
        "difficulty": "HARD",
        "id": 1356,
        "questionFrontendId": "2193",
        "title": "Minimum Number of Moves to Make Palindrome",
        "titleSlug": "minimum-number-of-moves-to-make-palindrome",
        "topicTags": [
            {
                "name": "Two Pointers",
                "slug": "two-pointers"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            },
            {
                "name": "Binary Indexed Tree",
                "slug": "binary-indexed-tree"
            }
        ],
        "companyNames": [
            "microsoft",
            "google",
            "amazon"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/minimum-number-of-moves-to-make-palindrome/description"
    },
    "1630": {
        "difficulty": "EASY",
        "id": 1630,
        "questionFrontendId": "1523",
        "title": "Count Odd Numbers in an Interval Range",
        "titleSlug": "count-odd-numbers-in-an-interval-range",
        "topicTags": [
            {
                "name": "Math",
                "slug": "math"
            }
        ],
        "companyNames": [
            "microsoft",
            "apple",
            "adobe",
            "accenture",
            "google",
            "amazon"
        ],
        "frequencyCount": 6,
        "url": "https://leetcode.com/problems/count-odd-numbers-in-an-interval-range/description"
    },
    "1738": {
        "difficulty": "MEDIUM",
        "id": 1738,
        "questionFrontendId": "1615",
        "title": "Maximal Network Rank",
        "titleSlug": "maximal-network-rank",
        "topicTags": [
            {
                "name": "Graph",
                "slug": "graph"
            }
        ],
        "companyNames": [
            "microsoft",
            "bloomberg",
            "apple",
            "adobe",
            "google"
        ],
        "frequencyCount": 5,
        "url": "https://leetcode.com/problems/maximal-network-rank/description"
    },
    "1756": {
        "difficulty": "MEDIUM",
        "id": 1756,
        "questionFrontendId": "1653",
        "title": "Minimum Deletions to Make String Balanced",
        "titleSlug": "minimum-deletions-to-make-string-balanced",
        "topicTags": [
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Stack",
                "slug": "stack"
            }
        ],
        "companyNames": [
            "microsoft",
            "bloomberg",
            "google",
            "amazon"
        ],
        "frequencyCount": 4,
        "url": "https://leetcode.com/problems/minimum-deletions-to-make-string-balanced/description"
    },
    "106": {
        "difficulty": "MEDIUM",
        "id": 106,
        "questionFrontendId": "106",
        "title": "Construct Binary Tree from Inorder and Postorder Traversal",
        "titleSlug": "construct-binary-tree-from-inorder-and-postorder-traversal",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Divide and Conquer",
                "slug": "divide-and-conquer"
            },
            {
                "name": "Tree",
                "slug": "tree"
            },
            {
                "name": "Binary Tree",
                "slug": "binary-tree"
            }
        ],
        "companyNames": [
            "microsoft",
            "bloomberg",
            "adobe",
            "google",
            "amazon"
        ],
        "frequencyCount": 5,
        "url": "https://leetcode.com/problems/construct-binary-tree-from-inorder-and-postorder-traversal/description"
    },
    "452": {
        "difficulty": "MEDIUM",
        "id": 452,
        "questionFrontendId": "452",
        "title": "Minimum Number of Arrows to Burst Balloons",
        "titleSlug": "minimum-number-of-arrows-to-burst-balloons",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ],
        "companyNames": [
            "microsoft",
            "goldman_sachs",
            "bloomberg",
            "apple",
            "adobe",
            "google",
            "amazon"
        ],
        "frequencyCount": 7,
        "url": "https://leetcode.com/problems/minimum-number-of-arrows-to-burst-balloons/description"
    },
    "650": {
        "difficulty": "MEDIUM",
        "id": 650,
        "questionFrontendId": "650",
        "title": "2 Keys Keyboard",
        "titleSlug": "2-keys-keyboard",
        "topicTags": [
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            }
        ],
        "companyNames": [
            "microsoft",
            "bloomberg",
            "google",
            "amazon"
        ],
        "frequencyCount": 4,
        "url": "https://leetcode.com/problems/2-keys-keyboard/description"
    },
    "1426": {
        "difficulty": "EASY",
        "id": 1426,
        "questionFrontendId": "1304",
        "title": "Find N Unique Integers Sum up to Zero",
        "titleSlug": "find-n-unique-integers-sum-up-to-zero",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Math",
                "slug": "math"
            }
        ],
        "companyNames": [
            "microsoft",
            "bloomberg",
            "adobe",
            "amazon"
        ],
        "frequencyCount": 4,
        "url": "https://leetcode.com/problems/find-n-unique-integers-sum-up-to-zero/description"
    },
    "1576": {
        "difficulty": "MEDIUM",
        "id": 1576,
        "questionFrontendId": "1466",
        "title": "Reorder Routes to Make All Paths Lead to the City Zero",
        "titleSlug": "reorder-routes-to-make-all-paths-lead-to-the-city-zero",
        "topicTags": [
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Breadth-First Search",
                "slug": "breadth-first-search"
            },
            {
                "name": "Graph",
                "slug": "graph"
            }
        ],
        "companyNames": [
            "microsoft",
            "bloomberg",
            "google",
            "amazon"
        ],
        "frequencyCount": 4,
        "url": "https://leetcode.com/problems/reorder-routes-to-make-all-paths-lead-to-the-city-zero/description"
    },
    "2471": {
        "difficulty": "MEDIUM",
        "id": 2471,
        "questionFrontendId": "2391",
        "title": "Minimum Amount of Time to Collect Garbage",
        "titleSlug": "minimum-amount-of-time-to-collect-garbage",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Prefix Sum",
                "slug": "prefix-sum"
            }
        ],
        "companyNames": [
            "microsoft",
            "adobe",
            "amazon"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/minimum-amount-of-time-to-collect-garbage/description"
    },
    "2524": {
        "difficulty": "EASY",
        "id": 2524,
        "questionFrontendId": "2441",
        "title": "Largest Positive Integer That Exists With Its Negative",
        "titleSlug": "largest-positive-integer-that-exists-with-its-negative",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Two Pointers",
                "slug": "two-pointers"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ],
        "companyNames": [
            "microsoft",
            "google",
            "amazon"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/largest-positive-integer-that-exists-with-its-negative/description"
    },
    "2634": {
        "difficulty": "EASY",
        "id": 2634,
        "questionFrontendId": "2540",
        "title": "Minimum Common Value",
        "titleSlug": "minimum-common-value",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Two Pointers",
                "slug": "two-pointers"
            },
            {
                "name": "Binary Search",
                "slug": "binary-search"
            }
        ],
        "companyNames": [
            "microsoft",
            "apple",
            "adobe",
            "google",
            "amazon"
        ],
        "frequencyCount": 5,
        "url": "https://leetcode.com/problems/minimum-common-value/description"
    },
    "3315": {
        "difficulty": "HARD",
        "id": 3315,
        "questionFrontendId": "3009",
        "title": "Maximum Number of Intersections on the Chart",
        "titleSlug": "maximum-number-of-intersections-on-the-chart",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Binary Indexed Tree",
                "slug": "binary-indexed-tree"
            },
            {
                "name": "Geometry",
                "slug": "geometry"
            }
        ],
        "companyNames": [
            "microsoft"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/maximum-number-of-intersections-on-the-chart/description"
    },
    "270": {
        "difficulty": "EASY",
        "id": 270,
        "questionFrontendId": "270",
        "title": "Closest Binary Search Tree Value",
        "titleSlug": "closest-binary-search-tree-value",
        "topicTags": [
            {
                "name": "Binary Search",
                "slug": "binary-search"
            },
            {
                "name": "Tree",
                "slug": "tree"
            },
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Binary Search Tree",
                "slug": "binary-search-tree"
            },
            {
                "name": "Binary Tree",
                "slug": "binary-tree"
            }
        ],
        "companyNames": [
            "microsoft",
            "oracle",
            "google",
            "amazon"
        ],
        "frequencyCount": 4,
        "url": "https://leetcode.com/problems/closest-binary-search-tree-value/description"
    },
    "902": {
        "difficulty": "HARD",
        "id": 902,
        "questionFrontendId": "871",
        "title": "Minimum Number of Refueling Stops",
        "titleSlug": "minimum-number-of-refueling-stops",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            },
            {
                "name": "Heap (Priority Queue)",
                "slug": "heap-priority-queue"
            }
        ],
        "companyNames": [
            "microsoft",
            "goldman_sachs",
            "bloomberg",
            "google",
            "amazon"
        ],
        "frequencyCount": 5,
        "url": "https://leetcode.com/problems/minimum-number-of-refueling-stops/description"
    },
    "1072": {
        "difficulty": "MEDIUM",
        "id": 1072,
        "questionFrontendId": "1019",
        "title": "Next Greater Node In Linked List",
        "titleSlug": "next-greater-node-in-linked-list",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Linked List",
                "slug": "linked-list"
            },
            {
                "name": "Stack",
                "slug": "stack"
            },
            {
                "name": "Monotonic Stack",
                "slug": "monotonic-stack"
            }
        ],
        "companyNames": [
            "microsoft",
            "apple",
            "amazon"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/next-greater-node-in-linked-list/description"
    },
    "1465": {
        "difficulty": "MEDIUM",
        "id": 1465,
        "questionFrontendId": "1339",
        "title": "Maximum Product of Splitted Binary Tree",
        "titleSlug": "maximum-product-of-splitted-binary-tree",
        "topicTags": [
            {
                "name": "Tree",
                "slug": "tree"
            },
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Binary Tree",
                "slug": "binary-tree"
            }
        ],
        "companyNames": [
            "microsoft",
            "apple",
            "amazon"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/maximum-product-of-splitted-binary-tree/description"
    },
    "1651": {
        "difficulty": "EASY",
        "id": 1651,
        "questionFrontendId": "1528",
        "title": "Shuffle String",
        "titleSlug": "shuffle-string",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "String",
                "slug": "string"
            }
        ],
        "companyNames": [
            "microsoft",
            "bloomberg",
            "apple",
            "adobe",
            "google",
            "amazon"
        ],
        "frequencyCount": 6,
        "url": "https://leetcode.com/problems/shuffle-string/description"
    },
    "1700": {
        "difficulty": "MEDIUM",
        "id": 1700,
        "questionFrontendId": "1578",
        "title": "Minimum Time to Make Rope Colorful",
        "titleSlug": "minimum-time-to-make-rope-colorful",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            }
        ],
        "companyNames": [
            "microsoft",
            "bloomberg",
            "adobe",
            "google",
            "amazon"
        ],
        "frequencyCount": 5,
        "url": "https://leetcode.com/problems/minimum-time-to-make-rope-colorful/description"
    },
    "1742": {
        "difficulty": "EASY",
        "id": 1742,
        "questionFrontendId": "1637",
        "title": "Widest Vertical Area Between Two Points Containing No Points",
        "titleSlug": "widest-vertical-area-between-two-points-containing-no-points",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ],
        "companyNames": [
            "microsoft",
            "bloomberg",
            "apple",
            "adobe",
            "google",
            "amazon"
        ],
        "frequencyCount": 6,
        "url": "https://leetcode.com/problems/widest-vertical-area-between-two-points-containing-no-points/description"
    },
    "2299": {
        "difficulty": "MEDIUM",
        "id": 2299,
        "questionFrontendId": "2181",
        "title": "Merge Nodes in Between Zeros",
        "titleSlug": "merge-nodes-in-between-zeros",
        "topicTags": [
            {
                "name": "Linked List",
                "slug": "linked-list"
            },
            {
                "name": "Simulation",
                "slug": "simulation"
            }
        ],
        "companyNames": [
            "microsoft",
            "amazon"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/merge-nodes-in-between-zeros/description"
    },
    "2310": {
        "difficulty": "MEDIUM",
        "id": 2310,
        "questionFrontendId": "2208",
        "title": "Minimum Operations to Halve Array Sum",
        "titleSlug": "minimum-operations-to-halve-array-sum",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            },
            {
                "name": "Heap (Priority Queue)",
                "slug": "heap-priority-queue"
            }
        ],
        "companyNames": [
            "microsoft"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/minimum-operations-to-halve-array-sum/description"
    },
    "2568": {
        "difficulty": "MEDIUM",
        "id": 2568,
        "questionFrontendId": "2477",
        "title": "Minimum Fuel Cost to Report to the Capital",
        "titleSlug": "minimum-fuel-cost-to-report-to-the-capital",
        "topicTags": [
            {
                "name": "Tree",
                "slug": "tree"
            },
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Breadth-First Search",
                "slug": "breadth-first-search"
            },
            {
                "name": "Graph",
                "slug": "graph"
            }
        ],
        "companyNames": [
            "microsoft",
            "amazon"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/minimum-fuel-cost-to-report-to-the-capital/description"
    },
    "3239": {
        "difficulty": "MEDIUM",
        "id": 3239,
        "questionFrontendId": "2998",
        "title": "Minimum Number of Operations to Make X and Y Equal",
        "titleSlug": "minimum-number-of-operations-to-make-x-and-y-equal",
        "topicTags": [
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Breadth-First Search",
                "slug": "breadth-first-search"
            },
            {
                "name": "Memoization",
                "slug": "memoization"
            }
        ],
        "companyNames": [
            "microsoft"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/minimum-number-of-operations-to-make-x-and-y-equal/description"
    },
    "3492": {
        "difficulty": "MEDIUM",
        "id": 3492,
        "questionFrontendId": "3212",
        "title": "Count Submatrices With Equal Frequency of X and Y",
        "titleSlug": "count-submatrices-with-equal-frequency-of-x-and-y",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Matrix",
                "slug": "matrix"
            },
            {
                "name": "Prefix Sum",
                "slug": "prefix-sum"
            }
        ],
        "companyNames": [
            "microsoft"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/count-submatrices-with-equal-frequency-of-x-and-y/description"
    },
    "258": {
        "difficulty": "EASY",
        "id": 258,
        "questionFrontendId": "258",
        "title": "Add Digits",
        "titleSlug": "add-digits",
        "topicTags": [
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Simulation",
                "slug": "simulation"
            },
            {
                "name": "Number Theory",
                "slug": "number-theory"
            }
        ],
        "companyNames": [
            "microsoft",
            "bloomberg",
            "apple",
            "adobe",
            "tcs",
            "google",
            "amazon"
        ],
        "frequencyCount": 7,
        "url": "https://leetcode.com/problems/add-digits/description"
    },
    "823": {
        "difficulty": "HARD",
        "id": 823,
        "questionFrontendId": "805",
        "title": "Split Array With Same Average",
        "titleSlug": "split-array-with-same-average",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Bit Manipulation",
                "slug": "bit-manipulation"
            },
            {
                "name": "Bitmask",
                "slug": "bitmask"
            }
        ],
        "companyNames": [
            "microsoft"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/split-array-with-same-average/description"
    },
    "1139": {
        "difficulty": "MEDIUM",
        "id": 1139,
        "questionFrontendId": "1053",
        "title": "Previous Permutation With One Swap",
        "titleSlug": "previous-permutation-with-one-swap",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            }
        ],
        "companyNames": [
            "microsoft"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/previous-permutation-with-one-swap/description"
    },
    "1203": {
        "difficulty": "EASY",
        "id": 1203,
        "questionFrontendId": "1114",
        "title": "Print in Order",
        "titleSlug": "print-in-order",
        "topicTags": [
            {
                "name": "Concurrency",
                "slug": "concurrency"
            }
        ],
        "companyNames": [
            "microsoft",
            "google"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/print-in-order/description"
    },
    "1230": {
        "difficulty": "MEDIUM",
        "id": 1230,
        "questionFrontendId": "1131",
        "title": "Maximum of Absolute Value Expression",
        "titleSlug": "maximum-of-absolute-value-expression",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Math",
                "slug": "math"
            }
        ],
        "companyNames": [
            "microsoft"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/maximum-of-absolute-value-expression/description"
    },
    "1441": {
        "difficulty": "MEDIUM",
        "id": 1441,
        "questionFrontendId": "1318",
        "title": "Minimum Flips to Make a OR b Equal to c",
        "titleSlug": "minimum-flips-to-make-a-or-b-equal-to-c",
        "topicTags": [
            {
                "name": "Bit Manipulation",
                "slug": "bit-manipulation"
            }
        ],
        "companyNames": [
            "microsoft",
            "amazon"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/minimum-flips-to-make-a-or-b-equal-to-c/description"
    },
    "1569": {
        "difficulty": "HARD",
        "id": 1569,
        "questionFrontendId": "1458",
        "title": "Max Dot Product of Two Subsequences",
        "titleSlug": "max-dot-product-of-two-subsequences",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            }
        ],
        "companyNames": [
            "microsoft",
            "bloomberg",
            "google",
            "amazon"
        ],
        "frequencyCount": 4,
        "url": "https://leetcode.com/problems/max-dot-product-of-two-subsequences/description"
    },
    "1617": {
        "difficulty": "HARD",
        "id": 1617,
        "questionFrontendId": "1510",
        "title": "Stone Game IV",
        "titleSlug": "stone-game-iv",
        "topicTags": [
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Game Theory",
                "slug": "game-theory"
            }
        ],
        "companyNames": [
            "microsoft"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/stone-game-iv/description"
    },
    "1618": {
        "difficulty": "EASY",
        "id": 1618,
        "questionFrontendId": "1474",
        "title": "Delete N Nodes After M Nodes of a Linked List",
        "titleSlug": "delete-n-nodes-after-m-nodes-of-a-linked-list",
        "topicTags": [
            {
                "name": "Linked List",
                "slug": "linked-list"
            }
        ],
        "companyNames": [
            "microsoft"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/delete-n-nodes-after-m-nodes-of-a-linked-list/description"
    },
    "1873": {
        "difficulty": "EASY",
        "id": 1873,
        "questionFrontendId": "1763",
        "title": "Longest Nice Substring",
        "titleSlug": "longest-nice-substring",
        "topicTags": [
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Divide and Conquer",
                "slug": "divide-and-conquer"
            },
            {
                "name": "Bit Manipulation",
                "slug": "bit-manipulation"
            },
            {
                "name": "Sliding Window",
                "slug": "sliding-window"
            }
        ],
        "companyNames": [
            "microsoft",
            "google"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/longest-nice-substring/description"
    },
    "1916": {
        "difficulty": "EASY",
        "id": 1916,
        "questionFrontendId": "1791",
        "title": "Find Center of Star Graph",
        "titleSlug": "find-center-of-star-graph",
        "topicTags": [
            {
                "name": "Graph",
                "slug": "graph"
            }
        ],
        "companyNames": [
            "microsoft",
            "amazon"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/find-center-of-star-graph/description"
    },
    "1982": {
        "difficulty": "MEDIUM",
        "id": 1982,
        "questionFrontendId": "1836",
        "title": "Remove Duplicates From an Unsorted Linked List",
        "titleSlug": "remove-duplicates-from-an-unsorted-linked-list",
        "topicTags": [
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Linked List",
                "slug": "linked-list"
            }
        ],
        "companyNames": [
            "microsoft",
            "goldman_sachs"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/remove-duplicates-from-an-unsorted-linked-list/description"
    },
    "1983": {
        "difficulty": "EASY",
        "id": 1983,
        "questionFrontendId": "1854",
        "title": "Maximum Population Year",
        "titleSlug": "maximum-population-year",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Counting",
                "slug": "counting"
            },
            {
                "name": "Prefix Sum",
                "slug": "prefix-sum"
            }
        ],
        "companyNames": [
            "microsoft",
            "bloomberg",
            "apple",
            "google",
            "amazon"
        ],
        "frequencyCount": 5,
        "url": "https://leetcode.com/problems/maximum-population-year/description"
    },
    "2016": {
        "difficulty": "MEDIUM",
        "id": 2016,
        "questionFrontendId": "1887",
        "title": "Reduction Operations to Make the Array Elements Equal",
        "titleSlug": "reduction-operations-to-make-the-array-elements-equal",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ],
        "companyNames": [
            "microsoft",
            "adobe",
            "amazon"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/reduction-operations-to-make-the-array-elements-equal/description"
    },
    "2033": {
        "difficulty": "MEDIUM",
        "id": 2033,
        "questionFrontendId": "1904",
        "title": "The Number of Full Rounds You Have Played",
        "titleSlug": "the-number-of-full-rounds-you-have-played",
        "topicTags": [
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "String",
                "slug": "string"
            }
        ],
        "companyNames": [
            "microsoft"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/the-number-of-full-rounds-you-have-played/description"
    },
    "2082": {
        "difficulty": "MEDIUM",
        "id": 2082,
        "questionFrontendId": "2052",
        "title": "Minimum Cost to Separate Sentence Into Rows",
        "titleSlug": "minimum-cost-to-separate-sentence-into-rows",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            }
        ],
        "companyNames": [
            "microsoft"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/minimum-cost-to-separate-sentence-into-rows/description"
    },
    "2243": {
        "difficulty": "EASY",
        "id": 2243,
        "questionFrontendId": "2124",
        "title": "Check if All A's Appears Before All B's",
        "titleSlug": "check-if-all-as-appears-before-all-bs",
        "topicTags": [
            {
                "name": "String",
                "slug": "string"
            }
        ],
        "companyNames": [
            "microsoft",
            "amazon"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/check-if-all-as-appears-before-all-bs/description"
    },
    "2308": {
        "difficulty": "EASY",
        "id": 2308,
        "questionFrontendId": "2206",
        "title": "Divide Array Into Equal Pairs",
        "titleSlug": "divide-array-into-equal-pairs",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Bit Manipulation",
                "slug": "bit-manipulation"
            },
            {
                "name": "Counting",
                "slug": "counting"
            }
        ],
        "companyNames": [
            "microsoft"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/divide-array-into-equal-pairs/description"
    },
    "2337": {
        "difficulty": "EASY",
        "id": 2337,
        "questionFrontendId": "2259",
        "title": "Remove Digit From Number to Maximize Result",
        "titleSlug": "remove-digit-from-number-to-maximize-result",
        "topicTags": [
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            },
            {
                "name": "Enumeration",
                "slug": "enumeration"
            }
        ],
        "companyNames": [
            "microsoft",
            "google",
            "amazon"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/remove-digit-from-number-to-maximize-result/description"
    },
    "2823": {
        "difficulty": "MEDIUM",
        "id": 2823,
        "questionFrontendId": "2664",
        "title": "The Knight\u2019s Tour",
        "titleSlug": "the-knights-tour",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Backtracking",
                "slug": "backtracking"
            },
            {
                "name": "Matrix",
                "slug": "matrix"
            }
        ],
        "companyNames": [
            "microsoft"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/the-knights-tour/description"
    },
    "3228": {
        "difficulty": "MEDIUM",
        "id": 3228,
        "questionFrontendId": "3002",
        "title": "Maximum Size of a Set After Removals",
        "titleSlug": "maximum-size-of-a-set-after-removals",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            }
        ],
        "companyNames": [
            "microsoft"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/maximum-size-of-a-set-after-removals/description"
    },
    "3425": {
        "difficulty": "MEDIUM",
        "id": 3425,
        "questionFrontendId": "3119",
        "title": "Maximum Number of Potholes That Can Be Fixed",
        "titleSlug": "maximum-number-of-potholes-that-can-be-fixed",
        "topicTags": [
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ],
        "companyNames": [
            "microsoft"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/maximum-number-of-potholes-that-can-be-fixed/description"
    },
    "365": {
        "difficulty": "MEDIUM",
        "id": 365,
        "questionFrontendId": "365",
        "title": "Water and Jug Problem",
        "titleSlug": "water-and-jug-problem",
        "topicTags": [
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Breadth-First Search",
                "slug": "breadth-first-search"
            }
        ],
        "companyNames": [
            "microsoft",
            "google",
            "amazon"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/water-and-jug-problem/description"
    },
    "519": {
        "difficulty": "MEDIUM",
        "id": 519,
        "questionFrontendId": "1983",
        "title": "Widest Pair of Indices With Equal Range Sum",
        "titleSlug": "widest-pair-of-indices-with-equal-range-sum",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Prefix Sum",
                "slug": "prefix-sum"
            }
        ],
        "companyNames": [
            "microsoft"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/widest-pair-of-indices-with-equal-range-sum/description"
    },
    "591": {
        "difficulty": "HARD",
        "id": 591,
        "questionFrontendId": "591",
        "title": "Tag Validator",
        "titleSlug": "tag-validator",
        "topicTags": [
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Stack",
                "slug": "stack"
            }
        ],
        "companyNames": [
            "microsoft"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/tag-validator/description"
    },
    "631": {
        "difficulty": "HARD",
        "id": 631,
        "questionFrontendId": "631",
        "title": "Design Excel Sum Formula",
        "titleSlug": "design-excel-sum-formula",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Graph",
                "slug": "graph"
            },
            {
                "name": "Design",
                "slug": "design"
            },
            {
                "name": "Topological Sort",
                "slug": "topological-sort"
            },
            {
                "name": "Matrix",
                "slug": "matrix"
            }
        ],
        "companyNames": [
            "microsoft",
            "bloomberg"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/design-excel-sum-formula/description"
    },
    "651": {
        "difficulty": "MEDIUM",
        "id": 651,
        "questionFrontendId": "651",
        "title": "4 Keys Keyboard",
        "titleSlug": "4-keys-keyboard",
        "topicTags": [
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            }
        ],
        "companyNames": [
            "microsoft",
            "google"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/4-keys-keyboard/description"
    },
    "654": {
        "difficulty": "MEDIUM",
        "id": 654,
        "questionFrontendId": "654",
        "title": "Maximum Binary Tree",
        "titleSlug": "maximum-binary-tree",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Divide and Conquer",
                "slug": "divide-and-conquer"
            },
            {
                "name": "Stack",
                "slug": "stack"
            },
            {
                "name": "Tree",
                "slug": "tree"
            },
            {
                "name": "Monotonic Stack",
                "slug": "monotonic-stack"
            },
            {
                "name": "Binary Tree",
                "slug": "binary-tree"
            }
        ],
        "companyNames": [
            "microsoft",
            "amazon"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/maximum-binary-tree/description"
    },
    "672": {
        "difficulty": "MEDIUM",
        "id": 672,
        "questionFrontendId": "672",
        "title": "Bulb Switcher II",
        "titleSlug": "bulb-switcher-ii",
        "topicTags": [
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Bit Manipulation",
                "slug": "bit-manipulation"
            },
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Breadth-First Search",
                "slug": "breadth-first-search"
            }
        ],
        "companyNames": [
            "microsoft"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/bulb-switcher-ii/description"
    },
    "810": {
        "difficulty": "MEDIUM",
        "id": 810,
        "questionFrontendId": "794",
        "title": "Valid Tic-Tac-Toe State",
        "titleSlug": "valid-tic-tac-toe-state",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Matrix",
                "slug": "matrix"
            }
        ],
        "companyNames": [
            "microsoft"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/valid-tic-tac-toe-state/description"
    },
    "986": {
        "difficulty": "MEDIUM",
        "id": 986,
        "questionFrontendId": "949",
        "title": "Largest Time for Given Digits",
        "titleSlug": "largest-time-for-given-digits",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Enumeration",
                "slug": "enumeration"
            }
        ],
        "companyNames": [
            "microsoft",
            "google"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/largest-time-for-given-digits/description"
    },
    "1012": {
        "difficulty": "HARD",
        "id": 1012,
        "questionFrontendId": "972",
        "title": "Equal Rational Numbers",
        "titleSlug": "equal-rational-numbers",
        "topicTags": [
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "String",
                "slug": "string"
            }
        ],
        "companyNames": [
            "microsoft"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/equal-rational-numbers/description"
    },
    "1048": {
        "difficulty": "MEDIUM",
        "id": 1048,
        "questionFrontendId": "1006",
        "title": "Clumsy Factorial",
        "titleSlug": "clumsy-factorial",
        "topicTags": [
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Stack",
                "slug": "stack"
            },
            {
                "name": "Simulation",
                "slug": "simulation"
            }
        ],
        "companyNames": [
            "microsoft",
            "bloomberg",
            "amazon"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/clumsy-factorial/description"
    },
    "1062": {
        "difficulty": "EASY",
        "id": 1062,
        "questionFrontendId": "1013",
        "title": "Partition Array Into Three Parts With Equal Sum",
        "titleSlug": "partition-array-into-three-parts-with-equal-sum",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            }
        ],
        "companyNames": [
            "microsoft"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/partition-array-into-three-parts-with-equal-sum/description"
    },
    "1143": {
        "difficulty": "MEDIUM",
        "id": 1143,
        "questionFrontendId": "1198",
        "title": "Find Smallest Common Element in All Rows",
        "titleSlug": "find-smallest-common-element-in-all-rows",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Binary Search",
                "slug": "binary-search"
            },
            {
                "name": "Matrix",
                "slug": "matrix"
            },
            {
                "name": "Counting",
                "slug": "counting"
            }
        ],
        "companyNames": [
            "microsoft"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/find-smallest-common-element-in-all-rows/description"
    },
    "1183": {
        "difficulty": "MEDIUM",
        "id": 1183,
        "questionFrontendId": "1093",
        "title": "Statistics from a Large Sample",
        "titleSlug": "statistics-from-a-large-sample",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Probability and Statistics",
                "slug": "probability-and-statistics"
            }
        ],
        "companyNames": [
            "microsoft"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/statistics-from-a-large-sample/description"
    },
    "1201": {
        "difficulty": "MEDIUM",
        "id": 1201,
        "questionFrontendId": "1273",
        "title": "Delete Tree Nodes",
        "titleSlug": "delete-tree-nodes",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Tree",
                "slug": "tree"
            },
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Breadth-First Search",
                "slug": "breadth-first-search"
            }
        ],
        "companyNames": [
            "microsoft"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/delete-tree-nodes/description"
    },
    "1202": {
        "difficulty": "HARD",
        "id": 1202,
        "questionFrontendId": "1246",
        "title": "Palindrome Removal",
        "titleSlug": "palindrome-removal",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            }
        ],
        "companyNames": [
            "microsoft"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/palindrome-removal/description"
    },
    "1337": {
        "difficulty": "HARD",
        "id": 1337,
        "questionFrontendId": "1206",
        "title": "Design Skiplist",
        "titleSlug": "design-skiplist",
        "topicTags": [
            {
                "name": "Linked List",
                "slug": "linked-list"
            },
            {
                "name": "Design",
                "slug": "design"
            }
        ],
        "companyNames": [
            "microsoft",
            "google"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/design-skiplist/description"
    },
    "1348": {
        "difficulty": "HARD",
        "id": 1348,
        "questionFrontendId": "2321",
        "title": "Maximum Score Of Spliced Array",
        "titleSlug": "maximum-score-of-spliced-array",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            }
        ],
        "companyNames": [
            "microsoft",
            "apple"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/maximum-score-of-spliced-array/description"
    },
    "1355": {
        "difficulty": "MEDIUM",
        "id": 1355,
        "questionFrontendId": "2216",
        "title": "Minimum Deletions to Make Array Beautiful",
        "titleSlug": "minimum-deletions-to-make-array-beautiful",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Stack",
                "slug": "stack"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            }
        ],
        "companyNames": [
            "microsoft",
            "amazon"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/minimum-deletions-to-make-array-beautiful/description"
    },
    "1363": {
        "difficulty": "EASY",
        "id": 1363,
        "questionFrontendId": "2309",
        "title": "Greatest English Letter in Upper and Lower Case",
        "titleSlug": "greatest-english-letter-in-upper-and-lower-case",
        "topicTags": [
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Enumeration",
                "slug": "enumeration"
            }
        ],
        "companyNames": [
            "microsoft"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/greatest-english-letter-in-upper-and-lower-case/description"
    },
    "1420": {
        "difficulty": "MEDIUM",
        "id": 1420,
        "questionFrontendId": "1285",
        "title": "Find the Start and End Number of Continuous Ranges",
        "titleSlug": "find-the-start-and-end-number-of-continuous-ranges",
        "topicTags": [
            {
                "name": "Database",
                "slug": "database"
            }
        ],
        "companyNames": [
            "microsoft"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/find-the-start-and-end-number-of-continuous-ranges/description"
    },
    "1449": {
        "difficulty": "MEDIUM",
        "id": 1449,
        "questionFrontendId": "1324",
        "title": "Print Words Vertically",
        "titleSlug": "print-words-vertically",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Simulation",
                "slug": "simulation"
            }
        ],
        "companyNames": [
            "microsoft",
            "amazon"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/print-words-vertically/description"
    },
    "1473": {
        "difficulty": "MEDIUM",
        "id": 1473,
        "questionFrontendId": "1371",
        "title": "Find the Longest Substring Containing Vowels in Even Counts",
        "titleSlug": "find-the-longest-substring-containing-vowels-in-even-counts",
        "topicTags": [
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Bit Manipulation",
                "slug": "bit-manipulation"
            },
            {
                "name": "Prefix Sum",
                "slug": "prefix-sum"
            }
        ],
        "companyNames": [
            "microsoft"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/find-the-longest-substring-containing-vowels-in-even-counts/description"
    },
    "1491": {
        "difficulty": "MEDIUM",
        "id": 1491,
        "questionFrontendId": "1375",
        "title": "Number of Times Binary String Is Prefix-Aligned",
        "titleSlug": "number-of-times-binary-string-is-prefix-aligned",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            }
        ],
        "companyNames": [
            "microsoft"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/number-of-times-binary-string-is-prefix-aligned/description"
    },
    "1504": {
        "difficulty": "HARD",
        "id": 1504,
        "questionFrontendId": "1369",
        "title": "Get the Second Most Recent Activity",
        "titleSlug": "get-the-second-most-recent-activity",
        "topicTags": [
            {
                "name": "Database",
                "slug": "database"
            }
        ],
        "companyNames": [
            "microsoft"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/get-the-second-most-recent-activity/description"
    },
    "1510": {
        "difficulty": "EASY",
        "id": 1510,
        "questionFrontendId": "1394",
        "title": "Find Lucky Integer in an Array",
        "titleSlug": "find-lucky-integer-in-an-array",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Counting",
                "slug": "counting"
            }
        ],
        "companyNames": [
            "microsoft"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/find-lucky-integer-in-an-array/description"
    },
    "1516": {
        "difficulty": "MEDIUM",
        "id": 1516,
        "questionFrontendId": "1415",
        "title": "The k-th Lexicographical String of All Happy Strings of Length n",
        "titleSlug": "the-k-th-lexicographical-string-of-all-happy-strings-of-length-n",
        "topicTags": [
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Backtracking",
                "slug": "backtracking"
            }
        ],
        "companyNames": [
            "microsoft"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/the-k-th-lexicographical-string-of-all-happy-strings-of-length-n/description"
    },
    "1520": {
        "difficulty": "MEDIUM",
        "id": 1520,
        "questionFrontendId": "1404",
        "title": "Number of Steps to Reduce a Number in Binary Representation to One",
        "titleSlug": "number-of-steps-to-reduce-a-number-in-binary-representation-to-one",
        "topicTags": [
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Bit Manipulation",
                "slug": "bit-manipulation"
            }
        ],
        "companyNames": [
            "microsoft",
            "google",
            "amazon"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/number-of-steps-to-reduce-a-number-in-binary-representation-to-one/description"
    },
    "1532": {
        "difficulty": "EASY",
        "id": 1532,
        "questionFrontendId": "1417",
        "title": "Reformat The String",
        "titleSlug": "reformat-the-string",
        "topicTags": [
            {
                "name": "String",
                "slug": "string"
            }
        ],
        "companyNames": [
            "microsoft"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/reformat-the-string/description"
    },
    "1609": {
        "difficulty": "EASY",
        "id": 1609,
        "questionFrontendId": "1469",
        "title": "Find All The Lonely Nodes",
        "titleSlug": "find-all-the-lonely-nodes",
        "topicTags": [
            {
                "name": "Tree",
                "slug": "tree"
            },
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Breadth-First Search",
                "slug": "breadth-first-search"
            },
            {
                "name": "Binary Tree",
                "slug": "binary-tree"
            }
        ],
        "companyNames": [
            "microsoft"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/find-all-the-lonely-nodes/description"
    },
    "1698": {
        "difficulty": "EASY",
        "id": 1698,
        "questionFrontendId": "1576",
        "title": "Replace All ?'s to Avoid Consecutive Repeating Characters",
        "titleSlug": "replace-all-s-to-avoid-consecutive-repeating-characters",
        "topicTags": [
            {
                "name": "String",
                "slug": "string"
            }
        ],
        "companyNames": [
            "microsoft"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/replace-all-s-to-avoid-consecutive-repeating-characters/description"
    },
    "1743": {
        "difficulty": "MEDIUM",
        "id": 1743,
        "questionFrontendId": "1638",
        "title": "Count Substrings That Differ by One Character",
        "titleSlug": "count-substrings-that-differ-by-one-character",
        "topicTags": [
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Enumeration",
                "slug": "enumeration"
            }
        ],
        "companyNames": [
            "microsoft"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/count-substrings-that-differ-by-one-character/description"
    },
    "1766": {
        "difficulty": "HARD",
        "id": 1766,
        "questionFrontendId": "1671",
        "title": "Minimum Number of Removals to Make Mountain Array",
        "titleSlug": "minimum-number-of-removals-to-make-mountain-array",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Binary Search",
                "slug": "binary-search"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            }
        ],
        "companyNames": [
            "microsoft",
            "apple",
            "amazon"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/minimum-number-of-removals-to-make-mountain-array/description"
    },
    "1799": {
        "difficulty": "HARD",
        "id": 1799,
        "questionFrontendId": "1681",
        "title": "Minimum Incompatibility",
        "titleSlug": "minimum-incompatibility",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Bit Manipulation",
                "slug": "bit-manipulation"
            },
            {
                "name": "Bitmask",
                "slug": "bitmask"
            }
        ],
        "companyNames": [
            "microsoft"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/minimum-incompatibility/description"
    },
    "1805": {
        "difficulty": "HARD",
        "id": 1805,
        "questionFrontendId": "1703",
        "title": "Minimum Adjacent Swaps for K Consecutive Ones",
        "titleSlug": "minimum-adjacent-swaps-for-k-consecutive-ones",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            },
            {
                "name": "Sliding Window",
                "slug": "sliding-window"
            },
            {
                "name": "Prefix Sum",
                "slug": "prefix-sum"
            }
        ],
        "companyNames": [
            "microsoft",
            "google",
            "amazon"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/minimum-adjacent-swaps-for-k-consecutive-ones/description"
    },
    "1936": {
        "difficulty": "HARD",
        "id": 1936,
        "questionFrontendId": "1808",
        "title": "Maximize Number of Nice Divisors",
        "titleSlug": "maximize-number-of-nice-divisors",
        "topicTags": [
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Recursion",
                "slug": "recursion"
            }
        ],
        "companyNames": [
            "microsoft"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/maximize-number-of-nice-divisors/description"
    },
    "2076": {
        "difficulty": "EASY",
        "id": 2076,
        "questionFrontendId": "1945",
        "title": "Sum of Digits of String After Convert",
        "titleSlug": "sum-of-digits-of-string-after-convert",
        "topicTags": [
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Simulation",
                "slug": "simulation"
            }
        ],
        "companyNames": [
            "microsoft"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/sum-of-digits-of-string-after-convert/description"
    },
    "2083": {
        "difficulty": "EASY",
        "id": 2083,
        "questionFrontendId": "1952",
        "title": "Three Divisors",
        "titleSlug": "three-divisors",
        "topicTags": [
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Enumeration",
                "slug": "enumeration"
            },
            {
                "name": "Number Theory",
                "slug": "number-theory"
            }
        ],
        "companyNames": [
            "microsoft",
            "adobe",
            "google"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/three-divisors/description"
    },
    "2142": {
        "difficulty": "MEDIUM",
        "id": 2142,
        "questionFrontendId": "2015",
        "title": "Average Height of Buildings in Each Segment",
        "titleSlug": "average-height-of-buildings-in-each-segment",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            },
            {
                "name": "Heap (Priority Queue)",
                "slug": "heap-priority-queue"
            }
        ],
        "companyNames": [
            "microsoft"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/average-height-of-buildings-in-each-segment/description"
    },
    "2242": {
        "difficulty": "MEDIUM",
        "id": 2242,
        "questionFrontendId": "2098",
        "title": "Subsequence of Size K With the Largest Even Sum",
        "titleSlug": "subsequence-of-size-k-with-the-largest-even-sum",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ],
        "companyNames": [
            "microsoft"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/subsequence-of-size-k-with-the-largest-even-sum/description"
    },
    "2247": {
        "difficulty": "MEDIUM",
        "id": 2247,
        "questionFrontendId": "2107",
        "title": "Number of Unique Flavors After Sharing K Candies",
        "titleSlug": "number-of-unique-flavors-after-sharing-k-candies",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Sliding Window",
                "slug": "sliding-window"
            }
        ],
        "companyNames": [
            "microsoft"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/number-of-unique-flavors-after-sharing-k-candies/description"
    },
    "2453": {
        "difficulty": "EASY",
        "id": 2453,
        "questionFrontendId": "2339",
        "title": "All the Matches of the League",
        "titleSlug": "all-the-matches-of-the-league",
        "topicTags": [
            {
                "name": "Database",
                "slug": "database"
            }
        ],
        "companyNames": [
            "microsoft"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/all-the-matches-of-the-league/description"
    },
    "2593": {
        "difficulty": "MEDIUM",
        "id": 2593,
        "questionFrontendId": "2450",
        "title": "Number of Distinct Binary Strings After Applying Operations",
        "titleSlug": "number-of-distinct-binary-strings-after-applying-operations",
        "topicTags": [
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "String",
                "slug": "string"
            }
        ],
        "companyNames": [
            "microsoft"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/number-of-distinct-binary-strings-after-applying-operations/description"
    },
    "2674": {
        "difficulty": "MEDIUM",
        "id": 2674,
        "questionFrontendId": "2599",
        "title": "Make the Prefix Sum Non-negative",
        "titleSlug": "make-the-prefix-sum-non-negative",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            },
            {
                "name": "Heap (Priority Queue)",
                "slug": "heap-priority-queue"
            }
        ],
        "companyNames": [
            "microsoft"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/make-the-prefix-sum-non-negative/description"
    },
    "2693": {
        "difficulty": "MEDIUM",
        "id": 2693,
        "questionFrontendId": "2548",
        "title": "Maximum Price to Fill a Bag",
        "titleSlug": "maximum-price-to-fill-a-bag",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ],
        "companyNames": [
            "microsoft"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/maximum-price-to-fill-a-bag/description"
    },
    "2902": {
        "difficulty": "EASY",
        "id": 2902,
        "questionFrontendId": "2815",
        "title": "Max Pair Sum in an Array",
        "titleSlug": "max-pair-sum-in-an-array",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            }
        ],
        "companyNames": [
            "microsoft"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/max-pair-sum-in-an-array/description"
    },
    "3111": {
        "difficulty": "MEDIUM",
        "id": 3111,
        "questionFrontendId": "2847",
        "title": "Smallest Number With Given Digit Product",
        "titleSlug": "smallest-number-with-given-digit-product",
        "topicTags": [
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            }
        ],
        "companyNames": [
            "microsoft"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/smallest-number-with-given-digit-product/description"
    },
    "3236": {
        "difficulty": "EASY",
        "id": 3236,
        "questionFrontendId": "2996",
        "title": "Smallest Missing Integer Greater Than Sequential Prefix Sum",
        "titleSlug": "smallest-missing-integer-greater-than-sequential-prefix-sum",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ],
        "companyNames": [
            "microsoft",
            "adobe"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/smallest-missing-integer-greater-than-sequential-prefix-sum/description"
    },
    "3304": {
        "difficulty": "MEDIUM",
        "id": 3304,
        "questionFrontendId": "3004",
        "title": "Maximum Subtree of the Same Color",
        "titleSlug": "maximum-subtree-of-the-same-color",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Tree",
                "slug": "tree"
            },
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            }
        ],
        "companyNames": [
            "microsoft"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/maximum-subtree-of-the-same-color/description"
    },
    "3320": {
        "difficulty": "EASY",
        "id": 3320,
        "questionFrontendId": "3038",
        "title": "Maximum Number of Operations With the Same Score I",
        "titleSlug": "maximum-number-of-operations-with-the-same-score-i",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Simulation",
                "slug": "simulation"
            }
        ],
        "companyNames": [
            "microsoft"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/maximum-number-of-operations-with-the-same-score-i/description"
    },
    "3362": {
        "difficulty": "HARD",
        "id": 3362,
        "questionFrontendId": "3134",
        "title": "Find the Median of the Uniqueness Array",
        "titleSlug": "find-the-median-of-the-uniqueness-array",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Binary Search",
                "slug": "binary-search"
            },
            {
                "name": "Sliding Window",
                "slug": "sliding-window"
            }
        ],
        "companyNames": [
            "microsoft",
            "amazon"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/find-the-median-of-the-uniqueness-array/description"
    },
    "3390": {
        "difficulty": "MEDIUM",
        "id": 3390,
        "questionFrontendId": "3111",
        "title": "Minimum Rectangles to Cover Points",
        "titleSlug": "minimum-rectangles-to-cover-points",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ],
        "companyNames": [
            "microsoft"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/minimum-rectangles-to-cover-points/description"
    },
    "3402": {
        "difficulty": "HARD",
        "id": 3402,
        "questionFrontendId": "3139",
        "title": "Minimum Cost to Equalize Array",
        "titleSlug": "minimum-cost-to-equalize-array",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            },
            {
                "name": "Enumeration",
                "slug": "enumeration"
            }
        ],
        "companyNames": [
            "microsoft",
            "bloomberg",
            "amazon"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/minimum-cost-to-equalize-array/description"
    },
    "3467": {
        "difficulty": "MEDIUM",
        "id": 3467,
        "questionFrontendId": "3157",
        "title": "Find the Level of Tree with Minimum Sum",
        "titleSlug": "find-the-level-of-tree-with-minimum-sum",
        "topicTags": [
            {
                "name": "Tree",
                "slug": "tree"
            },
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Breadth-First Search",
                "slug": "breadth-first-search"
            },
            {
                "name": "Binary Tree",
                "slug": "binary-tree"
            }
        ],
        "companyNames": [
            "microsoft"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/find-the-level-of-tree-with-minimum-sum/description"
    },
    "86": {
        "difficulty": "MEDIUM",
        "id": 86,
        "questionFrontendId": "86",
        "title": "Partition List",
        "titleSlug": "partition-list",
        "topicTags": [
            {
                "name": "Linked List",
                "slug": "linked-list"
            },
            {
                "name": "Two Pointers",
                "slug": "two-pointers"
            }
        ],
        "companyNames": [
            "microsoft",
            "bloomberg",
            "apple",
            "adobe",
            "tcs",
            "google",
            "amazon"
        ],
        "frequencyCount": 7,
        "url": "https://leetcode.com/problems/partition-list/description"
    },
    "225": {
        "difficulty": "EASY",
        "id": 225,
        "questionFrontendId": "225",
        "title": "Implement Stack using Queues",
        "titleSlug": "implement-stack-using-queues",
        "topicTags": [
            {
                "name": "Stack",
                "slug": "stack"
            },
            {
                "name": "Design",
                "slug": "design"
            },
            {
                "name": "Queue",
                "slug": "queue"
            }
        ],
        "companyNames": [
            "microsoft",
            "oracle",
            "bloomberg",
            "apple",
            "adobe",
            "google",
            "amazon"
        ],
        "frequencyCount": 7,
        "url": "https://leetcode.com/problems/implement-stack-using-queues/description"
    },
    "289": {
        "difficulty": "MEDIUM",
        "id": 289,
        "questionFrontendId": "289",
        "title": "Game of Life",
        "titleSlug": "game-of-life",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Matrix",
                "slug": "matrix"
            },
            {
                "name": "Simulation",
                "slug": "simulation"
            }
        ],
        "companyNames": [
            "microsoft",
            "bloomberg",
            "adobe",
            "cisco",
            "google",
            "amazon"
        ],
        "frequencyCount": 6,
        "url": "https://leetcode.com/problems/game-of-life/description"
    },
    "557": {
        "difficulty": "EASY",
        "id": 557,
        "questionFrontendId": "557",
        "title": "Reverse Words in a String III",
        "titleSlug": "reverse-words-in-a-string-iii",
        "topicTags": [
            {
                "name": "Two Pointers",
                "slug": "two-pointers"
            },
            {
                "name": "String",
                "slug": "string"
            }
        ],
        "companyNames": [
            "microsoft",
            "bloomberg",
            "apple",
            "adobe",
            "walmart_labs",
            "google",
            "amazon"
        ],
        "frequencyCount": 7,
        "url": "https://leetcode.com/problems/reverse-words-in-a-string-iii/description"
    },
    "1021": {
        "difficulty": "MEDIUM",
        "id": 1021,
        "questionFrontendId": "979",
        "title": "Distribute Coins in Binary Tree",
        "titleSlug": "distribute-coins-in-binary-tree",
        "topicTags": [
            {
                "name": "Tree",
                "slug": "tree"
            },
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Binary Tree",
                "slug": "binary-tree"
            }
        ],
        "companyNames": [
            "microsoft",
            "bloomberg",
            "apple",
            "google",
            "amazon"
        ],
        "frequencyCount": 5,
        "url": "https://leetcode.com/problems/distribute-coins-in-binary-tree/description"
    },
    "1833": {
        "difficulty": "EASY",
        "id": 1833,
        "questionFrontendId": "1732",
        "title": "Find the Highest Altitude",
        "titleSlug": "find-the-highest-altitude",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Prefix Sum",
                "slug": "prefix-sum"
            }
        ],
        "companyNames": [
            "microsoft",
            "bloomberg",
            "apple",
            "adobe",
            "google",
            "amazon"
        ],
        "frequencyCount": 6,
        "url": "https://leetcode.com/problems/find-the-highest-altitude/description"
    },
    "108": {
        "difficulty": "EASY",
        "id": 108,
        "questionFrontendId": "108",
        "title": "Convert Sorted Array to Binary Search Tree",
        "titleSlug": "convert-sorted-array-to-binary-search-tree",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Divide and Conquer",
                "slug": "divide-and-conquer"
            },
            {
                "name": "Tree",
                "slug": "tree"
            },
            {
                "name": "Binary Search Tree",
                "slug": "binary-search-tree"
            },
            {
                "name": "Binary Tree",
                "slug": "binary-tree"
            }
        ],
        "companyNames": [
            "microsoft",
            "bloomberg",
            "apple",
            "adobe",
            "airbnb",
            "google",
            "amazon"
        ],
        "frequencyCount": 7,
        "url": "https://leetcode.com/problems/convert-sorted-array-to-binary-search-tree/description"
    },
    "129": {
        "difficulty": "MEDIUM",
        "id": 129,
        "questionFrontendId": "129",
        "title": "Sum Root to Leaf Numbers",
        "titleSlug": "sum-root-to-leaf-numbers",
        "topicTags": [
            {
                "name": "Tree",
                "slug": "tree"
            },
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Binary Tree",
                "slug": "binary-tree"
            }
        ],
        "companyNames": [
            "microsoft",
            "bloomberg",
            "apple",
            "adobe",
            "google",
            "amazon"
        ],
        "frequencyCount": 6,
        "url": "https://leetcode.com/problems/sum-root-to-leaf-numbers/description"
    },
    "271": {
        "difficulty": "MEDIUM",
        "id": 271,
        "questionFrontendId": "271",
        "title": "Encode and Decode Strings",
        "titleSlug": "encode-and-decode-strings",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Design",
                "slug": "design"
            }
        ],
        "companyNames": [
            "microsoft",
            "bloomberg",
            "google",
            "amazon"
        ],
        "frequencyCount": 4,
        "url": "https://leetcode.com/problems/encode-and-decode-strings/description"
    },
    "494": {
        "difficulty": "MEDIUM",
        "id": 494,
        "questionFrontendId": "494",
        "title": "Target Sum",
        "titleSlug": "target-sum",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Backtracking",
                "slug": "backtracking"
            }
        ],
        "companyNames": [
            "microsoft",
            "bloomberg",
            "apple",
            "google",
            "amazon"
        ],
        "frequencyCount": 5,
        "url": "https://leetcode.com/problems/target-sum/description"
    },
    "502": {
        "difficulty": "HARD",
        "id": 502,
        "questionFrontendId": "502",
        "title": "IPO",
        "titleSlug": "ipo",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            },
            {
                "name": "Heap (Priority Queue)",
                "slug": "heap-priority-queue"
            }
        ],
        "companyNames": [
            "microsoft",
            "bloomberg",
            "apple",
            "adobe",
            "google",
            "amazon"
        ],
        "frequencyCount": 6,
        "url": "https://leetcode.com/problems/ipo/description"
    },
    "1049": {
        "difficulty": "MEDIUM",
        "id": 1049,
        "questionFrontendId": "1007",
        "title": "Minimum Domino Rotations For Equal Row",
        "titleSlug": "minimum-domino-rotations-for-equal-row",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            }
        ],
        "companyNames": [
            "microsoft",
            "google"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/minimum-domino-rotations-for-equal-row/description"
    },
    "1298": {
        "difficulty": "MEDIUM",
        "id": 1298,
        "questionFrontendId": "1190",
        "title": "Reverse Substrings Between Each Pair of Parentheses",
        "titleSlug": "reverse-substrings-between-each-pair-of-parentheses",
        "topicTags": [
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Stack",
                "slug": "stack"
            }
        ],
        "companyNames": [
            "microsoft",
            "goldman_sachs",
            "bloomberg",
            "adobe",
            "google",
            "amazon"
        ],
        "frequencyCount": 6,
        "url": "https://leetcode.com/problems/reverse-substrings-between-each-pair-of-parentheses/description"
    },
    "2813": {
        "difficulty": "EASY",
        "id": 2813,
        "questionFrontendId": "2704",
        "title": "To Be Or Not To Be",
        "titleSlug": "to-be-or-not-to-be",
        "topicTags": [],
        "companyNames": [
            "microsoft",
            "bloomberg",
            "apple",
            "adobe",
            "google",
            "amazon"
        ],
        "frequencyCount": 6,
        "url": "https://leetcode.com/problems/to-be-or-not-to-be/description"
    },
    "3240": {
        "difficulty": "MEDIUM",
        "id": 3240,
        "questionFrontendId": "3007",
        "title": "Maximum Number That Sum of the Prices Is Less Than or Equal to K",
        "titleSlug": "maximum-number-that-sum-of-the-prices-is-less-than-or-equal-to-k",
        "topicTags": [
            {
                "name": "Binary Search",
                "slug": "binary-search"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Bit Manipulation",
                "slug": "bit-manipulation"
            }
        ],
        "companyNames": [
            "microsoft",
            "google"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/maximum-number-that-sum-of-the-prices-is-less-than-or-equal-to-k/description"
    },
    "144": {
        "difficulty": "EASY",
        "id": 144,
        "questionFrontendId": "144",
        "title": "Binary Tree Preorder Traversal",
        "titleSlug": "binary-tree-preorder-traversal",
        "topicTags": [
            {
                "name": "Stack",
                "slug": "stack"
            },
            {
                "name": "Tree",
                "slug": "tree"
            },
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Binary Tree",
                "slug": "binary-tree"
            }
        ],
        "companyNames": [
            "microsoft",
            "bloomberg",
            "apple",
            "adobe",
            "google",
            "amazon"
        ],
        "frequencyCount": 6,
        "url": "https://leetcode.com/problems/binary-tree-preorder-traversal/description"
    },
    "216": {
        "difficulty": "MEDIUM",
        "id": 216,
        "questionFrontendId": "216",
        "title": "Combination Sum III",
        "titleSlug": "combination-sum-iii",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Backtracking",
                "slug": "backtracking"
            }
        ],
        "companyNames": [
            "microsoft",
            "apple",
            "adobe",
            "amazon"
        ],
        "frequencyCount": 4,
        "url": "https://leetcode.com/problems/combination-sum-iii/description"
    },
    "409": {
        "difficulty": "EASY",
        "id": 409,
        "questionFrontendId": "409",
        "title": "Longest Palindrome",
        "titleSlug": "longest-palindrome",
        "topicTags": [
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            }
        ],
        "companyNames": [
            "microsoft",
            "oracle",
            "bloomberg",
            "apple",
            "walmart_labs",
            "google",
            "amazon"
        ],
        "frequencyCount": 7,
        "url": "https://leetcode.com/problems/longest-palindrome/description"
    },
    "420": {
        "difficulty": "HARD",
        "id": 420,
        "questionFrontendId": "420",
        "title": "Strong Password Checker",
        "titleSlug": "strong-password-checker",
        "topicTags": [
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            },
            {
                "name": "Heap (Priority Queue)",
                "slug": "heap-priority-queue"
            }
        ],
        "companyNames": [
            "microsoft",
            "bloomberg",
            "apple",
            "google",
            "amazon"
        ],
        "frequencyCount": 5,
        "url": "https://leetcode.com/problems/strong-password-checker/description"
    },
    "462": {
        "difficulty": "MEDIUM",
        "id": 462,
        "questionFrontendId": "462",
        "title": "Minimum Moves to Equal Array Elements II",
        "titleSlug": "minimum-moves-to-equal-array-elements-ii",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ],
        "companyNames": [
            "microsoft",
            "adobe",
            "google",
            "amazon"
        ],
        "frequencyCount": 4,
        "url": "https://leetcode.com/problems/minimum-moves-to-equal-array-elements-ii/description"
    },
    "506": {
        "difficulty": "EASY",
        "id": 506,
        "questionFrontendId": "506",
        "title": "Relative Ranks",
        "titleSlug": "relative-ranks",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            },
            {
                "name": "Heap (Priority Queue)",
                "slug": "heap-priority-queue"
            }
        ],
        "companyNames": [
            "microsoft",
            "bloomberg",
            "adobe",
            "google",
            "amazon"
        ],
        "frequencyCount": 5,
        "url": "https://leetcode.com/problems/relative-ranks/description"
    },
    "643": {
        "difficulty": "EASY",
        "id": 643,
        "questionFrontendId": "643",
        "title": "Maximum Average Subarray I",
        "titleSlug": "maximum-average-subarray-i",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Sliding Window",
                "slug": "sliding-window"
            }
        ],
        "companyNames": [
            "microsoft",
            "bloomberg",
            "apple",
            "adobe",
            "google",
            "amazon"
        ],
        "frequencyCount": 6,
        "url": "https://leetcode.com/problems/maximum-average-subarray-i/description"
    },
    "661": {
        "difficulty": "EASY",
        "id": 661,
        "questionFrontendId": "661",
        "title": "Image Smoother",
        "titleSlug": "image-smoother",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Matrix",
                "slug": "matrix"
            }
        ],
        "companyNames": [
            "microsoft",
            "bloomberg",
            "adobe",
            "google",
            "amazon"
        ],
        "frequencyCount": 5,
        "url": "https://leetcode.com/problems/image-smoother/description"
    },
    "813": {
        "difficulty": "MEDIUM",
        "id": 813,
        "questionFrontendId": "797",
        "title": "All Paths From Source to Target",
        "titleSlug": "all-paths-from-source-to-target",
        "topicTags": [
            {
                "name": "Backtracking",
                "slug": "backtracking"
            },
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Breadth-First Search",
                "slug": "breadth-first-search"
            },
            {
                "name": "Graph",
                "slug": "graph"
            }
        ],
        "companyNames": [
            "microsoft",
            "bloomberg",
            "apple",
            "adobe",
            "amazon"
        ],
        "frequencyCount": 5,
        "url": "https://leetcode.com/problems/all-paths-from-source-to-target/description"
    },
    "866": {
        "difficulty": "EASY",
        "id": 866,
        "questionFrontendId": "836",
        "title": "Rectangle Overlap",
        "titleSlug": "rectangle-overlap",
        "topicTags": [
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Geometry",
                "slug": "geometry"
            }
        ],
        "companyNames": [
            "microsoft",
            "oracle",
            "apple",
            "adobe",
            "nvidia",
            "google",
            "amazon"
        ],
        "frequencyCount": 7,
        "url": "https://leetcode.com/problems/rectangle-overlap/description"
    },
    "876": {
        "difficulty": "MEDIUM",
        "id": 876,
        "questionFrontendId": "846",
        "title": "Hand of Straights",
        "titleSlug": "hand-of-straights",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ],
        "companyNames": [
            "microsoft",
            "bloomberg",
            "apple",
            "google",
            "amazon"
        ],
        "frequencyCount": 5,
        "url": "https://leetcode.com/problems/hand-of-straights/description"
    },
    "940": {
        "difficulty": "MEDIUM",
        "id": 940,
        "questionFrontendId": "904",
        "title": "Fruit Into Baskets",
        "titleSlug": "fruit-into-baskets",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Sliding Window",
                "slug": "sliding-window"
            }
        ],
        "companyNames": [
            "microsoft",
            "adobe",
            "walmart_labs",
            "google",
            "amazon"
        ],
        "frequencyCount": 5,
        "url": "https://leetcode.com/problems/fruit-into-baskets/description"
    },
    "945": {
        "difficulty": "MEDIUM",
        "id": 945,
        "questionFrontendId": "909",
        "title": "Snakes and Ladders",
        "titleSlug": "snakes-and-ladders",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Breadth-First Search",
                "slug": "breadth-first-search"
            },
            {
                "name": "Matrix",
                "slug": "matrix"
            }
        ],
        "companyNames": [
            "microsoft",
            "oracle",
            "bloomberg",
            "apple",
            "cisco",
            "google",
            "amazon"
        ],
        "frequencyCount": 7,
        "url": "https://leetcode.com/problems/snakes-and-ladders/description"
    },
    "1032": {
        "difficulty": "MEDIUM",
        "id": 1032,
        "questionFrontendId": "990",
        "title": "Satisfiability of Equality Equations",
        "titleSlug": "satisfiability-of-equality-equations",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Union Find",
                "slug": "union-find"
            },
            {
                "name": "Graph",
                "slug": "graph"
            }
        ],
        "companyNames": [
            "microsoft",
            "google",
            "amazon"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/satisfiability-of-equality-equations/description"
    },
    "1289": {
        "difficulty": "EASY",
        "id": 1289,
        "questionFrontendId": "1185",
        "title": "Day of the Week",
        "titleSlug": "day-of-the-week",
        "topicTags": [
            {
                "name": "Math",
                "slug": "math"
            }
        ],
        "companyNames": [
            "microsoft"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/day-of-the-week/description"
    },
    "1582": {
        "difficulty": "MEDIUM",
        "id": 1582,
        "questionFrontendId": "1472",
        "title": "Design Browser History",
        "titleSlug": "design-browser-history",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Linked List",
                "slug": "linked-list"
            },
            {
                "name": "Stack",
                "slug": "stack"
            },
            {
                "name": "Design",
                "slug": "design"
            },
            {
                "name": "Doubly-Linked List",
                "slug": "doubly-linked-list"
            },
            {
                "name": "Data Stream",
                "slug": "data-stream"
            }
        ],
        "companyNames": [
            "microsoft",
            "oracle",
            "bloomberg",
            "apple",
            "doordash",
            "cisco",
            "google",
            "amazon"
        ],
        "frequencyCount": 8,
        "url": "https://leetcode.com/problems/design-browser-history/description"
    },
    "1585": {
        "difficulty": "MEDIUM",
        "id": 1585,
        "questionFrontendId": "1492",
        "title": "The kth Factor of n",
        "titleSlug": "the-kth-factor-of-n",
        "topicTags": [
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Number Theory",
                "slug": "number-theory"
            }
        ],
        "companyNames": [
            "microsoft",
            "bloomberg",
            "apple",
            "adobe",
            "tcs",
            "google",
            "amazon"
        ],
        "frequencyCount": 7,
        "url": "https://leetcode.com/problems/the-kth-factor-of-n/description"
    },
    "2587": {
        "difficulty": "MEDIUM",
        "id": 2587,
        "questionFrontendId": "2502",
        "title": "Design Memory Allocator",
        "titleSlug": "design-memory-allocator",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Design",
                "slug": "design"
            },
            {
                "name": "Simulation",
                "slug": "simulation"
            }
        ],
        "companyNames": [
            "microsoft",
            "amazon"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/design-memory-allocator/description"
    },
    "2747": {
        "difficulty": "EASY",
        "id": 2747,
        "questionFrontendId": "2635",
        "title": "Apply Transform Over Each Element in Array",
        "titleSlug": "apply-transform-over-each-element-in-array",
        "topicTags": [],
        "companyNames": [
            "microsoft",
            "bloomberg",
            "apple",
            "adobe",
            "google",
            "amazon"
        ],
        "frequencyCount": 6,
        "url": "https://leetcode.com/problems/apply-transform-over-each-element-in-array/description"
    },
    "3379": {
        "difficulty": "EASY",
        "id": 3379,
        "questionFrontendId": "3110",
        "title": "Score of a String",
        "titleSlug": "score-of-a-string",
        "topicTags": [
            {
                "name": "String",
                "slug": "string"
            }
        ],
        "companyNames": [
            "microsoft",
            "bloomberg",
            "google",
            "amazon"
        ],
        "frequencyCount": 4,
        "url": "https://leetcode.com/problems/score-of-a-string/description"
    },
    "30": {
        "difficulty": "HARD",
        "id": 30,
        "questionFrontendId": "30",
        "title": "Substring with Concatenation of All Words",
        "titleSlug": "substring-with-concatenation-of-all-words",
        "topicTags": [
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Sliding Window",
                "slug": "sliding-window"
            }
        ],
        "companyNames": [
            "microsoft",
            "bloomberg",
            "apple",
            "adobe",
            "google",
            "amazon"
        ],
        "frequencyCount": 6,
        "url": "https://leetcode.com/problems/substring-with-concatenation-of-all-words/description"
    },
    "119": {
        "difficulty": "EASY",
        "id": 119,
        "questionFrontendId": "119",
        "title": "Pascal's Triangle II",
        "titleSlug": "pascals-triangle-ii",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            }
        ],
        "companyNames": [
            "microsoft",
            "goldman_sachs",
            "bloomberg",
            "apple",
            "adobe",
            "google",
            "amazon"
        ],
        "frequencyCount": 7,
        "url": "https://leetcode.com/problems/pascals-triangle-ii/description"
    },
    "137": {
        "difficulty": "MEDIUM",
        "id": 137,
        "questionFrontendId": "137",
        "title": "Single Number II",
        "titleSlug": "single-number-ii",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Bit Manipulation",
                "slug": "bit-manipulation"
            }
        ],
        "companyNames": [
            "microsoft",
            "bloomberg",
            "apple",
            "adobe",
            "google",
            "amazon"
        ],
        "frequencyCount": 6,
        "url": "https://leetcode.com/problems/single-number-ii/description"
    },
    "147": {
        "difficulty": "MEDIUM",
        "id": 147,
        "questionFrontendId": "147",
        "title": "Insertion Sort List",
        "titleSlug": "insertion-sort-list",
        "topicTags": [
            {
                "name": "Linked List",
                "slug": "linked-list"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ],
        "companyNames": [
            "microsoft",
            "google"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/insertion-sort-list/description"
    },
    "396": {
        "difficulty": "MEDIUM",
        "id": 396,
        "questionFrontendId": "396",
        "title": "Rotate Function",
        "titleSlug": "rotate-function",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            }
        ],
        "companyNames": [
            "microsoft",
            "amazon"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/rotate-function/description"
    },
    "463": {
        "difficulty": "EASY",
        "id": 463,
        "questionFrontendId": "463",
        "title": "Island Perimeter",
        "titleSlug": "island-perimeter",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Breadth-First Search",
                "slug": "breadth-first-search"
            },
            {
                "name": "Matrix",
                "slug": "matrix"
            }
        ],
        "companyNames": [
            "microsoft",
            "oracle",
            "bloomberg",
            "apple",
            "adobe",
            "google",
            "amazon"
        ],
        "frequencyCount": 7,
        "url": "https://leetcode.com/problems/island-perimeter/description"
    },
    "509": {
        "difficulty": "MEDIUM",
        "id": 509,
        "questionFrontendId": "510",
        "title": "Inorder Successor in BST II",
        "titleSlug": "inorder-successor-in-bst-ii",
        "topicTags": [
            {
                "name": "Tree",
                "slug": "tree"
            },
            {
                "name": "Binary Search Tree",
                "slug": "binary-search-tree"
            },
            {
                "name": "Binary Tree",
                "slug": "binary-tree"
            }
        ],
        "companyNames": [
            "microsoft",
            "amazon"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/inorder-successor-in-bst-ii/description"
    },
    "616": {
        "difficulty": "MEDIUM",
        "id": 616,
        "questionFrontendId": "616",
        "title": "Add Bold Tag in String",
        "titleSlug": "add-bold-tag-in-string",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Trie",
                "slug": "trie"
            },
            {
                "name": "String Matching",
                "slug": "string-matching"
            }
        ],
        "companyNames": [
            "microsoft",
            "google"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/add-bold-tag-in-string/description"
    },
    "783": {
        "difficulty": "EASY",
        "id": 783,
        "questionFrontendId": "700",
        "title": "Search in a Binary Search Tree",
        "titleSlug": "search-in-a-binary-search-tree",
        "topicTags": [
            {
                "name": "Tree",
                "slug": "tree"
            },
            {
                "name": "Binary Search Tree",
                "slug": "binary-search-tree"
            },
            {
                "name": "Binary Tree",
                "slug": "binary-tree"
            }
        ],
        "companyNames": [
            "microsoft",
            "bloomberg",
            "apple",
            "adobe",
            "google",
            "amazon"
        ],
        "frequencyCount": 6,
        "url": "https://leetcode.com/problems/search-in-a-binary-search-tree/description"
    },
    "784": {
        "difficulty": "MEDIUM",
        "id": 784,
        "questionFrontendId": "701",
        "title": "Insert into a Binary Search Tree",
        "titleSlug": "insert-into-a-binary-search-tree",
        "topicTags": [
            {
                "name": "Tree",
                "slug": "tree"
            },
            {
                "name": "Binary Search Tree",
                "slug": "binary-search-tree"
            },
            {
                "name": "Binary Tree",
                "slug": "binary-tree"
            }
        ],
        "companyNames": [
            "microsoft",
            "bloomberg",
            "google",
            "amazon"
        ],
        "frequencyCount": 4,
        "url": "https://leetcode.com/problems/insert-into-a-binary-search-tree/description"
    },
    "800": {
        "difficulty": "MEDIUM",
        "id": 800,
        "questionFrontendId": "784",
        "title": "Letter Case Permutation",
        "titleSlug": "letter-case-permutation",
        "topicTags": [
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Backtracking",
                "slug": "backtracking"
            },
            {
                "name": "Bit Manipulation",
                "slug": "bit-manipulation"
            }
        ],
        "companyNames": [
            "microsoft",
            "apple",
            "google",
            "amazon"
        ],
        "frequencyCount": 4,
        "url": "https://leetcode.com/problems/letter-case-permutation/description"
    },
    "802": {
        "difficulty": "MEDIUM",
        "id": 802,
        "questionFrontendId": "786",
        "title": "K-th Smallest Prime Fraction",
        "titleSlug": "k-th-smallest-prime-fraction",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Two Pointers",
                "slug": "two-pointers"
            },
            {
                "name": "Binary Search",
                "slug": "binary-search"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            },
            {
                "name": "Heap (Priority Queue)",
                "slug": "heap-priority-queue"
            }
        ],
        "companyNames": [
            "microsoft",
            "bloomberg",
            "google",
            "amazon"
        ],
        "frequencyCount": 4,
        "url": "https://leetcode.com/problems/k-th-smallest-prime-fraction/description"
    },
    "806": {
        "difficulty": "MEDIUM",
        "id": 806,
        "questionFrontendId": "790",
        "title": "Domino and Tromino Tiling",
        "titleSlug": "domino-and-tromino-tiling",
        "topicTags": [
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            }
        ],
        "companyNames": [
            "microsoft",
            "apple",
            "adobe",
            "google",
            "amazon"
        ],
        "frequencyCount": 5,
        "url": "https://leetcode.com/problems/domino-and-tromino-tiling/description"
    },
    "838": {
        "difficulty": "MEDIUM",
        "id": 838,
        "questionFrontendId": "707",
        "title": "Design Linked List",
        "titleSlug": "design-linked-list",
        "topicTags": [
            {
                "name": "Linked List",
                "slug": "linked-list"
            },
            {
                "name": "Design",
                "slug": "design"
            }
        ],
        "companyNames": [
            "microsoft",
            "apple",
            "adobe",
            "google",
            "amazon"
        ],
        "frequencyCount": 5,
        "url": "https://leetcode.com/problems/design-linked-list/description"
    },
    "987": {
        "difficulty": "MEDIUM",
        "id": 987,
        "questionFrontendId": "950",
        "title": "Reveal Cards In Increasing Order",
        "titleSlug": "reveal-cards-in-increasing-order",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Queue",
                "slug": "queue"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            },
            {
                "name": "Simulation",
                "slug": "simulation"
            }
        ],
        "companyNames": [
            "microsoft",
            "bloomberg",
            "apple",
            "google",
            "amazon"
        ],
        "frequencyCount": 5,
        "url": "https://leetcode.com/problems/reveal-cards-in-increasing-order/description"
    },
    "1008": {
        "difficulty": "HARD",
        "id": 1008,
        "questionFrontendId": "968",
        "title": "Binary Tree Cameras",
        "titleSlug": "binary-tree-cameras",
        "topicTags": [
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Tree",
                "slug": "tree"
            },
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Binary Tree",
                "slug": "binary-tree"
            }
        ],
        "companyNames": [
            "microsoft",
            "oracle",
            "apple",
            "adobe",
            "cisco",
            "google",
            "amazon"
        ],
        "frequencyCount": 7,
        "url": "https://leetcode.com/problems/binary-tree-cameras/description"
    },
    "1197": {
        "difficulty": "HARD",
        "id": 1197,
        "questionFrontendId": "1106",
        "title": "Parsing A Boolean Expression",
        "titleSlug": "parsing-a-boolean-expression",
        "topicTags": [
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Stack",
                "slug": "stack"
            },
            {
                "name": "Recursion",
                "slug": "recursion"
            }
        ],
        "companyNames": [
            "microsoft",
            "apple",
            "google",
            "amazon"
        ],
        "frequencyCount": 4,
        "url": "https://leetcode.com/problems/parsing-a-boolean-expression/description"
    },
    "1249": {
        "difficulty": "MEDIUM",
        "id": 1249,
        "questionFrontendId": "1146",
        "title": "Snapshot Array",
        "titleSlug": "snapshot-array",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Binary Search",
                "slug": "binary-search"
            },
            {
                "name": "Design",
                "slug": "design"
            }
        ],
        "companyNames": [
            "microsoft",
            "bloomberg",
            "apple",
            "adobe",
            "nvidia",
            "google",
            "amazon"
        ],
        "frequencyCount": 7,
        "url": "https://leetcode.com/problems/snapshot-array/description"
    },
    "1277": {
        "difficulty": "HARD",
        "id": 1277,
        "questionFrontendId": "1363",
        "title": "Largest Multiple of Three",
        "titleSlug": "largest-multiple-of-three",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            }
        ],
        "companyNames": [
            "microsoft",
            "google",
            "amazon"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/largest-multiple-of-three/description"
    },
    "1406": {
        "difficulty": "EASY",
        "id": 1406,
        "questionFrontendId": "1281",
        "title": "Subtract the Product and Sum of Digits of an Integer",
        "titleSlug": "subtract-the-product-and-sum-of-digits-of-an-integer",
        "topicTags": [
            {
                "name": "Math",
                "slug": "math"
            }
        ],
        "companyNames": [
            "microsoft",
            "apple",
            "google",
            "amazon"
        ],
        "frequencyCount": 4,
        "url": "https://leetcode.com/problems/subtract-the-product-and-sum-of-digits-of-an-integer/description"
    },
    "1476": {
        "difficulty": "EASY",
        "id": 1476,
        "questionFrontendId": "1351",
        "title": "Count Negative Numbers in a Sorted Matrix",
        "titleSlug": "count-negative-numbers-in-a-sorted-matrix",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Binary Search",
                "slug": "binary-search"
            },
            {
                "name": "Matrix",
                "slug": "matrix"
            }
        ],
        "companyNames": [
            "microsoft",
            "bloomberg",
            "apple",
            "adobe",
            "google",
            "amazon"
        ],
        "frequencyCount": 6,
        "url": "https://leetcode.com/problems/count-negative-numbers-in-a-sorted-matrix/description"
    },
    "1567": {
        "difficulty": "MEDIUM",
        "id": 1567,
        "questionFrontendId": "1456",
        "title": "Maximum Number of Vowels in a Substring of Given Length",
        "titleSlug": "maximum-number-of-vowels-in-a-substring-of-given-length",
        "topicTags": [
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Sliding Window",
                "slug": "sliding-window"
            }
        ],
        "companyNames": [
            "microsoft",
            "bloomberg",
            "apple",
            "adobe",
            "google",
            "amazon"
        ],
        "frequencyCount": 6,
        "url": "https://leetcode.com/problems/maximum-number-of-vowels-in-a-substring-of-given-length/description"
    },
    "1656": {
        "difficulty": "EASY",
        "id": 1656,
        "questionFrontendId": "1534",
        "title": "Count Good Triplets",
        "titleSlug": "count-good-triplets",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Enumeration",
                "slug": "enumeration"
            }
        ],
        "companyNames": [
            "microsoft",
            "apple",
            "amazon"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/count-good-triplets/description"
    },
    "1741": {
        "difficulty": "EASY",
        "id": 1741,
        "questionFrontendId": "1636",
        "title": "Sort Array by Increasing Frequency",
        "titleSlug": "sort-array-by-increasing-frequency",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ],
        "companyNames": [
            "microsoft",
            "oracle",
            "goldman_sachs",
            "bloomberg",
            "apple",
            "adobe",
            "walmart_labs",
            "tcs",
            "accenture",
            "google",
            "amazon"
        ],
        "frequencyCount": 11,
        "url": "https://leetcode.com/problems/sort-array-by-increasing-frequency/description"
    },
    "1798": {
        "difficulty": "MEDIUM",
        "id": 1798,
        "questionFrontendId": "1679",
        "title": "Max Number of K-Sum Pairs",
        "titleSlug": "max-number-of-k-sum-pairs",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Two Pointers",
                "slug": "two-pointers"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ],
        "companyNames": [
            "microsoft",
            "bloomberg",
            "apple",
            "adobe",
            "google",
            "amazon"
        ],
        "frequencyCount": 6,
        "url": "https://leetcode.com/problems/max-number-of-k-sum-pairs/description"
    },
    "1890": {
        "difficulty": "MEDIUM",
        "id": 1890,
        "questionFrontendId": "1781",
        "title": "Sum of Beauty of All Substrings",
        "titleSlug": "sum-of-beauty-of-all-substrings",
        "topicTags": [
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Counting",
                "slug": "counting"
            }
        ],
        "companyNames": [
            "microsoft",
            "adobe",
            "google",
            "amazon"
        ],
        "frequencyCount": 4,
        "url": "https://leetcode.com/problems/sum-of-beauty-of-all-substrings/description"
    },
    "1951": {
        "difficulty": "MEDIUM",
        "id": 1951,
        "questionFrontendId": "1823",
        "title": "Find the Winner of the Circular Game",
        "titleSlug": "find-the-winner-of-the-circular-game",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Recursion",
                "slug": "recursion"
            },
            {
                "name": "Queue",
                "slug": "queue"
            },
            {
                "name": "Simulation",
                "slug": "simulation"
            }
        ],
        "companyNames": [
            "microsoft",
            "goldman_sachs",
            "bloomberg",
            "adobe",
            "google",
            "amazon"
        ],
        "frequencyCount": 6,
        "url": "https://leetcode.com/problems/find-the-winner-of-the-circular-game/description"
    },
    "2117": {
        "difficulty": "MEDIUM",
        "id": 2117,
        "questionFrontendId": "2007",
        "title": "Find Original Array From Doubled Array",
        "titleSlug": "find-original-array-from-doubled-array",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ],
        "companyNames": [
            "microsoft",
            "adobe",
            "accenture",
            "google",
            "amazon"
        ],
        "frequencyCount": 5,
        "url": "https://leetcode.com/problems/find-original-array-from-doubled-array/description"
    },
    "2191": {
        "difficulty": "MEDIUM",
        "id": 2191,
        "questionFrontendId": "2086",
        "title": "Minimum Number of Food Buckets to Feed the Hamsters",
        "titleSlug": "minimum-number-of-food-buckets-to-feed-the-hamsters",
        "topicTags": [
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            }
        ],
        "companyNames": [
            "microsoft"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/minimum-number-of-food-buckets-to-feed-the-hamsters/description"
    },
    "2323": {
        "difficulty": "EASY",
        "id": 2323,
        "questionFrontendId": "2220",
        "title": "Minimum Bit Flips to Convert Number",
        "titleSlug": "minimum-bit-flips-to-convert-number",
        "topicTags": [
            {
                "name": "Bit Manipulation",
                "slug": "bit-manipulation"
            }
        ],
        "companyNames": [
            "microsoft",
            "google",
            "amazon"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/minimum-bit-flips-to-convert-number/description"
    },
    "2417": {
        "difficulty": "MEDIUM",
        "id": 2417,
        "questionFrontendId": "2332",
        "title": "The Latest Time to Catch a Bus",
        "titleSlug": "the-latest-time-to-catch-a-bus",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Two Pointers",
                "slug": "two-pointers"
            },
            {
                "name": "Binary Search",
                "slug": "binary-search"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ],
        "companyNames": [
            "microsoft",
            "google"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/the-latest-time-to-catch-a-bus/description"
    },
    "2428": {
        "difficulty": "MEDIUM",
        "id": 2428,
        "questionFrontendId": "2352",
        "title": "Equal Row and Column Pairs",
        "titleSlug": "equal-row-and-column-pairs",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Matrix",
                "slug": "matrix"
            },
            {
                "name": "Simulation",
                "slug": "simulation"
            }
        ],
        "companyNames": [
            "microsoft",
            "apple",
            "adobe",
            "google",
            "amazon"
        ],
        "frequencyCount": 5,
        "url": "https://leetcode.com/problems/equal-row-and-column-pairs/description"
    },
    "2473": {
        "difficulty": "MEDIUM",
        "id": 2473,
        "questionFrontendId": "2342",
        "title": "Max Sum of a Pair With Equal Sum of Digits",
        "titleSlug": "max-sum-of-a-pair-with-equal-sum-of-digits",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            },
            {
                "name": "Heap (Priority Queue)",
                "slug": "heap-priority-queue"
            }
        ],
        "companyNames": [
            "microsoft",
            "amazon"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/max-sum-of-a-pair-with-equal-sum-of-digits/description"
    },
    "2686": {
        "difficulty": "MEDIUM",
        "id": 2686,
        "questionFrontendId": "2662",
        "title": "Minimum Cost of a Path With Special Roads",
        "titleSlug": "minimum-cost-of-a-path-with-special-roads",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Graph",
                "slug": "graph"
            },
            {
                "name": "Heap (Priority Queue)",
                "slug": "heap-priority-queue"
            },
            {
                "name": "Shortest Path",
                "slug": "shortest-path"
            }
        ],
        "companyNames": [
            "microsoft"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/minimum-cost-of-a-path-with-special-roads/description"
    },
    "3260": {
        "difficulty": "HARD",
        "id": 3260,
        "questionFrontendId": "3013",
        "title": "Divide an Array Into Subarrays With Minimum Cost II",
        "titleSlug": "divide-an-array-into-subarrays-with-minimum-cost-ii",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Sliding Window",
                "slug": "sliding-window"
            },
            {
                "name": "Heap (Priority Queue)",
                "slug": "heap-priority-queue"
            }
        ],
        "companyNames": [
            "microsoft"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/divide-an-array-into-subarrays-with-minimum-cost-ii/description"
    },
    "132": {
        "difficulty": "HARD",
        "id": 132,
        "questionFrontendId": "132",
        "title": "Palindrome Partitioning II",
        "titleSlug": "palindrome-partitioning-ii",
        "topicTags": [
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            }
        ],
        "companyNames": [
            "microsoft",
            "bloomberg",
            "apple",
            "amazon"
        ],
        "frequencyCount": 4,
        "url": "https://leetcode.com/problems/palindrome-partitioning-ii/description"
    },
    "145": {
        "difficulty": "EASY",
        "id": 145,
        "questionFrontendId": "145",
        "title": "Binary Tree Postorder Traversal",
        "titleSlug": "binary-tree-postorder-traversal",
        "topicTags": [
            {
                "name": "Stack",
                "slug": "stack"
            },
            {
                "name": "Tree",
                "slug": "tree"
            },
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Binary Tree",
                "slug": "binary-tree"
            }
        ],
        "companyNames": [
            "microsoft",
            "bloomberg",
            "apple",
            "adobe",
            "google",
            "amazon"
        ],
        "frequencyCount": 6,
        "url": "https://leetcode.com/problems/binary-tree-postorder-traversal/description"
    },
    "172": {
        "difficulty": "MEDIUM",
        "id": 172,
        "questionFrontendId": "172",
        "title": "Factorial Trailing Zeroes",
        "titleSlug": "factorial-trailing-zeroes",
        "topicTags": [
            {
                "name": "Math",
                "slug": "math"
            }
        ],
        "companyNames": [
            "microsoft",
            "goldman_sachs",
            "bloomberg",
            "google",
            "amazon"
        ],
        "frequencyCount": 5,
        "url": "https://leetcode.com/problems/factorial-trailing-zeroes/description"
    },
    "223": {
        "difficulty": "MEDIUM",
        "id": 223,
        "questionFrontendId": "223",
        "title": "Rectangle Area",
        "titleSlug": "rectangle-area",
        "topicTags": [
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Geometry",
                "slug": "geometry"
            }
        ],
        "companyNames": [
            "microsoft",
            "apple",
            "nvidia",
            "google",
            "amazon"
        ],
        "frequencyCount": 5,
        "url": "https://leetcode.com/problems/rectangle-area/description"
    },
    "292": {
        "difficulty": "EASY",
        "id": 292,
        "questionFrontendId": "292",
        "title": "Nim Game",
        "titleSlug": "nim-game",
        "topicTags": [
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Brainteaser",
                "slug": "brainteaser"
            },
            {
                "name": "Game Theory",
                "slug": "game-theory"
            }
        ],
        "companyNames": [
            "microsoft",
            "apple",
            "adobe",
            "google",
            "amazon"
        ],
        "frequencyCount": 5,
        "url": "https://leetcode.com/problems/nim-game/description"
    },
    "299": {
        "difficulty": "MEDIUM",
        "id": 299,
        "questionFrontendId": "299",
        "title": "Bulls and Cows",
        "titleSlug": "bulls-and-cows",
        "topicTags": [
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Counting",
                "slug": "counting"
            }
        ],
        "companyNames": [
            "microsoft",
            "adobe",
            "google",
            "amazon"
        ],
        "frequencyCount": 4,
        "url": "https://leetcode.com/problems/bulls-and-cows/description"
    },
    "350": {
        "difficulty": "EASY",
        "id": 350,
        "questionFrontendId": "350",
        "title": "Intersection of Two Arrays II",
        "titleSlug": "intersection-of-two-arrays-ii",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Two Pointers",
                "slug": "two-pointers"
            },
            {
                "name": "Binary Search",
                "slug": "binary-search"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ],
        "companyNames": [
            "microsoft",
            "bloomberg",
            "apple",
            "adobe",
            "google",
            "amazon"
        ],
        "frequencyCount": 6,
        "url": "https://leetcode.com/problems/intersection-of-two-arrays-ii/description"
    },
    "433": {
        "difficulty": "MEDIUM",
        "id": 433,
        "questionFrontendId": "433",
        "title": "Minimum Genetic Mutation",
        "titleSlug": "minimum-genetic-mutation",
        "topicTags": [
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Breadth-First Search",
                "slug": "breadth-first-search"
            }
        ],
        "companyNames": [
            "microsoft",
            "bloomberg",
            "apple",
            "adobe",
            "amazon"
        ],
        "frequencyCount": 5,
        "url": "https://leetcode.com/problems/minimum-genetic-mutation/description"
    },
    "446": {
        "difficulty": "HARD",
        "id": 446,
        "questionFrontendId": "446",
        "title": "Arithmetic Slices II - Subsequence",
        "titleSlug": "arithmetic-slices-ii-subsequence",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            }
        ],
        "companyNames": [
            "microsoft",
            "apple",
            "adobe",
            "google",
            "amazon"
        ],
        "frequencyCount": 5,
        "url": "https://leetcode.com/problems/arithmetic-slices-ii-subsequence/description"
    },
    "461": {
        "difficulty": "EASY",
        "id": 461,
        "questionFrontendId": "461",
        "title": "Hamming Distance",
        "titleSlug": "hamming-distance",
        "topicTags": [
            {
                "name": "Bit Manipulation",
                "slug": "bit-manipulation"
            }
        ],
        "companyNames": [
            "microsoft",
            "bloomberg",
            "adobe",
            "amazon"
        ],
        "frequencyCount": 4,
        "url": "https://leetcode.com/problems/hamming-distance/description"
    },
    "623": {
        "difficulty": "MEDIUM",
        "id": 623,
        "questionFrontendId": "623",
        "title": "Add One Row to Tree",
        "titleSlug": "add-one-row-to-tree",
        "topicTags": [
            {
                "name": "Tree",
                "slug": "tree"
            },
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Breadth-First Search",
                "slug": "breadth-first-search"
            },
            {
                "name": "Binary Tree",
                "slug": "binary-tree"
            }
        ],
        "companyNames": [
            "microsoft",
            "google",
            "amazon"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/add-one-row-to-tree/description"
    },
    "669": {
        "difficulty": "MEDIUM",
        "id": 669,
        "questionFrontendId": "669",
        "title": "Trim a Binary Search Tree",
        "titleSlug": "trim-a-binary-search-tree",
        "topicTags": [
            {
                "name": "Tree",
                "slug": "tree"
            },
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Binary Search Tree",
                "slug": "binary-search-tree"
            },
            {
                "name": "Binary Tree",
                "slug": "binary-tree"
            }
        ],
        "companyNames": [
            "microsoft",
            "bloomberg",
            "amazon"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/trim-a-binary-search-tree/description"
    },
    "780": {
        "difficulty": "MEDIUM",
        "id": 780,
        "questionFrontendId": "769",
        "title": "Max Chunks To Make Sorted",
        "titleSlug": "max-chunks-to-make-sorted",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Stack",
                "slug": "stack"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            },
            {
                "name": "Monotonic Stack",
                "slug": "monotonic-stack"
            }
        ],
        "companyNames": [
            "microsoft",
            "bloomberg",
            "apple",
            "google",
            "amazon"
        ],
        "frequencyCount": 5,
        "url": "https://leetcode.com/problems/max-chunks-to-make-sorted/description"
    },
    "812": {
        "difficulty": "EASY",
        "id": 812,
        "questionFrontendId": "796",
        "title": "Rotate String",
        "titleSlug": "rotate-string",
        "topicTags": [
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "String Matching",
                "slug": "string-matching"
            }
        ],
        "companyNames": [
            "microsoft",
            "bloomberg",
            "apple",
            "adobe",
            "tcs",
            "google",
            "amazon"
        ],
        "frequencyCount": 7,
        "url": "https://leetcode.com/problems/rotate-string/description"
    },
    "837": {
        "difficulty": "EASY",
        "id": 837,
        "questionFrontendId": "819",
        "title": "Most Common Word",
        "titleSlug": "most-common-word",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Counting",
                "slug": "counting"
            }
        ],
        "companyNames": [
            "microsoft",
            "apple",
            "google",
            "amazon"
        ],
        "frequencyCount": 4,
        "url": "https://leetcode.com/problems/most-common-word/description"
    },
    "855": {
        "difficulty": "HARD",
        "id": 855,
        "questionFrontendId": "828",
        "title": "Count Unique Characters of All Substrings of a Given String",
        "titleSlug": "count-unique-characters-of-all-substrings-of-a-given-string",
        "topicTags": [
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            }
        ],
        "companyNames": [
            "microsoft",
            "adobe",
            "amazon"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/count-unique-characters-of-all-substrings-of-a-given-string/description"
    },
    "871": {
        "difficulty": "MEDIUM",
        "id": 871,
        "questionFrontendId": "841",
        "title": "Keys and Rooms",
        "titleSlug": "keys-and-rooms",
        "topicTags": [
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Breadth-First Search",
                "slug": "breadth-first-search"
            },
            {
                "name": "Graph",
                "slug": "graph"
            }
        ],
        "companyNames": [
            "microsoft",
            "apple",
            "adobe",
            "walmart_labs",
            "google",
            "amazon"
        ],
        "frequencyCount": 6,
        "url": "https://leetcode.com/problems/keys-and-rooms/description"
    },
    "877": {
        "difficulty": "HARD",
        "id": 877,
        "questionFrontendId": "847",
        "title": "Shortest Path Visiting All Nodes",
        "titleSlug": "shortest-path-visiting-all-nodes",
        "topicTags": [
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Bit Manipulation",
                "slug": "bit-manipulation"
            },
            {
                "name": "Breadth-First Search",
                "slug": "breadth-first-search"
            },
            {
                "name": "Graph",
                "slug": "graph"
            },
            {
                "name": "Bitmask",
                "slug": "bitmask"
            }
        ],
        "companyNames": [
            "microsoft",
            "apple",
            "adobe",
            "google",
            "amazon"
        ],
        "frequencyCount": 5,
        "url": "https://leetcode.com/problems/shortest-path-visiting-all-nodes/description"
    },
    "904": {
        "difficulty": "EASY",
        "id": 904,
        "questionFrontendId": "872",
        "title": "Leaf-Similar Trees",
        "titleSlug": "leaf-similar-trees",
        "topicTags": [
            {
                "name": "Tree",
                "slug": "tree"
            },
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Binary Tree",
                "slug": "binary-tree"
            }
        ],
        "companyNames": [
            "microsoft",
            "apple",
            "adobe",
            "google",
            "amazon"
        ],
        "frequencyCount": 5,
        "url": "https://leetcode.com/problems/leaf-similar-trees/description"
    },
    "941": {
        "difficulty": "EASY",
        "id": 941,
        "questionFrontendId": "905",
        "title": "Sort Array By Parity",
        "titleSlug": "sort-array-by-parity",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Two Pointers",
                "slug": "two-pointers"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ],
        "companyNames": [
            "microsoft",
            "bloomberg",
            "apple",
            "google",
            "amazon"
        ],
        "frequencyCount": 5,
        "url": "https://leetcode.com/problems/sort-array-by-parity/description"
    },
    "975": {
        "difficulty": "EASY",
        "id": 975,
        "questionFrontendId": "938",
        "title": "Range Sum of BST",
        "titleSlug": "range-sum-of-bst",
        "topicTags": [
            {
                "name": "Tree",
                "slug": "tree"
            },
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Binary Search Tree",
                "slug": "binary-search-tree"
            },
            {
                "name": "Binary Tree",
                "slug": "binary-tree"
            }
        ],
        "companyNames": [
            "microsoft",
            "apple",
            "adobe",
            "google",
            "amazon"
        ],
        "frequencyCount": 5,
        "url": "https://leetcode.com/problems/range-sum-of-bst/description"
    },
    "1009": {
        "difficulty": "MEDIUM",
        "id": 1009,
        "questionFrontendId": "969",
        "title": "Pancake Sorting",
        "titleSlug": "pancake-sorting",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Two Pointers",
                "slug": "two-pointers"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ],
        "companyNames": [
            "microsoft",
            "oracle",
            "apple",
            "amazon"
        ],
        "frequencyCount": 4,
        "url": "https://leetcode.com/problems/pancake-sorting/description"
    },
    "1079": {
        "difficulty": "EASY",
        "id": 1079,
        "questionFrontendId": "1022",
        "title": "Sum of Root To Leaf Binary Numbers",
        "titleSlug": "sum-of-root-to-leaf-binary-numbers",
        "topicTags": [
            {
                "name": "Tree",
                "slug": "tree"
            },
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Binary Tree",
                "slug": "binary-tree"
            }
        ],
        "companyNames": [
            "microsoft",
            "amazon"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/sum-of-root-to-leaf-binary-numbers/description"
    },
    "1114": {
        "difficulty": "MEDIUM",
        "id": 1114,
        "questionFrontendId": "1038",
        "title": "Binary Search Tree to Greater Sum Tree",
        "titleSlug": "binary-search-tree-to-greater-sum-tree",
        "topicTags": [
            {
                "name": "Tree",
                "slug": "tree"
            },
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Binary Search Tree",
                "slug": "binary-search-tree"
            },
            {
                "name": "Binary Tree",
                "slug": "binary-tree"
            }
        ],
        "companyNames": [
            "microsoft",
            "bloomberg",
            "amazon"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/binary-search-tree-to-greater-sum-tree/description"
    },
    "1138": {
        "difficulty": "MEDIUM",
        "id": 1138,
        "questionFrontendId": "1052",
        "title": "Grumpy Bookstore Owner",
        "titleSlug": "grumpy-bookstore-owner",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Sliding Window",
                "slug": "sliding-window"
            }
        ],
        "companyNames": [
            "microsoft",
            "apple",
            "walmart_labs",
            "google",
            "amazon"
        ],
        "frequencyCount": 5,
        "url": "https://leetcode.com/problems/grumpy-bookstore-owner/description"
    },
    "1185": {
        "difficulty": "HARD",
        "id": 1185,
        "questionFrontendId": "1095",
        "title": "Find in Mountain Array",
        "titleSlug": "find-in-mountain-array",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Binary Search",
                "slug": "binary-search"
            },
            {
                "name": "Interactive",
                "slug": "interactive"
            }
        ],
        "companyNames": [
            "microsoft",
            "bloomberg",
            "apple",
            "google",
            "amazon"
        ],
        "frequencyCount": 5,
        "url": "https://leetcode.com/problems/find-in-mountain-array/description"
    },
    "1274": {
        "difficulty": "EASY",
        "id": 1274,
        "questionFrontendId": "1360",
        "title": "Number of Days Between Two Dates",
        "titleSlug": "number-of-days-between-two-dates",
        "topicTags": [
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "String",
                "slug": "string"
            }
        ],
        "companyNames": [
            "microsoft",
            "apple",
            "adobe",
            "accenture",
            "google",
            "amazon"
        ],
        "frequencyCount": 6,
        "url": "https://leetcode.com/problems/number-of-days-between-two-dates/description"
    },
    "1275": {
        "difficulty": "MEDIUM",
        "id": 1275,
        "questionFrontendId": "1361",
        "title": "Validate Binary Tree Nodes",
        "titleSlug": "validate-binary-tree-nodes",
        "topicTags": [
            {
                "name": "Tree",
                "slug": "tree"
            },
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Breadth-First Search",
                "slug": "breadth-first-search"
            },
            {
                "name": "Union Find",
                "slug": "union-find"
            },
            {
                "name": "Graph",
                "slug": "graph"
            },
            {
                "name": "Binary Tree",
                "slug": "binary-tree"
            }
        ],
        "companyNames": [
            "microsoft",
            "adobe",
            "google",
            "amazon"
        ],
        "frequencyCount": 4,
        "url": "https://leetcode.com/problems/validate-binary-tree-nodes/description"
    },
    "1418": {
        "difficulty": "MEDIUM",
        "id": 1418,
        "questionFrontendId": "2305",
        "title": "Fair Distribution of Cookies",
        "titleSlug": "fair-distribution-of-cookies",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Backtracking",
                "slug": "backtracking"
            },
            {
                "name": "Bit Manipulation",
                "slug": "bit-manipulation"
            },
            {
                "name": "Bitmask",
                "slug": "bitmask"
            }
        ],
        "companyNames": [
            "microsoft",
            "apple",
            "adobe",
            "google",
            "amazon"
        ],
        "frequencyCount": 5,
        "url": "https://leetcode.com/problems/fair-distribution-of-cookies/description"
    },
    "1446": {
        "difficulty": "MEDIUM",
        "id": 1446,
        "questionFrontendId": "1344",
        "title": "Angle Between Hands of a Clock",
        "titleSlug": "angle-between-hands-of-a-clock",
        "topicTags": [
            {
                "name": "Math",
                "slug": "math"
            }
        ],
        "companyNames": [
            "microsoft",
            "apple",
            "amazon"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/angle-between-hands-of-a-clock/description"
    },
    "1517": {
        "difficulty": "HARD",
        "id": 1517,
        "questionFrontendId": "1416",
        "title": "Restore The Array",
        "titleSlug": "restore-the-array",
        "topicTags": [
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            }
        ],
        "companyNames": [
            "microsoft",
            "google",
            "amazon"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/restore-the-array/description"
    },
    "1556": {
        "difficulty": "EASY",
        "id": 1556,
        "questionFrontendId": "1460",
        "title": "Make Two Arrays Equal by Reversing Subarrays",
        "titleSlug": "make-two-arrays-equal-by-reversing-subarrays",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ],
        "companyNames": [
            "microsoft",
            "amazon"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/make-two-arrays-equal-by-reversing-subarrays/description"
    },
    "1568": {
        "difficulty": "MEDIUM",
        "id": 1568,
        "questionFrontendId": "1457",
        "title": "Pseudo-Palindromic Paths in a Binary Tree",
        "titleSlug": "pseudo-palindromic-paths-in-a-binary-tree",
        "topicTags": [
            {
                "name": "Bit Manipulation",
                "slug": "bit-manipulation"
            },
            {
                "name": "Tree",
                "slug": "tree"
            },
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Breadth-First Search",
                "slug": "breadth-first-search"
            },
            {
                "name": "Binary Tree",
                "slug": "binary-tree"
            }
        ],
        "companyNames": [
            "microsoft",
            "bloomberg",
            "adobe",
            "amazon"
        ],
        "frequencyCount": 4,
        "url": "https://leetcode.com/problems/pseudo-palindromic-paths-in-a-binary-tree/description"
    },
    "1574": {
        "difficulty": "EASY",
        "id": 1574,
        "questionFrontendId": "1464",
        "title": "Maximum Product of Two Elements in an Array",
        "titleSlug": "maximum-product-of-two-elements-in-an-array",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            },
            {
                "name": "Heap (Priority Queue)",
                "slug": "heap-priority-queue"
            }
        ],
        "companyNames": [
            "microsoft",
            "adobe",
            "cisco",
            "amazon"
        ],
        "frequencyCount": 4,
        "url": "https://leetcode.com/problems/maximum-product-of-two-elements-in-an-array/description"
    },
    "1661": {
        "difficulty": "MEDIUM",
        "id": 1661,
        "questionFrontendId": "1557",
        "title": "Minimum Number of Vertices to Reach All Nodes",
        "titleSlug": "minimum-number-of-vertices-to-reach-all-nodes",
        "topicTags": [
            {
                "name": "Graph",
                "slug": "graph"
            }
        ],
        "companyNames": [
            "microsoft",
            "adobe",
            "airbnb",
            "google",
            "amazon"
        ],
        "frequencyCount": 5,
        "url": "https://leetcode.com/problems/minimum-number-of-vertices-to-reach-all-nodes/description"
    },
    "1851": {
        "difficulty": "HARD",
        "id": 1851,
        "questionFrontendId": "1751",
        "title": "Maximum Number of Events That Can Be Attended II",
        "titleSlug": "maximum-number-of-events-that-can-be-attended-ii",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Binary Search",
                "slug": "binary-search"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ],
        "companyNames": [
            "microsoft",
            "oracle",
            "apple",
            "adobe",
            "google",
            "amazon"
        ],
        "frequencyCount": 6,
        "url": "https://leetcode.com/problems/maximum-number-of-events-that-can-be-attended-ii/description"
    },
    "1901": {
        "difficulty": "MEDIUM",
        "id": 1901,
        "questionFrontendId": "1775",
        "title": "Equal Sum Arrays With Minimum Number of Operations",
        "titleSlug": "equal-sum-arrays-with-minimum-number-of-operations",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            },
            {
                "name": "Counting",
                "slug": "counting"
            }
        ],
        "companyNames": [
            "microsoft"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/equal-sum-arrays-with-minimum-number-of-operations/description"
    },
    "2031": {
        "difficulty": "MEDIUM",
        "id": 2031,
        "questionFrontendId": "1884",
        "title": "Egg Drop With 2 Eggs and N Floors",
        "titleSlug": "egg-drop-with-2-eggs-and-n-floors",
        "topicTags": [
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            }
        ],
        "companyNames": [
            "microsoft",
            "bloomberg",
            "google",
            "amazon"
        ],
        "frequencyCount": 4,
        "url": "https://leetcode.com/problems/egg-drop-with-2-eggs-and-n-floors/description"
    },
    "2121": {
        "difficulty": "EASY",
        "id": 2121,
        "questionFrontendId": "1971",
        "title": "Find if Path Exists in Graph",
        "titleSlug": "find-if-path-exists-in-graph",
        "topicTags": [
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Breadth-First Search",
                "slug": "breadth-first-search"
            },
            {
                "name": "Union Find",
                "slug": "union-find"
            },
            {
                "name": "Graph",
                "slug": "graph"
            }
        ],
        "companyNames": [
            "microsoft",
            "bloomberg",
            "google",
            "amazon"
        ],
        "frequencyCount": 4,
        "url": "https://leetcode.com/problems/find-if-path-exists-in-graph/description"
    },
    "2211": {
        "difficulty": "MEDIUM",
        "id": 2211,
        "questionFrontendId": "2090",
        "title": "K Radius Subarray Averages",
        "titleSlug": "k-radius-subarray-averages",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Sliding Window",
                "slug": "sliding-window"
            }
        ],
        "companyNames": [
            "microsoft",
            "apple",
            "adobe",
            "amazon"
        ],
        "frequencyCount": 4,
        "url": "https://leetcode.com/problems/k-radius-subarray-averages/description"
    },
    "2347": {
        "difficulty": "MEDIUM",
        "id": 2347,
        "questionFrontendId": "2265",
        "title": "Count Nodes Equal to Average of Subtree",
        "titleSlug": "count-nodes-equal-to-average-of-subtree",
        "topicTags": [
            {
                "name": "Tree",
                "slug": "tree"
            },
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Binary Tree",
                "slug": "binary-tree"
            }
        ],
        "companyNames": [
            "microsoft",
            "google",
            "amazon"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/count-nodes-equal-to-average-of-subtree/description"
    },
    "2379": {
        "difficulty": "MEDIUM",
        "id": 2379,
        "questionFrontendId": "2285",
        "title": "Maximum Total Importance of Roads",
        "titleSlug": "maximum-total-importance-of-roads",
        "topicTags": [
            {
                "name": "Greedy",
                "slug": "greedy"
            },
            {
                "name": "Graph",
                "slug": "graph"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            },
            {
                "name": "Heap (Priority Queue)",
                "slug": "heap-priority-queue"
            }
        ],
        "companyNames": [
            "microsoft",
            "amazon"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/maximum-total-importance-of-roads/description"
    },
    "2409": {
        "difficulty": "HARD",
        "id": 2409,
        "questionFrontendId": "2328",
        "title": "Number of Increasing Paths in a Grid",
        "titleSlug": "number-of-increasing-paths-in-a-grid",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Breadth-First Search",
                "slug": "breadth-first-search"
            },
            {
                "name": "Graph",
                "slug": "graph"
            },
            {
                "name": "Topological Sort",
                "slug": "topological-sort"
            },
            {
                "name": "Memoization",
                "slug": "memoization"
            },
            {
                "name": "Matrix",
                "slug": "matrix"
            }
        ],
        "companyNames": [
            "microsoft",
            "adobe",
            "amazon"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/number-of-increasing-paths-in-a-grid/description"
    },
    "2493": {
        "difficulty": "MEDIUM",
        "id": 2493,
        "questionFrontendId": "2415",
        "title": "Reverse Odd Levels of Binary Tree",
        "titleSlug": "reverse-odd-levels-of-binary-tree",
        "topicTags": [
            {
                "name": "Tree",
                "slug": "tree"
            },
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Breadth-First Search",
                "slug": "breadth-first-search"
            },
            {
                "name": "Binary Tree",
                "slug": "binary-tree"
            }
        ],
        "companyNames": [
            "microsoft",
            "amazon"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/reverse-odd-levels-of-binary-tree/description"
    },
    "2556": {
        "difficulty": "EASY",
        "id": 2556,
        "questionFrontendId": "2469",
        "title": "Convert the Temperature",
        "titleSlug": "convert-the-temperature",
        "topicTags": [
            {
                "name": "Math",
                "slug": "math"
            }
        ],
        "companyNames": [
            "microsoft",
            "adobe",
            "amazon"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/convert-the-temperature/description"
    },
    "3262": {
        "difficulty": "MEDIUM",
        "id": 3262,
        "questionFrontendId": "2971",
        "title": "Find Polygon With the Largest Perimeter",
        "titleSlug": "find-polygon-with-the-largest-perimeter",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            },
            {
                "name": "Prefix Sum",
                "slug": "prefix-sum"
            }
        ],
        "companyNames": [
            "microsoft",
            "bloomberg",
            "apple",
            "amazon"
        ],
        "frequencyCount": 4,
        "url": "https://leetcode.com/problems/find-polygon-with-the-largest-perimeter/description"
    },
    "3336": {
        "difficulty": "MEDIUM",
        "id": 3336,
        "questionFrontendId": "3100",
        "title": "Water Bottles II",
        "titleSlug": "water-bottles-ii",
        "topicTags": [
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Simulation",
                "slug": "simulation"
            }
        ],
        "companyNames": [
            "microsoft"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/water-bottles-ii/description"
    },
    "107": {
        "difficulty": "MEDIUM",
        "id": 107,
        "questionFrontendId": "107",
        "title": "Binary Tree Level Order Traversal II",
        "titleSlug": "binary-tree-level-order-traversal-ii",
        "topicTags": [
            {
                "name": "Tree",
                "slug": "tree"
            },
            {
                "name": "Breadth-First Search",
                "slug": "breadth-first-search"
            },
            {
                "name": "Binary Tree",
                "slug": "binary-tree"
            }
        ],
        "companyNames": [
            "microsoft",
            "google",
            "amazon"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/binary-tree-level-order-traversal-ii/description"
    },
    "154": {
        "difficulty": "HARD",
        "id": 154,
        "questionFrontendId": "154",
        "title": "Find Minimum in Rotated Sorted Array II",
        "titleSlug": "find-minimum-in-rotated-sorted-array-ii",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Binary Search",
                "slug": "binary-search"
            }
        ],
        "companyNames": [
            "microsoft",
            "bloomberg",
            "apple",
            "adobe",
            "google",
            "amazon"
        ],
        "frequencyCount": 6,
        "url": "https://leetcode.com/problems/find-minimum-in-rotated-sorted-array-ii/description"
    },
    "190": {
        "difficulty": "EASY",
        "id": 190,
        "questionFrontendId": "190",
        "title": "Reverse Bits",
        "titleSlug": "reverse-bits",
        "topicTags": [
            {
                "name": "Divide and Conquer",
                "slug": "divide-and-conquer"
            },
            {
                "name": "Bit Manipulation",
                "slug": "bit-manipulation"
            }
        ],
        "companyNames": [
            "microsoft",
            "apple",
            "adobe",
            "nvidia",
            "airbnb",
            "google",
            "amazon"
        ],
        "frequencyCount": 7,
        "url": "https://leetcode.com/problems/reverse-bits/description"
    },
    "222": {
        "difficulty": "EASY",
        "id": 222,
        "questionFrontendId": "222",
        "title": "Count Complete Tree Nodes",
        "titleSlug": "count-complete-tree-nodes",
        "topicTags": [
            {
                "name": "Binary Search",
                "slug": "binary-search"
            },
            {
                "name": "Bit Manipulation",
                "slug": "bit-manipulation"
            },
            {
                "name": "Tree",
                "slug": "tree"
            },
            {
                "name": "Binary Tree",
                "slug": "binary-tree"
            }
        ],
        "companyNames": [
            "microsoft",
            "bloomberg",
            "apple",
            "adobe",
            "google",
            "amazon"
        ],
        "frequencyCount": 6,
        "url": "https://leetcode.com/problems/count-complete-tree-nodes/description"
    },
    "257": {
        "difficulty": "EASY",
        "id": 257,
        "questionFrontendId": "257",
        "title": "Binary Tree Paths",
        "titleSlug": "binary-tree-paths",
        "topicTags": [
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Backtracking",
                "slug": "backtracking"
            },
            {
                "name": "Tree",
                "slug": "tree"
            },
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Binary Tree",
                "slug": "binary-tree"
            }
        ],
        "companyNames": [
            "microsoft",
            "bloomberg",
            "apple",
            "google",
            "amazon"
        ],
        "frequencyCount": 5,
        "url": "https://leetcode.com/problems/binary-tree-paths/description"
    },
    "309": {
        "difficulty": "MEDIUM",
        "id": 309,
        "questionFrontendId": "309",
        "title": "Best Time to Buy and Sell Stock with Cooldown",
        "titleSlug": "best-time-to-buy-and-sell-stock-with-cooldown",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            }
        ],
        "companyNames": [
            "microsoft",
            "apple",
            "adobe",
            "google",
            "amazon"
        ],
        "frequencyCount": 5,
        "url": "https://leetcode.com/problems/best-time-to-buy-and-sell-stock-with-cooldown/description"
    },
    "325": {
        "difficulty": "MEDIUM",
        "id": 325,
        "questionFrontendId": "325",
        "title": "Maximum Size Subarray Sum Equals k",
        "titleSlug": "maximum-size-subarray-sum-equals-k",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Prefix Sum",
                "slug": "prefix-sum"
            }
        ],
        "companyNames": [
            "microsoft",
            "amazon"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/maximum-size-subarray-sum-equals-k/description"
    },
    "326": {
        "difficulty": "EASY",
        "id": 326,
        "questionFrontendId": "326",
        "title": "Power of Three",
        "titleSlug": "power-of-three",
        "topicTags": [
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Recursion",
                "slug": "recursion"
            }
        ],
        "companyNames": [
            "microsoft",
            "goldman_sachs",
            "apple",
            "google",
            "amazon"
        ],
        "frequencyCount": 5,
        "url": "https://leetcode.com/problems/power-of-three/description"
    },
    "359": {
        "difficulty": "EASY",
        "id": 359,
        "questionFrontendId": "359",
        "title": "Logger Rate Limiter",
        "titleSlug": "logger-rate-limiter",
        "topicTags": [
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Design",
                "slug": "design"
            },
            {
                "name": "Data Stream",
                "slug": "data-stream"
            }
        ],
        "companyNames": [
            "microsoft",
            "oracle",
            "bloomberg",
            "google",
            "amazon"
        ],
        "frequencyCount": 5,
        "url": "https://leetcode.com/problems/logger-rate-limiter/description"
    },
    "413": {
        "difficulty": "MEDIUM",
        "id": 413,
        "questionFrontendId": "413",
        "title": "Arithmetic Slices",
        "titleSlug": "arithmetic-slices",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            }
        ],
        "companyNames": [
            "microsoft",
            "bloomberg",
            "google",
            "amazon"
        ],
        "frequencyCount": 4,
        "url": "https://leetcode.com/problems/arithmetic-slices/description"
    },
    "421": {
        "difficulty": "MEDIUM",
        "id": 421,
        "questionFrontendId": "421",
        "title": "Maximum XOR of Two Numbers in an Array",
        "titleSlug": "maximum-xor-of-two-numbers-in-an-array",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Bit Manipulation",
                "slug": "bit-manipulation"
            },
            {
                "name": "Trie",
                "slug": "trie"
            }
        ],
        "companyNames": [
            "microsoft",
            "goldman_sachs",
            "adobe",
            "google",
            "amazon"
        ],
        "frequencyCount": 5,
        "url": "https://leetcode.com/problems/maximum-xor-of-two-numbers-in-an-array/description"
    },
    "453": {
        "difficulty": "MEDIUM",
        "id": 453,
        "questionFrontendId": "453",
        "title": "Minimum Moves to Equal Array Elements",
        "titleSlug": "minimum-moves-to-equal-array-elements",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Math",
                "slug": "math"
            }
        ],
        "companyNames": [
            "microsoft",
            "oracle",
            "adobe",
            "google",
            "amazon"
        ],
        "frequencyCount": 5,
        "url": "https://leetcode.com/problems/minimum-moves-to-equal-array-elements/description"
    },
    "457": {
        "difficulty": "MEDIUM",
        "id": 457,
        "questionFrontendId": "457",
        "title": "Circular Array Loop",
        "titleSlug": "circular-array-loop",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Two Pointers",
                "slug": "two-pointers"
            }
        ],
        "companyNames": [
            "microsoft",
            "bloomberg",
            "adobe",
            "amazon"
        ],
        "frequencyCount": 4,
        "url": "https://leetcode.com/problems/circular-array-loop/description"
    },
    "476": {
        "difficulty": "EASY",
        "id": 476,
        "questionFrontendId": "476",
        "title": "Number Complement",
        "titleSlug": "number-complement",
        "topicTags": [
            {
                "name": "Bit Manipulation",
                "slug": "bit-manipulation"
            }
        ],
        "companyNames": [
            "microsoft",
            "google",
            "amazon"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/number-complement/description"
    },
    "477": {
        "difficulty": "MEDIUM",
        "id": 477,
        "questionFrontendId": "477",
        "title": "Total Hamming Distance",
        "titleSlug": "total-hamming-distance",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Bit Manipulation",
                "slug": "bit-manipulation"
            }
        ],
        "companyNames": [
            "microsoft"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/total-hamming-distance/description"
    },
    "583": {
        "difficulty": "MEDIUM",
        "id": 583,
        "questionFrontendId": "583",
        "title": "Delete Operation for Two Strings",
        "titleSlug": "delete-operation-for-two-strings",
        "topicTags": [
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            }
        ],
        "companyNames": [
            "microsoft",
            "bloomberg",
            "apple",
            "google",
            "amazon"
        ],
        "frequencyCount": 5,
        "url": "https://leetcode.com/problems/delete-operation-for-two-strings/description"
    },
    "601": {
        "difficulty": "HARD",
        "id": 601,
        "questionFrontendId": "601",
        "title": "Human Traffic of Stadium",
        "titleSlug": "human-traffic-of-stadium",
        "topicTags": [
            {
                "name": "Database",
                "slug": "database"
            }
        ],
        "companyNames": [
            "microsoft",
            "amazon"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/human-traffic-of-stadium/description"
    },
    "609": {
        "difficulty": "MEDIUM",
        "id": 609,
        "questionFrontendId": "609",
        "title": "Find Duplicate File in System",
        "titleSlug": "find-duplicate-file-in-system",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "String",
                "slug": "string"
            }
        ],
        "companyNames": [
            "microsoft",
            "google",
            "amazon"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/find-duplicate-file-in-system/description"
    },
    "624": {
        "difficulty": "MEDIUM",
        "id": 624,
        "questionFrontendId": "624",
        "title": "Maximum Distance in Arrays",
        "titleSlug": "maximum-distance-in-arrays",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            }
        ],
        "companyNames": [
            "microsoft",
            "google",
            "amazon"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/maximum-distance-in-arrays/description"
    },
    "639": {
        "difficulty": "HARD",
        "id": 639,
        "questionFrontendId": "639",
        "title": "Decode Ways II",
        "titleSlug": "decode-ways-ii",
        "topicTags": [
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            }
        ],
        "companyNames": [
            "microsoft",
            "bloomberg"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/decode-ways-ii/description"
    },
    "645": {
        "difficulty": "EASY",
        "id": 645,
        "questionFrontendId": "645",
        "title": "Set Mismatch",
        "titleSlug": "set-mismatch",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Bit Manipulation",
                "slug": "bit-manipulation"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ],
        "companyNames": [
            "microsoft",
            "bloomberg",
            "apple",
            "adobe",
            "google",
            "amazon"
        ],
        "frequencyCount": 6,
        "url": "https://leetcode.com/problems/set-mismatch/description"
    },
    "657": {
        "difficulty": "EASY",
        "id": 657,
        "questionFrontendId": "657",
        "title": "Robot Return to Origin",
        "titleSlug": "robot-return-to-origin",
        "topicTags": [
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Simulation",
                "slug": "simulation"
            }
        ],
        "companyNames": [
            "microsoft",
            "goldman_sachs",
            "google"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/robot-return-to-origin/description"
    },
    "665": {
        "difficulty": "MEDIUM",
        "id": 665,
        "questionFrontendId": "665",
        "title": "Non-decreasing Array",
        "titleSlug": "non-decreasing-array",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            }
        ],
        "companyNames": [
            "microsoft",
            "google",
            "amazon"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/non-decreasing-array/description"
    },
    "720": {
        "difficulty": "MEDIUM",
        "id": 720,
        "questionFrontendId": "720",
        "title": "Longest Word in Dictionary",
        "titleSlug": "longest-word-in-dictionary",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Trie",
                "slug": "trie"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ],
        "companyNames": [
            "microsoft",
            "amazon"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/longest-word-in-dictionary/description"
    },
    "843": {
        "difficulty": "MEDIUM",
        "id": 843,
        "questionFrontendId": "823",
        "title": "Binary Trees With Factors",
        "titleSlug": "binary-trees-with-factors",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ],
        "companyNames": [
            "microsoft",
            "bloomberg",
            "adobe",
            "google",
            "amazon"
        ],
        "frequencyCount": 5,
        "url": "https://leetcode.com/problems/binary-trees-with-factors/description"
    },
    "870": {
        "difficulty": "MEDIUM",
        "id": 870,
        "questionFrontendId": "840",
        "title": "Magic Squares In Grid",
        "titleSlug": "magic-squares-in-grid",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Matrix",
                "slug": "matrix"
            }
        ],
        "companyNames": [
            "microsoft",
            "google",
            "amazon"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/magic-squares-in-grid/description"
    },
    "887": {
        "difficulty": "HARD",
        "id": 887,
        "questionFrontendId": "857",
        "title": "Minimum Cost to Hire K Workers",
        "titleSlug": "minimum-cost-to-hire-k-workers",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            },
            {
                "name": "Heap (Priority Queue)",
                "slug": "heap-priority-queue"
            }
        ],
        "companyNames": [
            "microsoft",
            "bloomberg",
            "google",
            "amazon"
        ],
        "frequencyCount": 4,
        "url": "https://leetcode.com/problems/minimum-cost-to-hire-k-workers/description"
    },
    "889": {
        "difficulty": "EASY",
        "id": 889,
        "questionFrontendId": "859",
        "title": "Buddy Strings",
        "titleSlug": "buddy-strings",
        "topicTags": [
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "String",
                "slug": "string"
            }
        ],
        "companyNames": [
            "microsoft",
            "doordash",
            "google",
            "amazon"
        ],
        "frequencyCount": 4,
        "url": "https://leetcode.com/problems/buddy-strings/description"
    },
    "892": {
        "difficulty": "HARD",
        "id": 892,
        "questionFrontendId": "862",
        "title": "Shortest Subarray with Sum at Least K",
        "titleSlug": "shortest-subarray-with-sum-at-least-k",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Binary Search",
                "slug": "binary-search"
            },
            {
                "name": "Queue",
                "slug": "queue"
            },
            {
                "name": "Sliding Window",
                "slug": "sliding-window"
            },
            {
                "name": "Heap (Priority Queue)",
                "slug": "heap-priority-queue"
            },
            {
                "name": "Prefix Sum",
                "slug": "prefix-sum"
            },
            {
                "name": "Monotonic Queue",
                "slug": "monotonic-queue"
            }
        ],
        "companyNames": [
            "microsoft",
            "goldman_sachs",
            "adobe",
            "google",
            "amazon"
        ],
        "frequencyCount": 5,
        "url": "https://leetcode.com/problems/shortest-subarray-with-sum-at-least-k/description"
    },
    "901": {
        "difficulty": "MEDIUM",
        "id": 901,
        "questionFrontendId": "870",
        "title": "Advantage Shuffle",
        "titleSlug": "advantage-shuffle",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Two Pointers",
                "slug": "two-pointers"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ],
        "companyNames": [
            "microsoft",
            "amazon"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/advantage-shuffle/description"
    },
    "916": {
        "difficulty": "MEDIUM",
        "id": 916,
        "questionFrontendId": "880",
        "title": "Decoded String at Index",
        "titleSlug": "decoded-string-at-index",
        "topicTags": [
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Stack",
                "slug": "stack"
            }
        ],
        "companyNames": [
            "microsoft",
            "apple",
            "adobe",
            "amazon"
        ],
        "frequencyCount": 4,
        "url": "https://leetcode.com/problems/decoded-string-at-index/description"
    },
    "921": {
        "difficulty": "MEDIUM",
        "id": 921,
        "questionFrontendId": "885",
        "title": "Spiral Matrix III",
        "titleSlug": "spiral-matrix-iii",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Matrix",
                "slug": "matrix"
            },
            {
                "name": "Simulation",
                "slug": "simulation"
            }
        ],
        "companyNames": [
            "microsoft",
            "bloomberg",
            "apple",
            "google",
            "amazon"
        ],
        "frequencyCount": 5,
        "url": "https://leetcode.com/problems/spiral-matrix-iii/description"
    },
    "930": {
        "difficulty": "MEDIUM",
        "id": 930,
        "questionFrontendId": "894",
        "title": "All Possible Full Binary Trees",
        "titleSlug": "all-possible-full-binary-trees",
        "topicTags": [
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Tree",
                "slug": "tree"
            },
            {
                "name": "Recursion",
                "slug": "recursion"
            },
            {
                "name": "Memoization",
                "slug": "memoization"
            },
            {
                "name": "Binary Tree",
                "slug": "binary-tree"
            }
        ],
        "companyNames": [
            "microsoft",
            "bloomberg",
            "apple",
            "adobe",
            "nvidia",
            "google",
            "amazon"
        ],
        "frequencyCount": 7,
        "url": "https://leetcode.com/problems/all-possible-full-binary-trees/description"
    },
    "942": {
        "difficulty": "HARD",
        "id": 942,
        "questionFrontendId": "906",
        "title": "Super Palindromes",
        "titleSlug": "super-palindromes",
        "topicTags": [
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Enumeration",
                "slug": "enumeration"
            }
        ],
        "companyNames": [
            "microsoft",
            "google"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/super-palindromes/description"
    },
    "951": {
        "difficulty": "MEDIUM",
        "id": 951,
        "questionFrontendId": "915",
        "title": "Partition Array into Disjoint Intervals",
        "titleSlug": "partition-array-into-disjoint-intervals",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            }
        ],
        "companyNames": [
            "microsoft"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/partition-array-into-disjoint-intervals/description"
    },
    "954": {
        "difficulty": "MEDIUM",
        "id": 954,
        "questionFrontendId": "918",
        "title": "Maximum Sum Circular Subarray",
        "titleSlug": "maximum-sum-circular-subarray",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Divide and Conquer",
                "slug": "divide-and-conquer"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Queue",
                "slug": "queue"
            },
            {
                "name": "Monotonic Queue",
                "slug": "monotonic-queue"
            }
        ],
        "companyNames": [
            "microsoft",
            "apple",
            "adobe",
            "google",
            "amazon"
        ],
        "frequencyCount": 5,
        "url": "https://leetcode.com/problems/maximum-sum-circular-subarray/description"
    },
    "956": {
        "difficulty": "HARD",
        "id": 956,
        "questionFrontendId": "920",
        "title": "Number of Music Playlists",
        "titleSlug": "number-of-music-playlists",
        "topicTags": [
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Combinatorics",
                "slug": "combinatorics"
            }
        ],
        "companyNames": [
            "microsoft",
            "bloomberg",
            "adobe",
            "google",
            "amazon"
        ],
        "frequencyCount": 5,
        "url": "https://leetcode.com/problems/number-of-music-playlists/description"
    },
    "968": {
        "difficulty": "MEDIUM",
        "id": 968,
        "questionFrontendId": "932",
        "title": "Beautiful Array",
        "titleSlug": "beautiful-array",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Divide and Conquer",
                "slug": "divide-and-conquer"
            }
        ],
        "companyNames": [
            "microsoft",
            "google",
            "amazon"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/beautiful-array/description"
    },
    "976": {
        "difficulty": "MEDIUM",
        "id": 976,
        "questionFrontendId": "939",
        "title": "Minimum Area Rectangle",
        "titleSlug": "minimum-area-rectangle",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Geometry",
                "slug": "geometry"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ],
        "companyNames": [
            "microsoft",
            "oracle",
            "google",
            "amazon"
        ],
        "frequencyCount": 4,
        "url": "https://leetcode.com/problems/minimum-area-rectangle/description"
    },
    "988": {
        "difficulty": "MEDIUM",
        "id": 988,
        "questionFrontendId": "951",
        "title": "Flip Equivalent Binary Trees",
        "titleSlug": "flip-equivalent-binary-trees",
        "topicTags": [
            {
                "name": "Tree",
                "slug": "tree"
            },
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Binary Tree",
                "slug": "binary-tree"
            }
        ],
        "companyNames": [
            "microsoft",
            "adobe",
            "google",
            "amazon"
        ],
        "frequencyCount": 4,
        "url": "https://leetcode.com/problems/flip-equivalent-binary-trees/description"
    },
    "1002": {
        "difficulty": "MEDIUM",
        "id": 1002,
        "questionFrontendId": "962",
        "title": "Maximum Width Ramp",
        "titleSlug": "maximum-width-ramp",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Stack",
                "slug": "stack"
            },
            {
                "name": "Monotonic Stack",
                "slug": "monotonic-stack"
            }
        ],
        "companyNames": [
            "microsoft",
            "adobe",
            "google",
            "amazon"
        ],
        "frequencyCount": 4,
        "url": "https://leetcode.com/problems/maximum-width-ramp/description"
    },
    "1007": {
        "difficulty": "MEDIUM",
        "id": 1007,
        "questionFrontendId": "967",
        "title": "Numbers With Same Consecutive Differences",
        "titleSlug": "numbers-with-same-consecutive-differences",
        "topicTags": [
            {
                "name": "Backtracking",
                "slug": "backtracking"
            },
            {
                "name": "Breadth-First Search",
                "slug": "breadth-first-search"
            }
        ],
        "companyNames": [
            "microsoft",
            "bloomberg",
            "adobe",
            "google",
            "amazon"
        ],
        "frequencyCount": 5,
        "url": "https://leetcode.com/problems/numbers-with-same-consecutive-differences/description"
    },
    "1130": {
        "difficulty": "MEDIUM",
        "id": 1130,
        "questionFrontendId": "1049",
        "title": "Last Stone Weight II",
        "titleSlug": "last-stone-weight-ii",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            }
        ],
        "companyNames": [
            "microsoft"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/last-stone-weight-ii/description"
    },
    "1137": {
        "difficulty": "EASY",
        "id": 1137,
        "questionFrontendId": "1051",
        "title": "Height Checker",
        "titleSlug": "height-checker",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            },
            {
                "name": "Counting Sort",
                "slug": "counting-sort"
            }
        ],
        "companyNames": [
            "microsoft",
            "google",
            "amazon"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/height-checker/description"
    },
    "1155": {
        "difficulty": "MEDIUM",
        "id": 1155,
        "questionFrontendId": "1070",
        "title": "Product Sales Analysis III",
        "titleSlug": "product-sales-analysis-iii",
        "topicTags": [
            {
                "name": "Database",
                "slug": "database"
            }
        ],
        "companyNames": [
            "microsoft",
            "adobe",
            "google",
            "amazon"
        ],
        "frequencyCount": 4,
        "url": "https://leetcode.com/problems/product-sales-analysis-iii/description"
    },
    "1176": {
        "difficulty": "MEDIUM",
        "id": 1176,
        "questionFrontendId": "1244",
        "title": "Design A Leaderboard",
        "titleSlug": "design-a-leaderboard",
        "topicTags": [
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Design",
                "slug": "design"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ],
        "companyNames": [
            "microsoft",
            "bloomberg",
            "google",
            "amazon"
        ],
        "frequencyCount": 4,
        "url": "https://leetcode.com/problems/design-a-leaderboard/description"
    },
    "1179": {
        "difficulty": "EASY",
        "id": 1179,
        "questionFrontendId": "511",
        "title": "Game Play Analysis I",
        "titleSlug": "game-play-analysis-i",
        "topicTags": [
            {
                "name": "Database",
                "slug": "database"
            }
        ],
        "companyNames": [
            "microsoft",
            "bloomberg",
            "apple",
            "adobe",
            "google",
            "amazon"
        ],
        "frequencyCount": 6,
        "url": "https://leetcode.com/problems/game-play-analysis-i/description"
    },
    "1184": {
        "difficulty": "MEDIUM",
        "id": 1184,
        "questionFrontendId": "1094",
        "title": "Car Pooling",
        "titleSlug": "car-pooling",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            },
            {
                "name": "Heap (Priority Queue)",
                "slug": "heap-priority-queue"
            },
            {
                "name": "Simulation",
                "slug": "simulation"
            },
            {
                "name": "Prefix Sum",
                "slug": "prefix-sum"
            }
        ],
        "companyNames": [
            "microsoft",
            "apple",
            "google",
            "amazon"
        ],
        "frequencyCount": 4,
        "url": "https://leetcode.com/problems/car-pooling/description"
    },
    "1253": {
        "difficulty": "MEDIUM",
        "id": 1253,
        "questionFrontendId": "1329",
        "title": "Sort the Matrix Diagonally",
        "titleSlug": "sort-the-matrix-diagonally",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            },
            {
                "name": "Matrix",
                "slug": "matrix"
            }
        ],
        "companyNames": [
            "microsoft",
            "bloomberg",
            "amazon"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/sort-the-matrix-diagonally/description"
    },
    "1261": {
        "difficulty": "MEDIUM",
        "id": 1261,
        "questionFrontendId": "1156",
        "title": "Swap For Longest Repeated Character Substring",
        "titleSlug": "swap-for-longest-repeated-character-substring",
        "topicTags": [
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Sliding Window",
                "slug": "sliding-window"
            }
        ],
        "companyNames": [
            "microsoft"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/swap-for-longest-repeated-character-substring/description"
    },
    "1290": {
        "difficulty": "HARD",
        "id": 1290,
        "questionFrontendId": "1187",
        "title": "Make Array Strictly Increasing",
        "titleSlug": "make-array-strictly-increasing",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Binary Search",
                "slug": "binary-search"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ],
        "companyNames": [
            "microsoft",
            "google"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/make-array-strictly-increasing/description"
    },
    "1296": {
        "difficulty": "HARD",
        "id": 1296,
        "questionFrontendId": "1483",
        "title": "Kth Ancestor of a Tree Node",
        "titleSlug": "kth-ancestor-of-a-tree-node",
        "topicTags": [
            {
                "name": "Binary Search",
                "slug": "binary-search"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Tree",
                "slug": "tree"
            },
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Breadth-First Search",
                "slug": "breadth-first-search"
            },
            {
                "name": "Design",
                "slug": "design"
            }
        ],
        "companyNames": [
            "microsoft",
            "adobe",
            "google",
            "amazon"
        ],
        "frequencyCount": 4,
        "url": "https://leetcode.com/problems/kth-ancestor-of-a-tree-node/description"
    },
    "1297": {
        "difficulty": "EASY",
        "id": 1297,
        "questionFrontendId": "1189",
        "title": "Maximum Number of Balloons",
        "titleSlug": "maximum-number-of-balloons",
        "topicTags": [
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Counting",
                "slug": "counting"
            }
        ],
        "companyNames": [
            "microsoft",
            "apple",
            "amazon"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/maximum-number-of-balloons/description"
    },
    "1300": {
        "difficulty": "HARD",
        "id": 1300,
        "questionFrontendId": "1192",
        "title": "Critical Connections in a Network",
        "titleSlug": "critical-connections-in-a-network",
        "topicTags": [
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Graph",
                "slug": "graph"
            },
            {
                "name": "Biconnected Component",
                "slug": "biconnected-component"
            }
        ],
        "companyNames": [
            "microsoft",
            "bloomberg",
            "adobe",
            "google",
            "amazon"
        ],
        "frequencyCount": 5,
        "url": "https://leetcode.com/problems/critical-connections-in-a-network/description"
    },
    "1321": {
        "difficulty": "MEDIUM",
        "id": 1321,
        "questionFrontendId": "1208",
        "title": "Get Equal Substrings Within Budget",
        "titleSlug": "get-equal-substrings-within-budget",
        "topicTags": [
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Binary Search",
                "slug": "binary-search"
            },
            {
                "name": "Sliding Window",
                "slug": "sliding-window"
            },
            {
                "name": "Prefix Sum",
                "slug": "prefix-sum"
            }
        ],
        "companyNames": [
            "microsoft",
            "amazon"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/get-equal-substrings-within-budget/description"
    },
    "1330": {
        "difficulty": "MEDIUM",
        "id": 1330,
        "questionFrontendId": "1218",
        "title": "Longest Arithmetic Subsequence of Given Difference",
        "titleSlug": "longest-arithmetic-subsequence-of-given-difference",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            }
        ],
        "companyNames": [
            "microsoft",
            "bloomberg",
            "apple",
            "adobe",
            "google",
            "amazon"
        ],
        "frequencyCount": 6,
        "url": "https://leetcode.com/problems/longest-arithmetic-subsequence-of-given-difference/description"
    },
    "1362": {
        "difficulty": "MEDIUM",
        "id": 1362,
        "questionFrontendId": "1227",
        "title": "Airplane Seat Assignment Probability",
        "titleSlug": "airplane-seat-assignment-probability",
        "topicTags": [
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Brainteaser",
                "slug": "brainteaser"
            },
            {
                "name": "Probability and Statistics",
                "slug": "probability-and-statistics"
            }
        ],
        "companyNames": [
            "microsoft",
            "amazon"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/airplane-seat-assignment-probability/description"
    },
    "1368": {
        "difficulty": "MEDIUM",
        "id": 1368,
        "questionFrontendId": "1242",
        "title": "Web Crawler Multithreaded",
        "titleSlug": "web-crawler-multithreaded",
        "topicTags": [
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Breadth-First Search",
                "slug": "breadth-first-search"
            },
            {
                "name": "Concurrency",
                "slug": "concurrency"
            }
        ],
        "companyNames": [
            "microsoft"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/web-crawler-multithreaded/description"
    },
    "1386": {
        "difficulty": "EASY",
        "id": 1386,
        "questionFrontendId": "1260",
        "title": "Shift 2D Grid",
        "titleSlug": "shift-2d-grid",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Matrix",
                "slug": "matrix"
            },
            {
                "name": "Simulation",
                "slug": "simulation"
            }
        ],
        "companyNames": [
            "microsoft",
            "amazon"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/shift-2d-grid/description"
    },
    "1390": {
        "difficulty": "EASY",
        "id": 1390,
        "questionFrontendId": "1251",
        "title": "Average Selling Price",
        "titleSlug": "average-selling-price",
        "topicTags": [
            {
                "name": "Database",
                "slug": "database"
            }
        ],
        "companyNames": [
            "microsoft",
            "bloomberg",
            "apple",
            "adobe",
            "google",
            "amazon"
        ],
        "frequencyCount": 6,
        "url": "https://leetcode.com/problems/average-selling-price/description"
    },
    "1392": {
        "difficulty": "EASY",
        "id": 1392,
        "questionFrontendId": "2215",
        "title": "Find the Difference of Two Arrays",
        "titleSlug": "find-the-difference-of-two-arrays",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            }
        ],
        "companyNames": [
            "microsoft",
            "adobe",
            "google",
            "amazon"
        ],
        "frequencyCount": 4,
        "url": "https://leetcode.com/problems/find-the-difference-of-two-arrays/description"
    },
    "1411": {
        "difficulty": "EASY",
        "id": 1411,
        "questionFrontendId": "1290",
        "title": "Convert Binary Number in a Linked List to Integer",
        "titleSlug": "convert-binary-number-in-a-linked-list-to-integer",
        "topicTags": [
            {
                "name": "Linked List",
                "slug": "linked-list"
            },
            {
                "name": "Math",
                "slug": "math"
            }
        ],
        "companyNames": [
            "microsoft",
            "adobe",
            "google",
            "amazon"
        ],
        "frequencyCount": 4,
        "url": "https://leetcode.com/problems/convert-binary-number-in-a-linked-list-to-integer/description"
    },
    "1422": {
        "difficulty": "MEDIUM",
        "id": 1422,
        "questionFrontendId": "1296",
        "title": "Divide Array in Sets of K Consecutive Numbers",
        "titleSlug": "divide-array-in-sets-of-k-consecutive-numbers",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ],
        "companyNames": [
            "microsoft",
            "bloomberg",
            "google"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/divide-array-in-sets-of-k-consecutive-numbers/description"
    },
    "1427": {
        "difficulty": "MEDIUM",
        "id": 1427,
        "questionFrontendId": "1305",
        "title": "All Elements in Two Binary Search Trees",
        "titleSlug": "all-elements-in-two-binary-search-trees",
        "topicTags": [
            {
                "name": "Tree",
                "slug": "tree"
            },
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Binary Search Tree",
                "slug": "binary-search-tree"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            },
            {
                "name": "Binary Tree",
                "slug": "binary-tree"
            }
        ],
        "companyNames": [
            "microsoft",
            "adobe",
            "amazon"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/all-elements-in-two-binary-search-trees/description"
    },
    "1429": {
        "difficulty": "HARD",
        "id": 1429,
        "questionFrontendId": "1307",
        "title": "Verbal Arithmetic Puzzle",
        "titleSlug": "verbal-arithmetic-puzzle",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Backtracking",
                "slug": "backtracking"
            }
        ],
        "companyNames": [
            "microsoft",
            "google"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/verbal-arithmetic-puzzle/description"
    },
    "1437": {
        "difficulty": "HARD",
        "id": 1437,
        "questionFrontendId": "1312",
        "title": "Minimum Insertion Steps to Make a String Palindrome",
        "titleSlug": "minimum-insertion-steps-to-make-a-string-palindrome",
        "topicTags": [
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            }
        ],
        "companyNames": [
            "microsoft",
            "adobe",
            "google",
            "amazon"
        ],
        "frequencyCount": 4,
        "url": "https://leetcode.com/problems/minimum-insertion-steps-to-make-a-string-palindrome/description"
    },
    "1554": {
        "difficulty": "MEDIUM",
        "id": 1554,
        "questionFrontendId": "1443",
        "title": "Minimum Time to Collect All Apples in a Tree",
        "titleSlug": "minimum-time-to-collect-all-apples-in-a-tree",
        "topicTags": [
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Tree",
                "slug": "tree"
            },
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Breadth-First Search",
                "slug": "breadth-first-search"
            }
        ],
        "companyNames": [
            "microsoft",
            "apple",
            "google",
            "amazon"
        ],
        "frequencyCount": 4,
        "url": "https://leetcode.com/problems/minimum-time-to-collect-all-apples-in-a-tree/description"
    },
    "1559": {
        "difficulty": "HARD",
        "id": 1559,
        "questionFrontendId": "1463",
        "title": "Cherry Pickup II",
        "titleSlug": "cherry-pickup-ii",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Matrix",
                "slug": "matrix"
            }
        ],
        "companyNames": [
            "microsoft",
            "bloomberg",
            "adobe",
            "google",
            "amazon"
        ],
        "frequencyCount": 5,
        "url": "https://leetcode.com/problems/cherry-pickup-ii/description"
    },
    "1570": {
        "difficulty": "EASY",
        "id": 1570,
        "questionFrontendId": "1475",
        "title": "Final Prices With a Special Discount in a Shop",
        "titleSlug": "final-prices-with-a-special-discount-in-a-shop",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Stack",
                "slug": "stack"
            },
            {
                "name": "Monotonic Stack",
                "slug": "monotonic-stack"
            }
        ],
        "companyNames": [
            "microsoft",
            "google"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/final-prices-with-a-special-discount-in-a-shop/description"
    },
    "1571": {
        "difficulty": "HARD",
        "id": 1571,
        "questionFrontendId": "1478",
        "title": "Allocate Mailboxes",
        "titleSlug": "allocate-mailboxes",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ],
        "companyNames": [
            "microsoft",
            "bloomberg",
            "adobe",
            "amazon"
        ],
        "frequencyCount": 4,
        "url": "https://leetcode.com/problems/allocate-mailboxes/description"
    },
    "1619": {
        "difficulty": "EASY",
        "id": 1619,
        "questionFrontendId": "1496",
        "title": "Path Crossing",
        "titleSlug": "path-crossing",
        "topicTags": [
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "String",
                "slug": "string"
            }
        ],
        "companyNames": [
            "microsoft",
            "adobe",
            "google",
            "amazon"
        ],
        "frequencyCount": 4,
        "url": "https://leetcode.com/problems/path-crossing/description"
    },
    "1667": {
        "difficulty": "MEDIUM",
        "id": 1667,
        "questionFrontendId": "1545",
        "title": "Find Kth Bit in Nth Binary String",
        "titleSlug": "find-kth-bit-in-nth-binary-string",
        "topicTags": [
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Recursion",
                "slug": "recursion"
            },
            {
                "name": "Simulation",
                "slug": "simulation"
            }
        ],
        "companyNames": [
            "microsoft",
            "amazon"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/find-kth-bit-in-nth-binary-string/description"
    },
    "1670": {
        "difficulty": "EASY",
        "id": 1670,
        "questionFrontendId": "1527",
        "title": "Patients With a Condition",
        "titleSlug": "patients-with-a-condition",
        "topicTags": [
            {
                "name": "Database",
                "slug": "database"
            }
        ],
        "companyNames": [
            "microsoft",
            "bloomberg"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/patients-with-a-condition/description"
    },
    "1675": {
        "difficulty": "MEDIUM",
        "id": 1675,
        "questionFrontendId": "1552",
        "title": "Magnetic Force Between Two Balls",
        "titleSlug": "magnetic-force-between-two-balls",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Binary Search",
                "slug": "binary-search"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ],
        "companyNames": [
            "microsoft",
            "apple",
            "adobe",
            "google",
            "amazon"
        ],
        "frequencyCount": 5,
        "url": "https://leetcode.com/problems/magnetic-force-between-two-balls/description"
    },
    "1731": {
        "difficulty": "MEDIUM",
        "id": 1731,
        "questionFrontendId": "1609",
        "title": "Even Odd Tree",
        "titleSlug": "even-odd-tree",
        "topicTags": [
            {
                "name": "Tree",
                "slug": "tree"
            },
            {
                "name": "Breadth-First Search",
                "slug": "breadth-first-search"
            },
            {
                "name": "Binary Tree",
                "slug": "binary-tree"
            }
        ],
        "companyNames": [
            "microsoft",
            "bloomberg",
            "apple",
            "adobe"
        ],
        "frequencyCount": 4,
        "url": "https://leetcode.com/problems/even-odd-tree/description"
    },
    "1773": {
        "difficulty": "EASY",
        "id": 1773,
        "questionFrontendId": "1633",
        "title": "Percentage of Users Attended a Contest",
        "titleSlug": "percentage-of-users-attended-a-contest",
        "topicTags": [
            {
                "name": "Database",
                "slug": "database"
            }
        ],
        "companyNames": [
            "microsoft",
            "bloomberg",
            "amazon"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/percentage-of-users-attended-a-contest/description"
    },
    "1810": {
        "difficulty": "MEDIUM",
        "id": 1810,
        "questionFrontendId": "1666",
        "title": "Change the Root of a Binary Tree",
        "titleSlug": "change-the-root-of-a-binary-tree",
        "topicTags": [
            {
                "name": "Tree",
                "slug": "tree"
            },
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Binary Tree",
                "slug": "binary-tree"
            }
        ],
        "companyNames": [
            "microsoft",
            "google"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/change-the-root-of-a-binary-tree/description"
    },
    "1811": {
        "difficulty": "EASY",
        "id": 1811,
        "questionFrontendId": "1667",
        "title": "Fix Names in a Table",
        "titleSlug": "fix-names-in-a-table",
        "topicTags": [
            {
                "name": "Database",
                "slug": "database"
            }
        ],
        "companyNames": [
            "microsoft",
            "bloomberg",
            "apple",
            "adobe",
            "google",
            "amazon"
        ],
        "frequencyCount": 6,
        "url": "https://leetcode.com/problems/fix-names-in-a-table/description"
    },
    "1883": {
        "difficulty": "MEDIUM",
        "id": 1883,
        "questionFrontendId": "1740",
        "title": "Find Distance in a Binary Tree",
        "titleSlug": "find-distance-in-a-binary-tree",
        "topicTags": [
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Tree",
                "slug": "tree"
            },
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Breadth-First Search",
                "slug": "breadth-first-search"
            },
            {
                "name": "Binary Tree",
                "slug": "binary-tree"
            }
        ],
        "companyNames": [
            "microsoft",
            "google",
            "amazon"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/find-distance-in-a-binary-tree/description"
    },
    "1900": {
        "difficulty": "MEDIUM",
        "id": 1900,
        "questionFrontendId": "1774",
        "title": "Closest Dessert Cost",
        "titleSlug": "closest-dessert-cost",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Backtracking",
                "slug": "backtracking"
            }
        ],
        "companyNames": [
            "microsoft",
            "apple",
            "google"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/closest-dessert-cost/description"
    },
    "1938": {
        "difficulty": "EASY",
        "id": 1938,
        "questionFrontendId": "1827",
        "title": "Minimum Operations to Make the Array Increasing",
        "titleSlug": "minimum-operations-to-make-the-array-increasing",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            }
        ],
        "companyNames": [
            "microsoft",
            "amazon"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/minimum-operations-to-make-the-array-increasing/description"
    },
    "1942": {
        "difficulty": "EASY",
        "id": 1942,
        "questionFrontendId": "1789",
        "title": "Primary Department for Each Employee",
        "titleSlug": "primary-department-for-each-employee",
        "topicTags": [
            {
                "name": "Database",
                "slug": "database"
            }
        ],
        "companyNames": [
            "microsoft",
            "google",
            "amazon"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/primary-department-for-each-employee/description"
    },
    "1960": {
        "difficulty": "EASY",
        "id": 1960,
        "questionFrontendId": "1832",
        "title": "Check if the Sentence Is Pangram",
        "titleSlug": "check-if-the-sentence-is-pangram",
        "topicTags": [
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "String",
                "slug": "string"
            }
        ],
        "companyNames": [
            "microsoft",
            "goldman_sachs",
            "bloomberg",
            "adobe",
            "tcs",
            "google",
            "amazon"
        ],
        "frequencyCount": 7,
        "url": "https://leetcode.com/problems/check-if-the-sentence-is-pangram/description"
    },
    "1986": {
        "difficulty": "HARD",
        "id": 1986,
        "questionFrontendId": "1857",
        "title": "Largest Color Value in a Directed Graph",
        "titleSlug": "largest-color-value-in-a-directed-graph",
        "topicTags": [
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Graph",
                "slug": "graph"
            },
            {
                "name": "Topological Sort",
                "slug": "topological-sort"
            },
            {
                "name": "Memoization",
                "slug": "memoization"
            },
            {
                "name": "Counting",
                "slug": "counting"
            }
        ],
        "companyNames": [
            "microsoft",
            "bloomberg",
            "apple",
            "adobe",
            "google",
            "amazon"
        ],
        "frequencyCount": 6,
        "url": "https://leetcode.com/problems/largest-color-value-in-a-directed-graph/description"
    },
    "1995": {
        "difficulty": "MEDIUM",
        "id": 1995,
        "questionFrontendId": "1865",
        "title": "Finding Pairs With a Certain Sum",
        "titleSlug": "finding-pairs-with-a-certain-sum",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Design",
                "slug": "design"
            }
        ],
        "companyNames": [
            "microsoft",
            "bloomberg"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/finding-pairs-with-a-certain-sum/description"
    },
    "2021": {
        "difficulty": "MEDIUM",
        "id": 2021,
        "questionFrontendId": "1910",
        "title": "Remove All Occurrences of a Substring",
        "titleSlug": "remove-all-occurrences-of-a-substring",
        "topicTags": [
            {
                "name": "String",
                "slug": "string"
            }
        ],
        "companyNames": [
            "microsoft",
            "bloomberg",
            "adobe",
            "walmart_labs",
            "google",
            "amazon"
        ],
        "frequencyCount": 6,
        "url": "https://leetcode.com/problems/remove-all-occurrences-of-a-substring/description"
    },
    "2054": {
        "difficulty": "MEDIUM",
        "id": 2054,
        "questionFrontendId": "1942",
        "title": "The Number of the Smallest Unoccupied Chair",
        "titleSlug": "the-number-of-the-smallest-unoccupied-chair",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Heap (Priority Queue)",
                "slug": "heap-priority-queue"
            }
        ],
        "companyNames": [
            "microsoft",
            "amazon"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/the-number-of-the-smallest-unoccupied-chair/description"
    },
    "2060": {
        "difficulty": "HARD",
        "id": 2060,
        "questionFrontendId": "1932",
        "title": "Merge BSTs to Create Single BST",
        "titleSlug": "merge-bsts-to-create-single-bst",
        "topicTags": [
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Binary Search",
                "slug": "binary-search"
            },
            {
                "name": "Tree",
                "slug": "tree"
            },
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Binary Tree",
                "slug": "binary-tree"
            }
        ],
        "companyNames": [
            "microsoft",
            "bloomberg",
            "amazon"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/merge-bsts-to-create-single-bst/description"
    },
    "2067": {
        "difficulty": "MEDIUM",
        "id": 2067,
        "questionFrontendId": "1937",
        "title": "Maximum Number of Points with Cost",
        "titleSlug": "maximum-number-of-points-with-cost",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Matrix",
                "slug": "matrix"
            }
        ],
        "companyNames": [
            "microsoft",
            "bloomberg",
            "google",
            "amazon"
        ],
        "frequencyCount": 4,
        "url": "https://leetcode.com/problems/maximum-number-of-points-with-cost/description"
    },
    "2148": {
        "difficulty": "EASY",
        "id": 2148,
        "questionFrontendId": "2037",
        "title": "Minimum Number of Moves to Seat Everyone",
        "titleSlug": "minimum-number-of-moves-to-seat-everyone",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ],
        "companyNames": [
            "microsoft",
            "bloomberg",
            "adobe",
            "google",
            "amazon"
        ],
        "frequencyCount": 5,
        "url": "https://leetcode.com/problems/minimum-number-of-moves-to-seat-everyone/description"
    },
    "2171": {
        "difficulty": "HARD",
        "id": 2171,
        "questionFrontendId": "2045",
        "title": "Second Minimum Time to Reach Destination",
        "titleSlug": "second-minimum-time-to-reach-destination",
        "topicTags": [
            {
                "name": "Breadth-First Search",
                "slug": "breadth-first-search"
            },
            {
                "name": "Graph",
                "slug": "graph"
            },
            {
                "name": "Shortest Path",
                "slug": "shortest-path"
            }
        ],
        "companyNames": [
            "microsoft",
            "google"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/second-minimum-time-to-reach-destination/description"
    },
    "2182": {
        "difficulty": "MEDIUM",
        "id": 2182,
        "questionFrontendId": "2058",
        "title": "Find the Minimum and Maximum Number of Nodes Between Critical Points",
        "titleSlug": "find-the-minimum-and-maximum-number-of-nodes-between-critical-points",
        "topicTags": [
            {
                "name": "Linked List",
                "slug": "linked-list"
            }
        ],
        "companyNames": [
            "microsoft",
            "google",
            "amazon"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/find-the-minimum-and-maximum-number-of-nodes-between-critical-points/description"
    },
    "2213": {
        "difficulty": "HARD",
        "id": 2213,
        "questionFrontendId": "2092",
        "title": "Find All People With Secret",
        "titleSlug": "find-all-people-with-secret",
        "topicTags": [
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Breadth-First Search",
                "slug": "breadth-first-search"
            },
            {
                "name": "Union Find",
                "slug": "union-find"
            },
            {
                "name": "Graph",
                "slug": "graph"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ],
        "companyNames": [
            "microsoft",
            "bloomberg",
            "adobe",
            "google",
            "amazon"
        ],
        "frequencyCount": 5,
        "url": "https://leetcode.com/problems/find-all-people-with-secret/description"
    },
    "2219": {
        "difficulty": "EASY",
        "id": 2219,
        "questionFrontendId": "2114",
        "title": "Maximum Number of Words Found in Sentences",
        "titleSlug": "maximum-number-of-words-found-in-sentences",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "String",
                "slug": "string"
            }
        ],
        "companyNames": [
            "microsoft",
            "bloomberg",
            "apple",
            "google"
        ],
        "frequencyCount": 4,
        "url": "https://leetcode.com/problems/maximum-number-of-words-found-in-sentences/description"
    },
    "2264": {
        "difficulty": "EASY",
        "id": 2264,
        "questionFrontendId": "2160",
        "title": "Minimum Sum of Four Digit Number After Splitting Digits",
        "titleSlug": "minimum-sum-of-four-digit-number-after-splitting-digits",
        "topicTags": [
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ],
        "companyNames": [
            "microsoft",
            "apple",
            "amazon"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/minimum-sum-of-four-digit-number-after-splitting-digits/description"
    },
    "2316": {
        "difficulty": "EASY",
        "id": 2316,
        "questionFrontendId": "2210",
        "title": "Count Hills and Valleys in an Array",
        "titleSlug": "count-hills-and-valleys-in-an-array",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            }
        ],
        "companyNames": [
            "microsoft"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/count-hills-and-valleys-in-an-array/description"
    },
    "2340": {
        "difficulty": "HARD",
        "id": 2340,
        "questionFrontendId": "2262",
        "title": "Total Appeal of A String",
        "titleSlug": "total-appeal-of-a-string",
        "topicTags": [
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            }
        ],
        "companyNames": [
            "microsoft",
            "amazon"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/total-appeal-of-a-string/description"
    },
    "2350": {
        "difficulty": "EASY",
        "id": 2350,
        "questionFrontendId": "2239",
        "title": "Find Closest Number to Zero",
        "titleSlug": "find-closest-number-to-zero",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            }
        ],
        "companyNames": [
            "microsoft",
            "google",
            "amazon"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/find-closest-number-to-zero/description"
    },
    "2352": {
        "difficulty": "MEDIUM",
        "id": 2352,
        "questionFrontendId": "2241",
        "title": "Design an ATM Machine",
        "titleSlug": "design-an-atm-machine",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            },
            {
                "name": "Design",
                "slug": "design"
            }
        ],
        "companyNames": [
            "microsoft",
            "google"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/design-an-atm-machine/description"
    },
    "2356": {
        "difficulty": "MEDIUM",
        "id": 2356,
        "questionFrontendId": "2275",
        "title": "Largest Combination With Bitwise AND Greater Than Zero",
        "titleSlug": "largest-combination-with-bitwise-and-greater-than-zero",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Bit Manipulation",
                "slug": "bit-manipulation"
            },
            {
                "name": "Counting",
                "slug": "counting"
            }
        ],
        "companyNames": [
            "microsoft",
            "adobe"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/largest-combination-with-bitwise-and-greater-than-zero/description"
    },
    "2384": {
        "difficulty": "EASY",
        "id": 2384,
        "questionFrontendId": "2236",
        "title": "Root Equals Sum of Children",
        "titleSlug": "root-equals-sum-of-children",
        "topicTags": [
            {
                "name": "Tree",
                "slug": "tree"
            },
            {
                "name": "Binary Tree",
                "slug": "binary-tree"
            }
        ],
        "companyNames": [
            "microsoft",
            "apple",
            "adobe",
            "google",
            "amazon"
        ],
        "frequencyCount": 5,
        "url": "https://leetcode.com/problems/root-equals-sum-of-children/description"
    },
    "2439": {
        "difficulty": "HARD",
        "id": 2439,
        "questionFrontendId": "2360",
        "title": "Longest Cycle in a Graph",
        "titleSlug": "longest-cycle-in-a-graph",
        "topicTags": [
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Graph",
                "slug": "graph"
            },
            {
                "name": "Topological Sort",
                "slug": "topological-sort"
            }
        ],
        "companyNames": [
            "microsoft",
            "google",
            "amazon"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/longest-cycle-in-a-graph/description"
    },
    "2443": {
        "difficulty": "MEDIUM",
        "id": 2443,
        "questionFrontendId": "2369",
        "title": "Check if There is a Valid Partition For The Array",
        "titleSlug": "check-if-there-is-a-valid-partition-for-the-array",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            }
        ],
        "companyNames": [
            "microsoft",
            "adobe",
            "google",
            "amazon"
        ],
        "frequencyCount": 4,
        "url": "https://leetcode.com/problems/check-if-there-is-a-valid-partition-for-the-array/description"
    },
    "2478": {
        "difficulty": "MEDIUM",
        "id": 2478,
        "questionFrontendId": "2401",
        "title": "Longest Nice Subarray",
        "titleSlug": "longest-nice-subarray",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Bit Manipulation",
                "slug": "bit-manipulation"
            },
            {
                "name": "Sliding Window",
                "slug": "sliding-window"
            }
        ],
        "companyNames": [
            "microsoft",
            "apple",
            "google",
            "amazon"
        ],
        "frequencyCount": 4,
        "url": "https://leetcode.com/problems/longest-nice-subarray/description"
    },
    "2495": {
        "difficulty": "EASY",
        "id": 2495,
        "questionFrontendId": "2356",
        "title": "Number of Unique Subjects Taught by Each Teacher",
        "titleSlug": "number-of-unique-subjects-taught-by-each-teacher",
        "topicTags": [
            {
                "name": "Database",
                "slug": "database"
            }
        ],
        "companyNames": [
            "microsoft",
            "bloomberg",
            "google",
            "amazon"
        ],
        "frequencyCount": 4,
        "url": "https://leetcode.com/problems/number-of-unique-subjects-taught-by-each-teacher/description"
    },
    "2549": {
        "difficulty": "HARD",
        "id": 2549,
        "questionFrontendId": "2454",
        "title": "Next Greater Element IV",
        "titleSlug": "next-greater-element-iv",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Binary Search",
                "slug": "binary-search"
            },
            {
                "name": "Stack",
                "slug": "stack"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            },
            {
                "name": "Heap (Priority Queue)",
                "slug": "heap-priority-queue"
            },
            {
                "name": "Monotonic Stack",
                "slug": "monotonic-stack"
            }
        ],
        "companyNames": [
            "microsoft"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/next-greater-element-iv/description"
    },
    "2552": {
        "difficulty": "MEDIUM",
        "id": 2552,
        "questionFrontendId": "2461",
        "title": "Maximum Sum of Distinct Subarrays With Length K",
        "titleSlug": "maximum-sum-of-distinct-subarrays-with-length-k",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Sliding Window",
                "slug": "sliding-window"
            }
        ],
        "companyNames": [
            "microsoft",
            "nvidia",
            "google",
            "amazon"
        ],
        "frequencyCount": 4,
        "url": "https://leetcode.com/problems/maximum-sum-of-distinct-subarrays-with-length-k/description"
    },
    "2557": {
        "difficulty": "MEDIUM",
        "id": 2557,
        "questionFrontendId": "2470",
        "title": "Number of Subarrays With LCM Equal to K",
        "titleSlug": "number-of-subarrays-with-lcm-equal-to-k",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Number Theory",
                "slug": "number-theory"
            }
        ],
        "companyNames": [
            "microsoft"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/number-of-subarrays-with-lcm-equal-to-k/description"
    },
    "2591": {
        "difficulty": "MEDIUM",
        "id": 2591,
        "questionFrontendId": "2498",
        "title": "Frog Jump II",
        "titleSlug": "frog-jump-ii",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Binary Search",
                "slug": "binary-search"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            }
        ],
        "companyNames": [
            "microsoft",
            "google",
            "amazon"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/frog-jump-ii/description"
    },
    "2609": {
        "difficulty": "MEDIUM",
        "id": 2609,
        "questionFrontendId": "2521",
        "title": "Distinct Prime Factors of Product of Array",
        "titleSlug": "distinct-prime-factors-of-product-of-array",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Number Theory",
                "slug": "number-theory"
            }
        ],
        "companyNames": [
            "microsoft"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/distinct-prime-factors-of-product-of-array/description"
    },
    "2645": {
        "difficulty": "EASY",
        "id": 2645,
        "questionFrontendId": "2582",
        "title": "Pass the Pillow",
        "titleSlug": "pass-the-pillow",
        "topicTags": [
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Simulation",
                "slug": "simulation"
            }
        ],
        "companyNames": [
            "microsoft",
            "google",
            "amazon"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/pass-the-pillow/description"
    },
    "2677": {
        "difficulty": "MEDIUM",
        "id": 2677,
        "questionFrontendId": "2641",
        "title": "Cousins in Binary Tree II",
        "titleSlug": "cousins-in-binary-tree-ii",
        "topicTags": [
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Tree",
                "slug": "tree"
            },
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Breadth-First Search",
                "slug": "breadth-first-search"
            },
            {
                "name": "Binary Tree",
                "slug": "binary-tree"
            }
        ],
        "companyNames": [
            "microsoft",
            "amazon"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/cousins-in-binary-tree-ii/description"
    },
    "2756": {
        "difficulty": "EASY",
        "id": 2756,
        "questionFrontendId": "2706",
        "title": "Buy Two Chocolates",
        "titleSlug": "buy-two-chocolates",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ],
        "companyNames": [
            "microsoft",
            "bloomberg",
            "adobe",
            "google",
            "amazon"
        ],
        "frequencyCount": 5,
        "url": "https://leetcode.com/problems/buy-two-chocolates/description"
    },
    "2778": {
        "difficulty": "MEDIUM",
        "id": 2778,
        "questionFrontendId": "2671",
        "title": "Frequency Tracker",
        "titleSlug": "frequency-tracker",
        "topicTags": [
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Design",
                "slug": "design"
            }
        ],
        "companyNames": [
            "microsoft"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/frequency-tracker/description"
    },
    "2804": {
        "difficulty": "MEDIUM",
        "id": 2804,
        "questionFrontendId": "2705",
        "title": "Compact Object",
        "titleSlug": "compact-object",
        "topicTags": [],
        "companyNames": [
            "microsoft"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/compact-object/description"
    },
    "2820": {
        "difficulty": "EASY",
        "id": 2820,
        "questionFrontendId": "2703",
        "title": "Return Length of Arguments Passed",
        "titleSlug": "return-length-of-arguments-passed",
        "topicTags": [],
        "companyNames": [
            "microsoft",
            "bloomberg",
            "apple",
            "google",
            "amazon"
        ],
        "frequencyCount": 5,
        "url": "https://leetcode.com/problems/return-length-of-arguments-passed/description"
    },
    "2850": {
        "difficulty": "MEDIUM",
        "id": 2850,
        "questionFrontendId": "2745",
        "title": "Construct the Longest New String",
        "titleSlug": "construct-the-longest-new-string",
        "topicTags": [
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            },
            {
                "name": "Brainteaser",
                "slug": "brainteaser"
            }
        ],
        "companyNames": [
            "microsoft"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/construct-the-longest-new-string/description"
    },
    "2871": {
        "difficulty": "MEDIUM",
        "id": 2871,
        "questionFrontendId": "2816",
        "title": "Double a Number Represented as a Linked List",
        "titleSlug": "double-a-number-represented-as-a-linked-list",
        "topicTags": [
            {
                "name": "Linked List",
                "slug": "linked-list"
            },
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Stack",
                "slug": "stack"
            }
        ],
        "companyNames": [
            "microsoft",
            "bloomberg",
            "nvidia",
            "google",
            "amazon"
        ],
        "frequencyCount": 5,
        "url": "https://leetcode.com/problems/double-a-number-represented-as-a-linked-list/description"
    },
    "3045": {
        "difficulty": "EASY",
        "id": 3045,
        "questionFrontendId": "2855",
        "title": "Minimum Right Shifts to Sort the Array",
        "titleSlug": "minimum-right-shifts-to-sort-the-array",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            }
        ],
        "companyNames": [
            "microsoft",
            "accenture",
            "amazon"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/minimum-right-shifts-to-sort-the-array/description"
    },
    "3094": {
        "difficulty": "MEDIUM",
        "id": 3094,
        "questionFrontendId": "2870",
        "title": "Minimum Number of Operations to Make Array Empty",
        "titleSlug": "minimum-number-of-operations-to-make-array-empty",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            },
            {
                "name": "Counting",
                "slug": "counting"
            }
        ],
        "companyNames": [
            "microsoft",
            "bloomberg",
            "apple",
            "adobe",
            "amazon"
        ],
        "frequencyCount": 5,
        "url": "https://leetcode.com/problems/minimum-number-of-operations-to-make-array-empty/description"
    },
    "3183": {
        "difficulty": "EASY",
        "id": 3183,
        "questionFrontendId": "2917",
        "title": "Find the K-or of an Array",
        "titleSlug": "find-the-k-or-of-an-array",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Bit Manipulation",
                "slug": "bit-manipulation"
            }
        ],
        "companyNames": [
            "microsoft",
            "amazon"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/find-the-k-or-of-an-array/description"
    },
    "3194": {
        "difficulty": "EASY",
        "id": 3194,
        "questionFrontendId": "2942",
        "title": "Find Words Containing Character",
        "titleSlug": "find-words-containing-character",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "String",
                "slug": "string"
            }
        ],
        "companyNames": [
            "microsoft",
            "adobe",
            "amazon"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/find-words-containing-character/description"
    },
    "3213": {
        "difficulty": "MEDIUM",
        "id": 3213,
        "questionFrontendId": "2962",
        "title": "Count Subarrays Where Max Element Appears at Least K Times",
        "titleSlug": "count-subarrays-where-max-element-appears-at-least-k-times",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Sliding Window",
                "slug": "sliding-window"
            }
        ],
        "companyNames": [
            "microsoft",
            "apple",
            "adobe",
            "amazon"
        ],
        "frequencyCount": 4,
        "url": "https://leetcode.com/problems/count-subarrays-where-max-element-appears-at-least-k-times/description"
    },
    "3235": {
        "difficulty": "MEDIUM",
        "id": 3235,
        "questionFrontendId": "2976",
        "title": "Minimum Cost to Convert String I",
        "titleSlug": "minimum-cost-to-convert-string-i",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Graph",
                "slug": "graph"
            },
            {
                "name": "Shortest Path",
                "slug": "shortest-path"
            }
        ],
        "companyNames": [
            "microsoft",
            "adobe",
            "google",
            "amazon"
        ],
        "frequencyCount": 4,
        "url": "https://leetcode.com/problems/minimum-cost-to-convert-string-i/description"
    },
    "3321": {
        "difficulty": "EASY",
        "id": 3321,
        "questionFrontendId": "3024",
        "title": "Type of Triangle",
        "titleSlug": "type-of-triangle",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ],
        "companyNames": [
            "microsoft"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/type-of-triangle/description"
    },
    "3371": {
        "difficulty": "EASY",
        "id": 3371,
        "questionFrontendId": "3099",
        "title": "Harshad Number",
        "titleSlug": "harshad-number",
        "topicTags": [
            {
                "name": "Math",
                "slug": "math"
            }
        ],
        "companyNames": [
            "microsoft"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/harshad-number/description"
    },
    "3405": {
        "difficulty": "MEDIUM",
        "id": 3405,
        "questionFrontendId": "3121",
        "title": "Count the Number of Special Characters II",
        "titleSlug": "count-the-number-of-special-characters-ii",
        "topicTags": [
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "String",
                "slug": "string"
            }
        ],
        "companyNames": [
            "microsoft",
            "bloomberg",
            "google",
            "amazon"
        ],
        "frequencyCount": 4,
        "url": "https://leetcode.com/problems/count-the-number-of-special-characters-ii/description"
    },
    "3412": {
        "difficulty": "EASY",
        "id": 3412,
        "questionFrontendId": "3146",
        "title": "Permutation Difference between Two Strings",
        "titleSlug": "permutation-difference-between-two-strings",
        "topicTags": [
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "String",
                "slug": "string"
            }
        ],
        "companyNames": [
            "microsoft",
            "accenture"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/permutation-difference-between-two-strings/description"
    },
    "3418": {
        "difficulty": "MEDIUM",
        "id": 3418,
        "questionFrontendId": "3185",
        "title": "Count Pairs That Form a Complete Day II",
        "titleSlug": "count-pairs-that-form-a-complete-day-ii",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Counting",
                "slug": "counting"
            }
        ],
        "companyNames": [
            "microsoft"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/count-pairs-that-form-a-complete-day-ii/description"
    },
    "3459": {
        "difficulty": "HARD",
        "id": 3459,
        "questionFrontendId": "3197",
        "title": "Find the Minimum Area to Cover All Ones II",
        "titleSlug": "find-the-minimum-area-to-cover-all-ones-ii",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Matrix",
                "slug": "matrix"
            },
            {
                "name": "Enumeration",
                "slug": "enumeration"
            }
        ],
        "companyNames": [
            "microsoft"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/find-the-minimum-area-to-cover-all-ones-ii/description"
    },
    "3479": {
        "difficulty": "MEDIUM",
        "id": 3479,
        "questionFrontendId": "3234",
        "title": "Count the Number of Substrings With Dominant Ones",
        "titleSlug": "count-the-number-of-substrings-with-dominant-ones",
        "topicTags": [
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Sliding Window",
                "slug": "sliding-window"
            },
            {
                "name": "Enumeration",
                "slug": "enumeration"
            }
        ],
        "companyNames": [
            "microsoft",
            "google"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/count-the-number-of-substrings-with-dominant-ones/description"
    },
    "3525": {
        "difficulty": "MEDIUM",
        "id": 3525,
        "questionFrontendId": "3259",
        "title": "Maximum Energy Boost From Two Drinks",
        "titleSlug": "maximum-energy-boost-from-two-drinks",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            }
        ],
        "companyNames": [
            "microsoft"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/maximum-energy-boost-from-two-drinks/description"
    },
    "1431": {
        "difficulty": "MEDIUM",
        "id": 1431,
        "questionFrontendId": "2192",
        "title": "All Ancestors of a Node in a Directed Acyclic Graph",
        "titleSlug": "all-ancestors-of-a-node-in-a-directed-acyclic-graph",
        "topicTags": [
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Breadth-First Search",
                "slug": "breadth-first-search"
            },
            {
                "name": "Graph",
                "slug": "graph"
            },
            {
                "name": "Topological Sort",
                "slug": "topological-sort"
            }
        ],
        "companyNames": [
            "oracle",
            "google"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/all-ancestors-of-a-node-in-a-directed-acyclic-graph/description"
    },
    "1496": {
        "difficulty": "EASY",
        "id": 1496,
        "questionFrontendId": "1380",
        "title": "Lucky Numbers in a Matrix",
        "titleSlug": "lucky-numbers-in-a-matrix",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Matrix",
                "slug": "matrix"
            }
        ],
        "companyNames": [
            "oracle",
            "cisco",
            "amazon"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/lucky-numbers-in-a-matrix/description"
    },
    "1526": {
        "difficulty": "MEDIUM",
        "id": 1526,
        "questionFrontendId": "1410",
        "title": "HTML Entity Parser",
        "titleSlug": "html-entity-parser",
        "topicTags": [
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "String",
                "slug": "string"
            }
        ],
        "companyNames": [
            "oracle",
            "google"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/html-entity-parser/description"
    },
    "2651": {
        "difficulty": "MEDIUM",
        "id": 2651,
        "questionFrontendId": "2580",
        "title": "Count Ways to Group Overlapping Ranges",
        "titleSlug": "count-ways-to-group-overlapping-ranges",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ],
        "companyNames": [
            "oracle"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/count-ways-to-group-overlapping-ranges/description"
    },
    "2679": {
        "difficulty": "EASY",
        "id": 2679,
        "questionFrontendId": "2549",
        "title": "Count Distinct Numbers on Board",
        "titleSlug": "count-distinct-numbers-on-board",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Simulation",
                "slug": "simulation"
            }
        ],
        "companyNames": [
            "oracle",
            "apple",
            "amazon"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/count-distinct-numbers-on-board/description"
    },
    "3032": {
        "difficulty": "HARD",
        "id": 3032,
        "questionFrontendId": "2836",
        "title": "Maximize Value of Function in a Ball Passing Game",
        "titleSlug": "maximize-value-of-function-in-a-ball-passing-game",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Bit Manipulation",
                "slug": "bit-manipulation"
            }
        ],
        "companyNames": [
            "oracle"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/maximize-value-of-function-in-a-ball-passing-game/description"
    },
    "3244": {
        "difficulty": "MEDIUM",
        "id": 3244,
        "questionFrontendId": "3012",
        "title": "Minimize Length of Array Using Operations",
        "titleSlug": "minimize-length-of-array-using-operations",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            },
            {
                "name": "Number Theory",
                "slug": "number-theory"
            }
        ],
        "companyNames": [
            "oracle"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/minimize-length-of-array-using-operations/description"
    },
    "3271": {
        "difficulty": "MEDIUM",
        "id": 3271,
        "questionFrontendId": "3015",
        "title": "Count the Number of Houses at a Certain Distance I",
        "titleSlug": "count-the-number-of-houses-at-a-certain-distance-i",
        "topicTags": [
            {
                "name": "Breadth-First Search",
                "slug": "breadth-first-search"
            },
            {
                "name": "Graph",
                "slug": "graph"
            },
            {
                "name": "Prefix Sum",
                "slug": "prefix-sum"
            }
        ],
        "companyNames": [
            "oracle"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/count-the-number-of-houses-at-a-certain-distance-i/description"
    },
    "3310": {
        "difficulty": "HARD",
        "id": 3310,
        "questionFrontendId": "3017",
        "title": "Count the Number of Houses at a Certain Distance II",
        "titleSlug": "count-the-number-of-houses-at-a-certain-distance-ii",
        "topicTags": [
            {
                "name": "Graph",
                "slug": "graph"
            },
            {
                "name": "Prefix Sum",
                "slug": "prefix-sum"
            }
        ],
        "companyNames": [
            "oracle"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/count-the-number-of-houses-at-a-certain-distance-ii/description"
    },
    "2530": {
        "difficulty": "MEDIUM",
        "id": 2530,
        "questionFrontendId": "2439",
        "title": "Minimize Maximum of Array",
        "titleSlug": "minimize-maximum-of-array",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Binary Search",
                "slug": "binary-search"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            },
            {
                "name": "Prefix Sum",
                "slug": "prefix-sum"
            }
        ],
        "companyNames": [
            "oracle",
            "apple",
            "amazon"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/minimize-maximum-of-array/description"
    },
    "2689": {
        "difficulty": "HARD",
        "id": 2689,
        "questionFrontendId": "2561",
        "title": "Rearranging Fruits",
        "titleSlug": "rearranging-fruits",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            }
        ],
        "companyNames": [
            "oracle",
            "adobe"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/rearranging-fruits/description"
    },
    "1967": {
        "difficulty": "MEDIUM",
        "id": 1967,
        "questionFrontendId": "1839",
        "title": "Longest Substring Of All Vowels in Order",
        "titleSlug": "longest-substring-of-all-vowels-in-order",
        "topicTags": [
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Sliding Window",
                "slug": "sliding-window"
            }
        ],
        "companyNames": [
            "oracle"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/longest-substring-of-all-vowels-in-order/description"
    },
    "2116": {
        "difficulty": "EASY",
        "id": 2116,
        "questionFrontendId": "2006",
        "title": "Count Number of Pairs With Absolute Difference K",
        "titleSlug": "count-number-of-pairs-with-absolute-difference-k",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Counting",
                "slug": "counting"
            }
        ],
        "companyNames": [
            "oracle",
            "goldman_sachs",
            "google",
            "amazon"
        ],
        "frequencyCount": 4,
        "url": "https://leetcode.com/problems/count-number-of-pairs-with-absolute-difference-k/description"
    },
    "696": {
        "difficulty": "EASY",
        "id": 696,
        "questionFrontendId": "696",
        "title": "Count Binary Substrings",
        "titleSlug": "count-binary-substrings",
        "topicTags": [
            {
                "name": "Two Pointers",
                "slug": "two-pointers"
            },
            {
                "name": "String",
                "slug": "string"
            }
        ],
        "companyNames": [
            "oracle",
            "goldman_sachs",
            "adobe",
            "walmart_labs",
            "google",
            "amazon"
        ],
        "frequencyCount": 6,
        "url": "https://leetcode.com/problems/count-binary-substrings/description"
    },
    "832": {
        "difficulty": "MEDIUM",
        "id": 832,
        "questionFrontendId": "814",
        "title": "Binary Tree Pruning",
        "titleSlug": "binary-tree-pruning",
        "topicTags": [
            {
                "name": "Tree",
                "slug": "tree"
            },
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Binary Tree",
                "slug": "binary-tree"
            }
        ],
        "companyNames": [
            "oracle",
            "apple",
            "adobe",
            "google",
            "amazon"
        ],
        "frequencyCount": 5,
        "url": "https://leetcode.com/problems/binary-tree-pruning/description"
    },
    "1469": {
        "difficulty": "MEDIUM",
        "id": 1469,
        "questionFrontendId": "1347",
        "title": "Minimum Number of Steps to Make Two Strings Anagram",
        "titleSlug": "minimum-number-of-steps-to-make-two-strings-anagram",
        "topicTags": [
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Counting",
                "slug": "counting"
            }
        ],
        "companyNames": [
            "oracle",
            "bloomberg",
            "apple",
            "adobe",
            "doordash",
            "google",
            "amazon"
        ],
        "frequencyCount": 7,
        "url": "https://leetcode.com/problems/minimum-number-of-steps-to-make-two-strings-anagram/description"
    },
    "1962": {
        "difficulty": "MEDIUM",
        "id": 1962,
        "questionFrontendId": "1834",
        "title": "Single-Threaded CPU",
        "titleSlug": "single-threaded-cpu",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            },
            {
                "name": "Heap (Priority Queue)",
                "slug": "heap-priority-queue"
            }
        ],
        "companyNames": [
            "oracle",
            "apple",
            "doordash",
            "google",
            "amazon"
        ],
        "frequencyCount": 5,
        "url": "https://leetcode.com/problems/single-threaded-cpu/description"
    },
    "2204": {
        "difficulty": "EASY",
        "id": 2204,
        "questionFrontendId": "2099",
        "title": "Find Subsequence of Length K With the Largest Sum",
        "titleSlug": "find-subsequence-of-length-k-with-the-largest-sum",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            },
            {
                "name": "Heap (Priority Queue)",
                "slug": "heap-priority-queue"
            }
        ],
        "companyNames": [
            "oracle",
            "accenture",
            "google",
            "amazon"
        ],
        "frequencyCount": 4,
        "url": "https://leetcode.com/problems/find-subsequence-of-length-k-with-the-largest-sum/description"
    },
    "2389": {
        "difficulty": "HARD",
        "id": 2389,
        "questionFrontendId": "2296",
        "title": "Design a Text Editor",
        "titleSlug": "design-a-text-editor",
        "topicTags": [
            {
                "name": "Linked List",
                "slug": "linked-list"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Stack",
                "slug": "stack"
            },
            {
                "name": "Design",
                "slug": "design"
            },
            {
                "name": "Simulation",
                "slug": "simulation"
            },
            {
                "name": "Doubly-Linked List",
                "slug": "doubly-linked-list"
            }
        ],
        "companyNames": [
            "oracle",
            "google",
            "amazon"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/design-a-text-editor/description"
    },
    "2683": {
        "difficulty": "MEDIUM",
        "id": 2683,
        "questionFrontendId": "2539",
        "title": "Count the Number of Good Subsequences",
        "titleSlug": "count-the-number-of-good-subsequences",
        "topicTags": [
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Combinatorics",
                "slug": "combinatorics"
            },
            {
                "name": "Counting",
                "slug": "counting"
            }
        ],
        "companyNames": [
            "oracle"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/count-the-number-of-good-subsequences/description"
    },
    "192": {
        "difficulty": "MEDIUM",
        "id": 192,
        "questionFrontendId": "192",
        "title": "Word Frequency",
        "titleSlug": "word-frequency",
        "topicTags": [
            {
                "name": "Shell",
                "slug": "shell"
            }
        ],
        "companyNames": [
            "oracle",
            "amazon"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/word-frequency/description"
    },
    "766": {
        "difficulty": "MEDIUM",
        "id": 766,
        "questionFrontendId": "430",
        "title": "Flatten a Multilevel Doubly Linked List",
        "titleSlug": "flatten-a-multilevel-doubly-linked-list",
        "topicTags": [
            {
                "name": "Linked List",
                "slug": "linked-list"
            },
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Doubly-Linked List",
                "slug": "doubly-linked-list"
            }
        ],
        "companyNames": [
            "oracle",
            "bloomberg",
            "apple",
            "google",
            "amazon"
        ],
        "frequencyCount": 5,
        "url": "https://leetcode.com/problems/flatten-a-multilevel-doubly-linked-list/description"
    },
    "878": {
        "difficulty": "MEDIUM",
        "id": 878,
        "questionFrontendId": "848",
        "title": "Shifting Letters",
        "titleSlug": "shifting-letters",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Prefix Sum",
                "slug": "prefix-sum"
            }
        ],
        "companyNames": [
            "oracle",
            "bloomberg"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/shifting-letters/description"
    },
    "926": {
        "difficulty": "MEDIUM",
        "id": 926,
        "questionFrontendId": "890",
        "title": "Find and Replace Pattern",
        "titleSlug": "find-and-replace-pattern",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "String",
                "slug": "string"
            }
        ],
        "companyNames": [
            "oracle",
            "amazon"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/find-and-replace-pattern/description"
    },
    "1050": {
        "difficulty": "MEDIUM",
        "id": 1050,
        "questionFrontendId": "1008",
        "title": "Construct Binary Search Tree from Preorder Traversal",
        "titleSlug": "construct-binary-search-tree-from-preorder-traversal",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Stack",
                "slug": "stack"
            },
            {
                "name": "Tree",
                "slug": "tree"
            },
            {
                "name": "Binary Search Tree",
                "slug": "binary-search-tree"
            },
            {
                "name": "Monotonic Stack",
                "slug": "monotonic-stack"
            },
            {
                "name": "Binary Tree",
                "slug": "binary-tree"
            }
        ],
        "companyNames": [
            "oracle",
            "bloomberg",
            "apple",
            "adobe",
            "google",
            "amazon"
        ],
        "frequencyCount": 6,
        "url": "https://leetcode.com/problems/construct-binary-search-tree-from-preorder-traversal/description"
    },
    "1092": {
        "difficulty": "MEDIUM",
        "id": 1092,
        "questionFrontendId": "1026",
        "title": "Maximum Difference Between Node and Ancestor",
        "titleSlug": "maximum-difference-between-node-and-ancestor",
        "topicTags": [
            {
                "name": "Tree",
                "slug": "tree"
            },
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Binary Tree",
                "slug": "binary-tree"
            }
        ],
        "companyNames": [
            "oracle",
            "bloomberg",
            "apple",
            "google",
            "amazon"
        ],
        "frequencyCount": 5,
        "url": "https://leetcode.com/problems/maximum-difference-between-node-and-ancestor/description"
    },
    "1221": {
        "difficulty": "EASY",
        "id": 1221,
        "questionFrontendId": "1287",
        "title": "Element Appearing More Than 25% In Sorted Array",
        "titleSlug": "element-appearing-more-than-25-in-sorted-array",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            }
        ],
        "companyNames": [
            "oracle",
            "bloomberg",
            "apple",
            "adobe",
            "google",
            "amazon"
        ],
        "frequencyCount": 6,
        "url": "https://leetcode.com/problems/element-appearing-more-than-25-in-sorted-array/description"
    },
    "1616": {
        "difficulty": "MEDIUM",
        "id": 1616,
        "questionFrontendId": "1509",
        "title": "Minimum Difference Between Largest and Smallest Value in Three Moves",
        "titleSlug": "minimum-difference-between-largest-and-smallest-value-in-three-moves",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ],
        "companyNames": [
            "oracle",
            "bloomberg",
            "google",
            "amazon"
        ],
        "frequencyCount": 4,
        "url": "https://leetcode.com/problems/minimum-difference-between-largest-and-smallest-value-in-three-moves/description"
    },
    "1659": {
        "difficulty": "HARD",
        "id": 1659,
        "questionFrontendId": "1537",
        "title": "Get the Maximum Score",
        "titleSlug": "get-the-maximum-score",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Two Pointers",
                "slug": "two-pointers"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            }
        ],
        "companyNames": [
            "oracle"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/get-the-maximum-score/description"
    },
    "1831": {
        "difficulty": "MEDIUM",
        "id": 1831,
        "questionFrontendId": "1712",
        "title": "Ways to Split Array Into Three Subarrays",
        "titleSlug": "ways-to-split-array-into-three-subarrays",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Two Pointers",
                "slug": "two-pointers"
            },
            {
                "name": "Binary Search",
                "slug": "binary-search"
            },
            {
                "name": "Prefix Sum",
                "slug": "prefix-sum"
            }
        ],
        "companyNames": [
            "oracle"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/ways-to-split-array-into-three-subarrays/description"
    },
    "2115": {
        "difficulty": "HARD",
        "id": 2115,
        "questionFrontendId": "1987",
        "title": "Number of Unique Good Subsequences",
        "titleSlug": "number-of-unique-good-subsequences",
        "topicTags": [
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            }
        ],
        "companyNames": [
            "oracle",
            "google"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/number-of-unique-good-subsequences/description"
    },
    "2272": {
        "difficulty": "HARD",
        "id": 2272,
        "questionFrontendId": "2151",
        "title": "Maximum Good People Based on Statements",
        "titleSlug": "maximum-good-people-based-on-statements",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Backtracking",
                "slug": "backtracking"
            },
            {
                "name": "Bit Manipulation",
                "slug": "bit-manipulation"
            },
            {
                "name": "Enumeration",
                "slug": "enumeration"
            }
        ],
        "companyNames": [
            "oracle"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/maximum-good-people-based-on-statements/description"
    },
    "2488": {
        "difficulty": "MEDIUM",
        "id": 2488,
        "questionFrontendId": "2406",
        "title": "Divide Intervals Into Minimum Number of Groups",
        "titleSlug": "divide-intervals-into-minimum-number-of-groups",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Two Pointers",
                "slug": "two-pointers"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            },
            {
                "name": "Heap (Priority Queue)",
                "slug": "heap-priority-queue"
            },
            {
                "name": "Prefix Sum",
                "slug": "prefix-sum"
            }
        ],
        "companyNames": [
            "oracle",
            "adobe",
            "walmart_labs",
            "amazon"
        ],
        "frequencyCount": 4,
        "url": "https://leetcode.com/problems/divide-intervals-into-minimum-number-of-groups/description"
    },
    "2577": {
        "difficulty": "HARD",
        "id": 2577,
        "questionFrontendId": "2484",
        "title": "Count Palindromic Subsequences",
        "titleSlug": "count-palindromic-subsequences",
        "topicTags": [
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            }
        ],
        "companyNames": [
            "oracle",
            "goldman_sachs",
            "google"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/count-palindromic-subsequences/description"
    },
    "2833": {
        "difficulty": "MEDIUM",
        "id": 2833,
        "questionFrontendId": "2747",
        "title": "Count Zero Request Servers",
        "titleSlug": "count-zero-request-servers",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Sliding Window",
                "slug": "sliding-window"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ],
        "companyNames": [
            "oracle",
            "amazon"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/count-zero-request-servers/description"
    },
    "1074": {
        "difficulty": "EASY",
        "id": 1074,
        "questionFrontendId": "1086",
        "title": "High Five",
        "titleSlug": "high-five",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            },
            {
                "name": "Heap (Priority Queue)",
                "slug": "heap-priority-queue"
            }
        ],
        "companyNames": [
            "goldman_sachs",
            "amazon"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/high-five/description"
    },
    "2628": {
        "difficulty": "MEDIUM",
        "id": 2628,
        "questionFrontendId": "2513",
        "title": "Minimize the Maximum of Two Arrays",
        "titleSlug": "minimize-the-maximum-of-two-arrays",
        "topicTags": [
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Binary Search",
                "slug": "binary-search"
            },
            {
                "name": "Number Theory",
                "slug": "number-theory"
            }
        ],
        "companyNames": [
            "goldman_sachs",
            "apple",
            "amazon"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/minimize-the-maximum-of-two-arrays/description"
    },
    "3474": {
        "difficulty": "MEDIUM",
        "id": 3474,
        "questionFrontendId": "3167",
        "title": "Better Compression of String",
        "titleSlug": "better-compression-of-string",
        "topicTags": [
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            },
            {
                "name": "Counting",
                "slug": "counting"
            }
        ],
        "companyNames": [
            "goldman_sachs"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/better-compression-of-string/description"
    },
    "2201": {
        "difficulty": "HARD",
        "id": 2201,
        "questionFrontendId": "2097",
        "title": "Valid Arrangement of Pairs",
        "titleSlug": "valid-arrangement-of-pairs",
        "topicTags": [
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Graph",
                "slug": "graph"
            },
            {
                "name": "Eulerian Circuit",
                "slug": "eulerian-circuit"
            }
        ],
        "companyNames": [
            "goldman_sachs"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/valid-arrangement-of-pairs/description"
    },
    "2529": {
        "difficulty": "MEDIUM",
        "id": 2529,
        "questionFrontendId": "2438",
        "title": "Range Product Queries of Powers",
        "titleSlug": "range-product-queries-of-powers",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Bit Manipulation",
                "slug": "bit-manipulation"
            },
            {
                "name": "Prefix Sum",
                "slug": "prefix-sum"
            }
        ],
        "companyNames": [
            "goldman_sachs"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/range-product-queries-of-powers/description"
    },
    "1216": {
        "difficulty": "MEDIUM",
        "id": 1216,
        "questionFrontendId": "1116",
        "title": "Print Zero Even Odd",
        "titleSlug": "print-zero-even-odd",
        "topicTags": [
            {
                "name": "Concurrency",
                "slug": "concurrency"
            }
        ],
        "companyNames": [
            "goldman_sachs"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/print-zero-even-odd/description"
    },
    "2274": {
        "difficulty": "EASY",
        "id": 2274,
        "questionFrontendId": "2154",
        "title": "Keep Multiplying Found Values by Two",
        "titleSlug": "keep-multiplying-found-values-by-two",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            },
            {
                "name": "Simulation",
                "slug": "simulation"
            }
        ],
        "companyNames": [
            "goldman_sachs",
            "amazon"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/keep-multiplying-found-values-by-two/description"
    },
    "1206": {
        "difficulty": "MEDIUM",
        "id": 1206,
        "questionFrontendId": "1109",
        "title": "Corporate Flight Bookings",
        "titleSlug": "corporate-flight-bookings",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Prefix Sum",
                "slug": "prefix-sum"
            }
        ],
        "companyNames": [
            "goldman_sachs",
            "amazon"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/corporate-flight-bookings/description"
    },
    "1333": {
        "difficulty": "MEDIUM",
        "id": 1333,
        "questionFrontendId": "2191",
        "title": "Sort the Jumbled Numbers",
        "titleSlug": "sort-the-jumbled-numbers",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ],
        "companyNames": [
            "goldman_sachs",
            "google",
            "amazon"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/sort-the-jumbled-numbers/description"
    },
    "1345": {
        "difficulty": "EASY",
        "id": 1345,
        "questionFrontendId": "1427",
        "title": "Perform String Shifts",
        "titleSlug": "perform-string-shifts",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "String",
                "slug": "string"
            }
        ],
        "companyNames": [
            "goldman_sachs"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/perform-string-shifts/description"
    },
    "1514": {
        "difficulty": "EASY",
        "id": 1514,
        "questionFrontendId": "1413",
        "title": "Minimum Value to Get Positive Step by Step Sum",
        "titleSlug": "minimum-value-to-get-positive-step-by-step-sum",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Prefix Sum",
                "slug": "prefix-sum"
            }
        ],
        "companyNames": [
            "goldman_sachs",
            "amazon"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/minimum-value-to-get-positive-step-by-step-sum/description"
    },
    "1850": {
        "difficulty": "MEDIUM",
        "id": 1850,
        "questionFrontendId": "1750",
        "title": "Minimum Length of String After Deleting Similar Ends",
        "titleSlug": "minimum-length-of-string-after-deleting-similar-ends",
        "topicTags": [
            {
                "name": "Two Pointers",
                "slug": "two-pointers"
            },
            {
                "name": "String",
                "slug": "string"
            }
        ],
        "companyNames": [
            "goldman_sachs",
            "apple",
            "google",
            "amazon"
        ],
        "frequencyCount": 4,
        "url": "https://leetcode.com/problems/minimum-length-of-string-after-deleting-similar-ends/description"
    },
    "1897": {
        "difficulty": "HARD",
        "id": 1897,
        "questionFrontendId": "1771",
        "title": "Maximize Palindrome Length From Subsequences",
        "titleSlug": "maximize-palindrome-length-from-subsequences",
        "topicTags": [
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            }
        ],
        "companyNames": [
            "goldman_sachs",
            "google"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/maximize-palindrome-length-from-subsequences/description"
    },
    "2192": {
        "difficulty": "MEDIUM",
        "id": 2192,
        "questionFrontendId": "2087",
        "title": "Minimum Cost Homecoming of a Robot in a Grid",
        "titleSlug": "minimum-cost-homecoming-of-a-robot-in-a-grid",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            }
        ],
        "companyNames": [
            "goldman_sachs"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/minimum-cost-homecoming-of-a-robot-in-a-grid/description"
    },
    "2348": {
        "difficulty": "MEDIUM",
        "id": 2348,
        "questionFrontendId": "2266",
        "title": "Count Number of Texts",
        "titleSlug": "count-number-of-texts",
        "topicTags": [
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            }
        ],
        "companyNames": [
            "goldman_sachs",
            "amazon"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/count-number-of-texts/description"
    },
    "2392": {
        "difficulty": "MEDIUM",
        "id": 2392,
        "questionFrontendId": "2300",
        "title": "Successful Pairs of Spells and Potions",
        "titleSlug": "successful-pairs-of-spells-and-potions",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Two Pointers",
                "slug": "two-pointers"
            },
            {
                "name": "Binary Search",
                "slug": "binary-search"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ],
        "companyNames": [
            "goldman_sachs",
            "google",
            "amazon"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/successful-pairs-of-spells-and-potions/description"
    },
    "2536": {
        "difficulty": "EASY",
        "id": 2536,
        "questionFrontendId": "2446",
        "title": "Determine if Two Events Have Conflict",
        "titleSlug": "determine-if-two-events-have-conflict",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "String",
                "slug": "string"
            }
        ],
        "companyNames": [
            "goldman_sachs",
            "google",
            "amazon"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/determine-if-two-events-have-conflict/description"
    },
    "2680": {
        "difficulty": "MEDIUM",
        "id": 2680,
        "questionFrontendId": "2550",
        "title": "Count Collisions of Monkeys on a Polygon",
        "titleSlug": "count-collisions-of-monkeys-on-a-polygon",
        "topicTags": [
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Recursion",
                "slug": "recursion"
            }
        ],
        "companyNames": [
            "goldman_sachs"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/count-collisions-of-monkeys-on-a-polygon/description"
    },
    "3270": {
        "difficulty": "MEDIUM",
        "id": 3270,
        "questionFrontendId": "3001",
        "title": "Minimum Moves to Capture The Queen",
        "titleSlug": "minimum-moves-to-capture-the-queen",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Enumeration",
                "slug": "enumeration"
            }
        ],
        "companyNames": [
            "goldman_sachs"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/minimum-moves-to-capture-the-queen/description"
    },
    "3426": {
        "difficulty": "EASY",
        "id": 3426,
        "questionFrontendId": "3168",
        "title": "Minimum Number of Chairs in a Waiting Room",
        "titleSlug": "minimum-number-of-chairs-in-a-waiting-room",
        "topicTags": [
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Simulation",
                "slug": "simulation"
            }
        ],
        "companyNames": [
            "goldman_sachs"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/minimum-number-of-chairs-in-a-waiting-room/description"
    },
    "3202": {
        "difficulty": "MEDIUM",
        "id": 3202,
        "questionFrontendId": "2933",
        "title": "High-Access Employees",
        "titleSlug": "high-access-employees",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ],
        "companyNames": [
            "goldman_sachs"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/high-access-employees/description"
    },
    "2456": {
        "difficulty": "MEDIUM",
        "id": 2456,
        "questionFrontendId": "2375",
        "title": "Construct Smallest Number From DI String",
        "titleSlug": "construct-smallest-number-from-di-string",
        "topicTags": [
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Backtracking",
                "slug": "backtracking"
            },
            {
                "name": "Stack",
                "slug": "stack"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            }
        ],
        "companyNames": [
            "goldman_sachs",
            "apple",
            "amazon"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/construct-smallest-number-from-di-string/description"
    },
    "875": {
        "difficulty": "MEDIUM",
        "id": 875,
        "questionFrontendId": "845",
        "title": "Longest Mountain in Array",
        "titleSlug": "longest-mountain-in-array",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Two Pointers",
                "slug": "two-pointers"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Enumeration",
                "slug": "enumeration"
            }
        ],
        "companyNames": [
            "goldman_sachs",
            "bloomberg",
            "google",
            "amazon"
        ],
        "frequencyCount": 4,
        "url": "https://leetcode.com/problems/longest-mountain-in-array/description"
    },
    "592": {
        "difficulty": "MEDIUM",
        "id": 592,
        "questionFrontendId": "592",
        "title": "Fraction Addition and Subtraction",
        "titleSlug": "fraction-addition-and-subtraction",
        "topicTags": [
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Simulation",
                "slug": "simulation"
            }
        ],
        "companyNames": [
            "goldman_sachs",
            "google"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/fraction-addition-and-subtraction/description"
    },
    "750": {
        "difficulty": "HARD",
        "id": 750,
        "questionFrontendId": "749",
        "title": "Contain Virus",
        "titleSlug": "contain-virus",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Breadth-First Search",
                "slug": "breadth-first-search"
            },
            {
                "name": "Matrix",
                "slug": "matrix"
            },
            {
                "name": "Simulation",
                "slug": "simulation"
            }
        ],
        "companyNames": [
            "goldman_sachs",
            "bloomberg"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/contain-virus/description"
    },
    "530": {
        "difficulty": "EASY",
        "id": 530,
        "questionFrontendId": "530",
        "title": "Minimum Absolute Difference in BST",
        "titleSlug": "minimum-absolute-difference-in-bst",
        "topicTags": [
            {
                "name": "Tree",
                "slug": "tree"
            },
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Breadth-First Search",
                "slug": "breadth-first-search"
            },
            {
                "name": "Binary Search Tree",
                "slug": "binary-search-tree"
            },
            {
                "name": "Binary Tree",
                "slug": "binary-tree"
            }
        ],
        "companyNames": [
            "goldman_sachs",
            "apple",
            "adobe",
            "google",
            "amazon"
        ],
        "frequencyCount": 5,
        "url": "https://leetcode.com/problems/minimum-absolute-difference-in-bst/description"
    },
    "859": {
        "difficulty": "MEDIUM",
        "id": 859,
        "questionFrontendId": "641",
        "title": "Design Circular Deque",
        "titleSlug": "design-circular-deque",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Linked List",
                "slug": "linked-list"
            },
            {
                "name": "Design",
                "slug": "design"
            },
            {
                "name": "Queue",
                "slug": "queue"
            }
        ],
        "companyNames": [
            "goldman_sachs",
            "google"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/design-circular-deque/description"
    },
    "905": {
        "difficulty": "MEDIUM",
        "id": 905,
        "questionFrontendId": "873",
        "title": "Length of Longest Fibonacci Subsequence",
        "titleSlug": "length-of-longest-fibonacci-subsequence",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            }
        ],
        "companyNames": [
            "goldman_sachs",
            "adobe"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/length-of-longest-fibonacci-subsequence/description"
    },
    "913": {
        "difficulty": "MEDIUM",
        "id": 913,
        "questionFrontendId": "519",
        "title": "Random Flip Matrix",
        "titleSlug": "random-flip-matrix",
        "topicTags": [
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Reservoir Sampling",
                "slug": "reservoir-sampling"
            },
            {
                "name": "Randomized",
                "slug": "randomized"
            }
        ],
        "companyNames": [
            "goldman_sachs",
            "google"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/random-flip-matrix/description"
    },
    "1133": {
        "difficulty": "HARD",
        "id": 1133,
        "questionFrontendId": "1163",
        "title": "Last Substring in Lexicographical Order",
        "titleSlug": "last-substring-in-lexicographical-order",
        "topicTags": [
            {
                "name": "Two Pointers",
                "slug": "two-pointers"
            },
            {
                "name": "String",
                "slug": "string"
            }
        ],
        "companyNames": [
            "goldman_sachs",
            "amazon"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/last-substring-in-lexicographical-order/description"
    },
    "1512": {
        "difficulty": "MEDIUM",
        "id": 1512,
        "questionFrontendId": "1396",
        "title": "Design Underground System",
        "titleSlug": "design-underground-system",
        "topicTags": [
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Design",
                "slug": "design"
            }
        ],
        "companyNames": [
            "goldman_sachs",
            "bloomberg",
            "amazon"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/design-underground-system/description"
    },
    "2318": {
        "difficulty": "MEDIUM",
        "id": 2318,
        "questionFrontendId": "2212",
        "title": "Maximum Points in an Archery Competition",
        "titleSlug": "maximum-points-in-an-archery-competition",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Backtracking",
                "slug": "backtracking"
            },
            {
                "name": "Bit Manipulation",
                "slug": "bit-manipulation"
            },
            {
                "name": "Enumeration",
                "slug": "enumeration"
            }
        ],
        "companyNames": [
            "goldman_sachs"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/maximum-points-in-an-archery-competition/description"
    },
    "2422": {
        "difficulty": "MEDIUM",
        "id": 2422,
        "questionFrontendId": "2343",
        "title": "Query Kth Smallest Trimmed Number",
        "titleSlug": "query-kth-smallest-trimmed-number",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Divide and Conquer",
                "slug": "divide-and-conquer"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            },
            {
                "name": "Heap (Priority Queue)",
                "slug": "heap-priority-queue"
            },
            {
                "name": "Radix Sort",
                "slug": "radix-sort"
            },
            {
                "name": "Quickselect",
                "slug": "quickselect"
            }
        ],
        "companyNames": [
            "goldman_sachs"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/query-kth-smallest-trimmed-number/description"
    },
    "2757": {
        "difficulty": "HARD",
        "id": 2757,
        "questionFrontendId": "2719",
        "title": "Count of Integers",
        "titleSlug": "count-of-integers",
        "topicTags": [
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            }
        ],
        "companyNames": [
            "goldman_sachs",
            "bloomberg",
            "google",
            "amazon"
        ],
        "frequencyCount": 4,
        "url": "https://leetcode.com/problems/count-of-integers/description"
    },
    "1272": {
        "difficulty": "MEDIUM",
        "id": 1272,
        "questionFrontendId": "1169",
        "title": "Invalid Transactions",
        "titleSlug": "invalid-transactions",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ],
        "companyNames": [
            "bloomberg",
            "amazon"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/invalid-transactions/description"
    },
    "1775": {
        "difficulty": "EASY",
        "id": 1775,
        "questionFrontendId": "1656",
        "title": "Design an Ordered Stream",
        "titleSlug": "design-an-ordered-stream",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Design",
                "slug": "design"
            },
            {
                "name": "Data Stream",
                "slug": "data-stream"
            }
        ],
        "companyNames": [
            "bloomberg",
            "google"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/design-an-ordered-stream/description"
    },
    "1233": {
        "difficulty": "HARD",
        "id": 1233,
        "questionFrontendId": "1274",
        "title": "Number of Ships in a Rectangle",
        "titleSlug": "number-of-ships-in-a-rectangle",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Divide and Conquer",
                "slug": "divide-and-conquer"
            },
            {
                "name": "Interactive",
                "slug": "interactive"
            }
        ],
        "companyNames": [
            "bloomberg"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/number-of-ships-in-a-rectangle/description"
    },
    "1705": {
        "difficulty": "MEDIUM",
        "id": 1705,
        "questionFrontendId": "1583",
        "title": "Count Unhappy Friends",
        "titleSlug": "count-unhappy-friends",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Simulation",
                "slug": "simulation"
            }
        ],
        "companyNames": [
            "bloomberg"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/count-unhappy-friends/description"
    },
    "1737": {
        "difficulty": "EASY",
        "id": 1737,
        "questionFrontendId": "1614",
        "title": "Maximum Nesting Depth of the Parentheses",
        "titleSlug": "maximum-nesting-depth-of-the-parentheses",
        "topicTags": [
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Stack",
                "slug": "stack"
            }
        ],
        "companyNames": [
            "bloomberg",
            "apple",
            "adobe",
            "google",
            "amazon"
        ],
        "frequencyCount": 5,
        "url": "https://leetcode.com/problems/maximum-nesting-depth-of-the-parentheses/description"
    },
    "550": {
        "difficulty": "MEDIUM",
        "id": 550,
        "questionFrontendId": "1730",
        "title": "Shortest Path to Get Food",
        "titleSlug": "shortest-path-to-get-food",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Breadth-First Search",
                "slug": "breadth-first-search"
            },
            {
                "name": "Matrix",
                "slug": "matrix"
            }
        ],
        "companyNames": [
            "bloomberg",
            "doordash",
            "google",
            "amazon"
        ],
        "frequencyCount": 4,
        "url": "https://leetcode.com/problems/shortest-path-to-get-food/description"
    },
    "2005": {
        "difficulty": "EASY",
        "id": 2005,
        "questionFrontendId": "1893",
        "title": "Check if All the Integers in a Range Are Covered",
        "titleSlug": "check-if-all-the-integers-in-a-range-are-covered",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Prefix Sum",
                "slug": "prefix-sum"
            }
        ],
        "companyNames": [
            "bloomberg"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/check-if-all-the-integers-in-a-range-are-covered/description"
    },
    "158": {
        "difficulty": "HARD",
        "id": 158,
        "questionFrontendId": "158",
        "title": "Read N Characters Given read4 II - Call Multiple Times",
        "titleSlug": "read-n-characters-given-read4-ii-call-multiple-times",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Simulation",
                "slug": "simulation"
            },
            {
                "name": "Interactive",
                "slug": "interactive"
            }
        ],
        "companyNames": [
            "bloomberg",
            "apple",
            "google"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/read-n-characters-given-read4-ii-call-multiple-times/description"
    },
    "308": {
        "difficulty": "HARD",
        "id": 308,
        "questionFrontendId": "308",
        "title": "Range Sum Query 2D - Mutable",
        "titleSlug": "range-sum-query-2d-mutable",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Design",
                "slug": "design"
            },
            {
                "name": "Binary Indexed Tree",
                "slug": "binary-indexed-tree"
            },
            {
                "name": "Segment Tree",
                "slug": "segment-tree"
            },
            {
                "name": "Matrix",
                "slug": "matrix"
            }
        ],
        "companyNames": [
            "bloomberg",
            "google"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/range-sum-query-2d-mutable/description"
    },
    "1194": {
        "difficulty": "MEDIUM",
        "id": 1194,
        "questionFrontendId": "1104",
        "title": "Path In Zigzag Labelled Binary Tree",
        "titleSlug": "path-in-zigzag-labelled-binary-tree",
        "topicTags": [
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Tree",
                "slug": "tree"
            },
            {
                "name": "Binary Tree",
                "slug": "binary-tree"
            }
        ],
        "companyNames": [
            "bloomberg",
            "amazon"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/path-in-zigzag-labelled-binary-tree/description"
    },
    "1944": {
        "difficulty": "EASY",
        "id": 1944,
        "questionFrontendId": "1816",
        "title": "Truncate Sentence",
        "titleSlug": "truncate-sentence",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "String",
                "slug": "string"
            }
        ],
        "companyNames": [
            "bloomberg",
            "accenture",
            "amazon"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/truncate-sentence/description"
    },
    "2598": {
        "difficulty": "EASY",
        "id": 2598,
        "questionFrontendId": "2515",
        "title": "Shortest Distance to Target String in a Circular Array",
        "titleSlug": "shortest-distance-to-target-string-in-a-circular-array",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "String",
                "slug": "string"
            }
        ],
        "companyNames": [
            "bloomberg"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/shortest-distance-to-target-string-in-a-circular-array/description"
    },
    "1488": {
        "difficulty": "MEDIUM",
        "id": 1488,
        "questionFrontendId": "1387",
        "title": "Sort Integers by The Power Value",
        "titleSlug": "sort-integers-by-the-power-value",
        "topicTags": [
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Memoization",
                "slug": "memoization"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ],
        "companyNames": [
            "bloomberg",
            "airbnb",
            "google"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/sort-integers-by-the-power-value/description"
    },
    "1621": {
        "difficulty": "MEDIUM",
        "id": 1621,
        "questionFrontendId": "1498",
        "title": "Number of Subsequences That Satisfy the Given Sum Condition",
        "titleSlug": "number-of-subsequences-that-satisfy-the-given-sum-condition",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Two Pointers",
                "slug": "two-pointers"
            },
            {
                "name": "Binary Search",
                "slug": "binary-search"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ],
        "companyNames": [
            "bloomberg",
            "apple",
            "adobe",
            "google",
            "amazon"
        ],
        "frequencyCount": 5,
        "url": "https://leetcode.com/problems/number-of-subsequences-that-satisfy-the-given-sum-condition/description"
    },
    "404": {
        "difficulty": "EASY",
        "id": 404,
        "questionFrontendId": "404",
        "title": "Sum of Left Leaves",
        "titleSlug": "sum-of-left-leaves",
        "topicTags": [
            {
                "name": "Tree",
                "slug": "tree"
            },
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Breadth-First Search",
                "slug": "breadth-first-search"
            },
            {
                "name": "Binary Tree",
                "slug": "binary-tree"
            }
        ],
        "companyNames": [
            "bloomberg",
            "adobe",
            "google",
            "amazon"
        ],
        "frequencyCount": 4,
        "url": "https://leetcode.com/problems/sum-of-left-leaves/description"
    },
    "1271": {
        "difficulty": "MEDIUM",
        "id": 1271,
        "questionFrontendId": "1236",
        "title": "Web Crawler",
        "titleSlug": "web-crawler",
        "topicTags": [
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Breadth-First Search",
                "slug": "breadth-first-search"
            },
            {
                "name": "Interactive",
                "slug": "interactive"
            }
        ],
        "companyNames": [
            "bloomberg"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/web-crawler/description"
    },
    "1338": {
        "difficulty": "EASY",
        "id": 1338,
        "questionFrontendId": "1211",
        "title": "Queries Quality and Percentage",
        "titleSlug": "queries-quality-and-percentage",
        "topicTags": [
            {
                "name": "Database",
                "slug": "database"
            }
        ],
        "companyNames": [
            "bloomberg",
            "adobe",
            "google",
            "amazon"
        ],
        "frequencyCount": 4,
        "url": "https://leetcode.com/problems/queries-quality-and-percentage/description"
    },
    "1704": {
        "difficulty": "EASY",
        "id": 1704,
        "questionFrontendId": "1582",
        "title": "Special Positions in a Binary Matrix",
        "titleSlug": "special-positions-in-a-binary-matrix",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Matrix",
                "slug": "matrix"
            }
        ],
        "companyNames": [
            "bloomberg",
            "adobe",
            "google",
            "amazon"
        ],
        "frequencyCount": 4,
        "url": "https://leetcode.com/problems/special-positions-in-a-binary-matrix/description"
    },
    "1818": {
        "difficulty": "MEDIUM",
        "id": 1818,
        "questionFrontendId": "1717",
        "title": "Maximum Score From Removing Substrings",
        "titleSlug": "maximum-score-from-removing-substrings",
        "topicTags": [
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Stack",
                "slug": "stack"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            }
        ],
        "companyNames": [
            "bloomberg",
            "google",
            "amazon"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/maximum-score-from-removing-substrings/description"
    },
    "1903": {
        "difficulty": "MEDIUM",
        "id": 1903,
        "questionFrontendId": "1756",
        "title": "Design Most Recently Used Queue",
        "titleSlug": "design-most-recently-used-queue",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Stack",
                "slug": "stack"
            },
            {
                "name": "Design",
                "slug": "design"
            },
            {
                "name": "Binary Indexed Tree",
                "slug": "binary-indexed-tree"
            },
            {
                "name": "Ordered Set",
                "slug": "ordered-set"
            }
        ],
        "companyNames": [
            "bloomberg",
            "google"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/design-most-recently-used-queue/description"
    },
    "2532": {
        "difficulty": "EASY",
        "id": 2532,
        "questionFrontendId": "2423",
        "title": "Remove Letter To Equalize Frequency",
        "titleSlug": "remove-letter-to-equalize-frequency",
        "topicTags": [
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Counting",
                "slug": "counting"
            }
        ],
        "companyNames": [
            "bloomberg",
            "adobe",
            "tcs",
            "google"
        ],
        "frequencyCount": 4,
        "url": "https://leetcode.com/problems/remove-letter-to-equalize-frequency/description"
    },
    "2714": {
        "difficulty": "EASY",
        "id": 2714,
        "questionFrontendId": "2574",
        "title": "Left and Right Sum Differences",
        "titleSlug": "left-and-right-sum-differences",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Prefix Sum",
                "slug": "prefix-sum"
            }
        ],
        "companyNames": [
            "bloomberg",
            "apple",
            "amazon"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/left-and-right-sum-differences/description"
    },
    "1196": {
        "difficulty": "MEDIUM",
        "id": 1196,
        "questionFrontendId": "1105",
        "title": "Filling Bookcase Shelves",
        "titleSlug": "filling-bookcase-shelves",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            }
        ],
        "companyNames": [
            "bloomberg",
            "google",
            "amazon"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/filling-bookcase-shelves/description"
    },
    "1217": {
        "difficulty": "EASY",
        "id": 1217,
        "questionFrontendId": "1122",
        "title": "Relative Sort Array",
        "titleSlug": "relative-sort-array",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            },
            {
                "name": "Counting Sort",
                "slug": "counting-sort"
            }
        ],
        "companyNames": [
            "bloomberg",
            "adobe",
            "google",
            "amazon"
        ],
        "frequencyCount": 4,
        "url": "https://leetcode.com/problems/relative-sort-array/description"
    },
    "1776": {
        "difficulty": "MEDIUM",
        "id": 1776,
        "questionFrontendId": "1658",
        "title": "Minimum Operations to Reduce X to Zero",
        "titleSlug": "minimum-operations-to-reduce-x-to-zero",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Binary Search",
                "slug": "binary-search"
            },
            {
                "name": "Sliding Window",
                "slug": "sliding-window"
            },
            {
                "name": "Prefix Sum",
                "slug": "prefix-sum"
            }
        ],
        "companyNames": [
            "bloomberg",
            "apple",
            "adobe",
            "google",
            "amazon"
        ],
        "frequencyCount": 5,
        "url": "https://leetcode.com/problems/minimum-operations-to-reduce-x-to-zero/description"
    },
    "2739": {
        "difficulty": "HARD",
        "id": 2739,
        "questionFrontendId": "2646",
        "title": "Minimize the Total Price of the Trips",
        "titleSlug": "minimize-the-total-price-of-the-trips",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Tree",
                "slug": "tree"
            },
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Graph",
                "slug": "graph"
            }
        ],
        "companyNames": [
            "bloomberg",
            "adobe"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/minimize-the-total-price-of-the-trips/description"
    },
    "436": {
        "difficulty": "MEDIUM",
        "id": 436,
        "questionFrontendId": "436",
        "title": "Find Right Interval",
        "titleSlug": "find-right-interval",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Binary Search",
                "slug": "binary-search"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ],
        "companyNames": [
            "bloomberg",
            "google",
            "amazon"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/find-right-interval/description"
    },
    "541": {
        "difficulty": "EASY",
        "id": 541,
        "questionFrontendId": "541",
        "title": "Reverse String II",
        "titleSlug": "reverse-string-ii",
        "topicTags": [
            {
                "name": "Two Pointers",
                "slug": "two-pointers"
            },
            {
                "name": "String",
                "slug": "string"
            }
        ],
        "companyNames": [
            "bloomberg",
            "apple",
            "adobe",
            "google",
            "amazon"
        ],
        "frequencyCount": 5,
        "url": "https://leetcode.com/problems/reverse-string-ii/description"
    },
    "1161": {
        "difficulty": "EASY",
        "id": 1161,
        "questionFrontendId": "1075",
        "title": "Project Employees I",
        "titleSlug": "project-employees-i",
        "topicTags": [
            {
                "name": "Database",
                "slug": "database"
            }
        ],
        "companyNames": [
            "bloomberg",
            "apple",
            "amazon"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/project-employees-i/description"
    },
    "1224": {
        "difficulty": "HARD",
        "id": 1224,
        "questionFrontendId": "1289",
        "title": "Minimum Falling Path Sum II",
        "titleSlug": "minimum-falling-path-sum-ii",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Matrix",
                "slug": "matrix"
            }
        ],
        "companyNames": [
            "bloomberg",
            "apple",
            "adobe",
            "google",
            "amazon"
        ],
        "frequencyCount": 5,
        "url": "https://leetcode.com/problems/minimum-falling-path-sum-ii/description"
    },
    "1382": {
        "difficulty": "EASY",
        "id": 1382,
        "questionFrontendId": "2303",
        "title": "Calculate Amount Paid in Taxes",
        "titleSlug": "calculate-amount-paid-in-taxes",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Simulation",
                "slug": "simulation"
            }
        ],
        "companyNames": [
            "bloomberg"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/calculate-amount-paid-in-taxes/description"
    },
    "1537": {
        "difficulty": "EASY",
        "id": 1537,
        "questionFrontendId": "1422",
        "title": "Maximum Score After Splitting a String",
        "titleSlug": "maximum-score-after-splitting-a-string",
        "topicTags": [
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Prefix Sum",
                "slug": "prefix-sum"
            }
        ],
        "companyNames": [
            "bloomberg",
            "adobe",
            "google",
            "amazon"
        ],
        "frequencyCount": 4,
        "url": "https://leetcode.com/problems/maximum-score-after-splitting-a-string/description"
    },
    "1730": {
        "difficulty": "EASY",
        "id": 1730,
        "questionFrontendId": "1608",
        "title": "Special Array With X Elements Greater Than or Equal X",
        "titleSlug": "special-array-with-x-elements-greater-than-or-equal-x",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Binary Search",
                "slug": "binary-search"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ],
        "companyNames": [
            "bloomberg",
            "google",
            "amazon"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/special-array-with-x-elements-greater-than-or-equal-x/description"
    },
    "2149": {
        "difficulty": "MEDIUM",
        "id": 2149,
        "questionFrontendId": "2038",
        "title": "Remove Colored Pieces if Both Neighbors are the Same Color",
        "titleSlug": "remove-colored-pieces-if-both-neighbors-are-the-same-color",
        "topicTags": [
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            },
            {
                "name": "Game Theory",
                "slug": "game-theory"
            }
        ],
        "companyNames": [
            "bloomberg",
            "apple",
            "adobe",
            "amazon"
        ],
        "frequencyCount": 4,
        "url": "https://leetcode.com/problems/remove-colored-pieces-if-both-neighbors-are-the-same-color/description"
    },
    "2338": {
        "difficulty": "MEDIUM",
        "id": 2338,
        "questionFrontendId": "2260",
        "title": "Minimum Consecutive Cards to Pick Up",
        "titleSlug": "minimum-consecutive-cards-to-pick-up",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Sliding Window",
                "slug": "sliding-window"
            }
        ],
        "companyNames": [
            "bloomberg",
            "adobe",
            "google",
            "amazon"
        ],
        "frequencyCount": 4,
        "url": "https://leetcode.com/problems/minimum-consecutive-cards-to-pick-up/description"
    },
    "183": {
        "difficulty": "EASY",
        "id": 183,
        "questionFrontendId": "183",
        "title": "Customers Who Never Order",
        "titleSlug": "customers-who-never-order",
        "topicTags": [
            {
                "name": "Database",
                "slug": "database"
            }
        ],
        "companyNames": [
            "bloomberg",
            "apple",
            "google",
            "amazon"
        ],
        "frequencyCount": 4,
        "url": "https://leetcode.com/problems/customers-who-never-order/description"
    },
    "304": {
        "difficulty": "MEDIUM",
        "id": 304,
        "questionFrontendId": "304",
        "title": "Range Sum Query 2D - Immutable",
        "titleSlug": "range-sum-query-2d-immutable",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Design",
                "slug": "design"
            },
            {
                "name": "Matrix",
                "slug": "matrix"
            },
            {
                "name": "Prefix Sum",
                "slug": "prefix-sum"
            }
        ],
        "companyNames": [
            "bloomberg",
            "nvidia",
            "google",
            "amazon"
        ],
        "frequencyCount": 4,
        "url": "https://leetcode.com/problems/range-sum-query-2d-immutable/description"
    },
    "376": {
        "difficulty": "MEDIUM",
        "id": 376,
        "questionFrontendId": "376",
        "title": "Wiggle Subsequence",
        "titleSlug": "wiggle-subsequence",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            }
        ],
        "companyNames": [
            "bloomberg",
            "google",
            "amazon"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/wiggle-subsequence/description"
    },
    "397": {
        "difficulty": "MEDIUM",
        "id": 397,
        "questionFrontendId": "397",
        "title": "Integer Replacement",
        "titleSlug": "integer-replacement",
        "topicTags": [
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            },
            {
                "name": "Bit Manipulation",
                "slug": "bit-manipulation"
            },
            {
                "name": "Memoization",
                "slug": "memoization"
            }
        ],
        "companyNames": [
            "bloomberg",
            "google"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/integer-replacement/description"
    },
    "405": {
        "difficulty": "EASY",
        "id": 405,
        "questionFrontendId": "405",
        "title": "Convert a Number to Hexadecimal",
        "titleSlug": "convert-a-number-to-hexadecimal",
        "topicTags": [
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Bit Manipulation",
                "slug": "bit-manipulation"
            }
        ],
        "companyNames": [
            "bloomberg",
            "adobe",
            "google",
            "amazon"
        ],
        "frequencyCount": 4,
        "url": "https://leetcode.com/problems/convert-a-number-to-hexadecimal/description"
    },
    "447": {
        "difficulty": "MEDIUM",
        "id": 447,
        "questionFrontendId": "447",
        "title": "Number of Boomerangs",
        "titleSlug": "number-of-boomerangs",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Math",
                "slug": "math"
            }
        ],
        "companyNames": [
            "bloomberg",
            "google"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/number-of-boomerangs/description"
    },
    "856": {
        "difficulty": "HARD",
        "id": 856,
        "questionFrontendId": "829",
        "title": "Consecutive Numbers Sum",
        "titleSlug": "consecutive-numbers-sum",
        "topicTags": [
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Enumeration",
                "slug": "enumeration"
            }
        ],
        "companyNames": [
            "bloomberg",
            "apple",
            "google"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/consecutive-numbers-sum/description"
    },
    "891": {
        "difficulty": "MEDIUM",
        "id": 891,
        "questionFrontendId": "861",
        "title": "Score After Flipping Matrix",
        "titleSlug": "score-after-flipping-matrix",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            },
            {
                "name": "Bit Manipulation",
                "slug": "bit-manipulation"
            },
            {
                "name": "Matrix",
                "slug": "matrix"
            }
        ],
        "companyNames": [
            "bloomberg",
            "adobe",
            "google",
            "amazon"
        ],
        "frequencyCount": 4,
        "url": "https://leetcode.com/problems/score-after-flipping-matrix/description"
    },
    "900": {
        "difficulty": "MEDIUM",
        "id": 900,
        "questionFrontendId": "869",
        "title": "Reordered Power of 2",
        "titleSlug": "reordered-power-of-2",
        "topicTags": [
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            },
            {
                "name": "Counting",
                "slug": "counting"
            },
            {
                "name": "Enumeration",
                "slug": "enumeration"
            }
        ],
        "companyNames": [
            "bloomberg",
            "adobe",
            "amazon"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/reordered-power-of-2/description"
    },
    "998": {
        "difficulty": "MEDIUM",
        "id": 998,
        "questionFrontendId": "958",
        "title": "Check Completeness of a Binary Tree",
        "titleSlug": "check-completeness-of-a-binary-tree",
        "topicTags": [
            {
                "name": "Tree",
                "slug": "tree"
            },
            {
                "name": "Breadth-First Search",
                "slug": "breadth-first-search"
            },
            {
                "name": "Binary Tree",
                "slug": "binary-tree"
            }
        ],
        "companyNames": [
            "bloomberg",
            "apple",
            "adobe",
            "google",
            "amazon"
        ],
        "frequencyCount": 5,
        "url": "https://leetcode.com/problems/check-completeness-of-a-binary-tree/description"
    },
    "1086": {
        "difficulty": "EASY",
        "id": 1086,
        "questionFrontendId": "1025",
        "title": "Divisor Game",
        "titleSlug": "divisor-game",
        "topicTags": [
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Brainteaser",
                "slug": "brainteaser"
            },
            {
                "name": "Game Theory",
                "slug": "game-theory"
            }
        ],
        "companyNames": [
            "bloomberg",
            "apple",
            "adobe",
            "google",
            "amazon"
        ],
        "frequencyCount": 5,
        "url": "https://leetcode.com/problems/divisor-game/description"
    },
    "1236": {
        "difficulty": "EASY",
        "id": 1236,
        "questionFrontendId": "1137",
        "title": "N-th Tribonacci Number",
        "titleSlug": "n-th-tribonacci-number",
        "topicTags": [
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Memoization",
                "slug": "memoization"
            }
        ],
        "companyNames": [
            "bloomberg",
            "adobe",
            "tcs",
            "accenture",
            "google",
            "amazon"
        ],
        "frequencyCount": 6,
        "url": "https://leetcode.com/problems/n-th-tribonacci-number/description"
    },
    "1353": {
        "difficulty": "EASY",
        "id": 1353,
        "questionFrontendId": "2273",
        "title": "Find Resultant Array After Removing Anagrams",
        "titleSlug": "find-resultant-array-after-removing-anagrams",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ],
        "companyNames": [
            "bloomberg",
            "amazon"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/find-resultant-array-after-removing-anagrams/description"
    },
    "1408": {
        "difficulty": "MEDIUM",
        "id": 1408,
        "questionFrontendId": "1283",
        "title": "Find the Smallest Divisor Given a Threshold",
        "titleSlug": "find-the-smallest-divisor-given-a-threshold",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Binary Search",
                "slug": "binary-search"
            }
        ],
        "companyNames": [
            "bloomberg",
            "apple",
            "google",
            "amazon"
        ],
        "frequencyCount": 4,
        "url": "https://leetcode.com/problems/find-the-smallest-divisor-given-a-threshold/description"
    },
    "1468": {
        "difficulty": "EASY",
        "id": 1468,
        "questionFrontendId": "1346",
        "title": "Check If N and Its Double Exist",
        "titleSlug": "check-if-n-and-its-double-exist",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Two Pointers",
                "slug": "two-pointers"
            },
            {
                "name": "Binary Search",
                "slug": "binary-search"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ],
        "companyNames": [
            "bloomberg",
            "adobe",
            "google",
            "amazon"
        ],
        "frequencyCount": 4,
        "url": "https://leetcode.com/problems/check-if-n-and-its-double-exist/description"
    },
    "1615": {
        "difficulty": "MEDIUM",
        "id": 1615,
        "questionFrontendId": "1508",
        "title": "Range Sum of Sorted Subarray Sums",
        "titleSlug": "range-sum-of-sorted-subarray-sums",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Two Pointers",
                "slug": "two-pointers"
            },
            {
                "name": "Binary Search",
                "slug": "binary-search"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ],
        "companyNames": [
            "bloomberg",
            "google",
            "amazon"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/range-sum-of-sorted-subarray-sums/description"
    },
    "1664": {
        "difficulty": "EASY",
        "id": 1664,
        "questionFrontendId": "1517",
        "title": "Find Users With Valid E-Mails",
        "titleSlug": "find-users-with-valid-e-mails",
        "topicTags": [
            {
                "name": "Database",
                "slug": "database"
            }
        ],
        "companyNames": [
            "bloomberg",
            "adobe",
            "google"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/find-users-with-valid-e-mails/description"
    },
    "1744": {
        "difficulty": "HARD",
        "id": 1744,
        "questionFrontendId": "1639",
        "title": "Number of Ways to Form a Target String Given a Dictionary",
        "titleSlug": "number-of-ways-to-form-a-target-string-given-a-dictionary",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            }
        ],
        "companyNames": [
            "bloomberg",
            "apple",
            "google",
            "amazon"
        ],
        "frequencyCount": 4,
        "url": "https://leetcode.com/problems/number-of-ways-to-form-a-target-string-given-a-dictionary/description"
    },
    "1882": {
        "difficulty": "EASY",
        "id": 1882,
        "questionFrontendId": "1731",
        "title": "The Number of Employees Which Report to Each Employee",
        "titleSlug": "the-number-of-employees-which-report-to-each-employee",
        "topicTags": [
            {
                "name": "Database",
                "slug": "database"
            }
        ],
        "companyNames": [
            "bloomberg",
            "google",
            "amazon"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/the-number-of-employees-which-report-to-each-employee/description"
    },
    "1906": {
        "difficulty": "HARD",
        "id": 1906,
        "questionFrontendId": "1799",
        "title": "Maximize Score After N Operations",
        "titleSlug": "maximize-score-after-n-operations",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Backtracking",
                "slug": "backtracking"
            },
            {
                "name": "Bit Manipulation",
                "slug": "bit-manipulation"
            },
            {
                "name": "Number Theory",
                "slug": "number-theory"
            },
            {
                "name": "Bitmask",
                "slug": "bitmask"
            }
        ],
        "companyNames": [
            "bloomberg",
            "google",
            "amazon"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/maximize-score-after-n-operations/description"
    },
    "1993": {
        "difficulty": "EASY",
        "id": 1993,
        "questionFrontendId": "1863",
        "title": "Sum of All Subset XOR Totals",
        "titleSlug": "sum-of-all-subset-xor-totals",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Backtracking",
                "slug": "backtracking"
            },
            {
                "name": "Bit Manipulation",
                "slug": "bit-manipulation"
            },
            {
                "name": "Combinatorics",
                "slug": "combinatorics"
            },
            {
                "name": "Enumeration",
                "slug": "enumeration"
            }
        ],
        "companyNames": [
            "bloomberg",
            "apple",
            "adobe",
            "google",
            "amazon"
        ],
        "frequencyCount": 5,
        "url": "https://leetcode.com/problems/sum-of-all-subset-xor-totals/description"
    },
    "2032": {
        "difficulty": "EASY",
        "id": 2032,
        "questionFrontendId": "1903",
        "title": "Largest Odd Number in String",
        "titleSlug": "largest-odd-number-in-string",
        "topicTags": [
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            }
        ],
        "companyNames": [
            "bloomberg",
            "apple",
            "adobe",
            "amazon"
        ],
        "frequencyCount": 4,
        "url": "https://leetcode.com/problems/largest-odd-number-in-string/description"
    },
    "2044": {
        "difficulty": "MEDIUM",
        "id": 2044,
        "questionFrontendId": "1915",
        "title": "Number of Wonderful Substrings",
        "titleSlug": "number-of-wonderful-substrings",
        "topicTags": [
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Bit Manipulation",
                "slug": "bit-manipulation"
            },
            {
                "name": "Prefix Sum",
                "slug": "prefix-sum"
            }
        ],
        "companyNames": [
            "bloomberg",
            "apple",
            "google",
            "amazon"
        ],
        "frequencyCount": 4,
        "url": "https://leetcode.com/problems/number-of-wonderful-substrings/description"
    },
    "2572": {
        "difficulty": "MEDIUM",
        "id": 2572,
        "questionFrontendId": "2486",
        "title": "Append Characters to String to Make Subsequence",
        "titleSlug": "append-characters-to-string-to-make-subsequence",
        "topicTags": [
            {
                "name": "Two Pointers",
                "slug": "two-pointers"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            }
        ],
        "companyNames": [
            "bloomberg",
            "google",
            "amazon"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/append-characters-to-string-to-make-subsequence/description"
    },
    "2727": {
        "difficulty": "EASY",
        "id": 2727,
        "questionFrontendId": "2678",
        "title": "Number of Senior Citizens",
        "titleSlug": "number-of-senior-citizens",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "String",
                "slug": "string"
            }
        ],
        "companyNames": [
            "bloomberg",
            "google"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/number-of-senior-citizens/description"
    },
    "2733": {
        "difficulty": "EASY",
        "id": 2733,
        "questionFrontendId": "2621",
        "title": "Sleep",
        "titleSlug": "sleep",
        "topicTags": [],
        "companyNames": [
            "bloomberg",
            "apple",
            "adobe",
            "google",
            "amazon"
        ],
        "frequencyCount": 5,
        "url": "https://leetcode.com/problems/sleep/description"
    },
    "2754": {
        "difficulty": "MEDIUM",
        "id": 2754,
        "questionFrontendId": "2708",
        "title": "Maximum Strength of a Group",
        "titleSlug": "maximum-strength-of-a-group",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Backtracking",
                "slug": "backtracking"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            },
            {
                "name": "Bit Manipulation",
                "slug": "bit-manipulation"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            },
            {
                "name": "Enumeration",
                "slug": "enumeration"
            }
        ],
        "companyNames": [
            "bloomberg"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/maximum-strength-of-a-group/description"
    },
    "2812": {
        "difficulty": "EASY",
        "id": 2812,
        "questionFrontendId": "2769",
        "title": "Find the Maximum Achievable Number",
        "titleSlug": "find-the-maximum-achievable-number",
        "topicTags": [
            {
                "name": "Math",
                "slug": "math"
            }
        ],
        "companyNames": [
            "bloomberg",
            "google",
            "amazon"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/find-the-maximum-achievable-number/description"
    },
    "3055": {
        "difficulty": "EASY",
        "id": 3055,
        "questionFrontendId": "2864",
        "title": "Maximum Odd Binary Number",
        "titleSlug": "maximum-odd-binary-number",
        "topicTags": [
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            }
        ],
        "companyNames": [
            "bloomberg",
            "google",
            "amazon"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/maximum-odd-binary-number/description"
    },
    "3206": {
        "difficulty": "EASY",
        "id": 3206,
        "questionFrontendId": "2956",
        "title": "Find Common Elements Between Two Arrays",
        "titleSlug": "find-common-elements-between-two-arrays",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            }
        ],
        "companyNames": [
            "bloomberg"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/find-common-elements-between-two-arrays/description"
    },
    "3249": {
        "difficulty": "MEDIUM",
        "id": 3249,
        "questionFrontendId": "2997",
        "title": "Minimum Number of Operations to Make Array XOR Equal to K",
        "titleSlug": "minimum-number-of-operations-to-make-array-xor-equal-to-k",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Bit Manipulation",
                "slug": "bit-manipulation"
            }
        ],
        "companyNames": [
            "bloomberg",
            "google",
            "amazon"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/minimum-number-of-operations-to-make-array-xor-equal-to-k/description"
    },
    "89": {
        "difficulty": "MEDIUM",
        "id": 89,
        "questionFrontendId": "89",
        "title": "Gray Code",
        "titleSlug": "gray-code",
        "topicTags": [
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Backtracking",
                "slug": "backtracking"
            },
            {
                "name": "Bit Manipulation",
                "slug": "bit-manipulation"
            }
        ],
        "companyNames": [
            "bloomberg",
            "apple",
            "google",
            "amazon"
        ],
        "frequencyCount": 4,
        "url": "https://leetcode.com/problems/gray-code/description"
    },
    "164": {
        "difficulty": "MEDIUM",
        "id": 164,
        "questionFrontendId": "164",
        "title": "Maximum Gap",
        "titleSlug": "maximum-gap",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            },
            {
                "name": "Bucket Sort",
                "slug": "bucket-sort"
            },
            {
                "name": "Radix Sort",
                "slug": "radix-sort"
            }
        ],
        "companyNames": [
            "bloomberg",
            "adobe",
            "doordash",
            "amazon"
        ],
        "frequencyCount": 4,
        "url": "https://leetcode.com/problems/maximum-gap/description"
    },
    "177": {
        "difficulty": "MEDIUM",
        "id": 177,
        "questionFrontendId": "177",
        "title": "Nth Highest Salary",
        "titleSlug": "nth-highest-salary",
        "topicTags": [
            {
                "name": "Database",
                "slug": "database"
            }
        ],
        "companyNames": [
            "bloomberg",
            "adobe",
            "amazon"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/nth-highest-salary/description"
    },
    "195": {
        "difficulty": "EASY",
        "id": 195,
        "questionFrontendId": "195",
        "title": "Tenth Line",
        "titleSlug": "tenth-line",
        "topicTags": [
            {
                "name": "Shell",
                "slug": "shell"
            }
        ],
        "companyNames": [
            "bloomberg",
            "adobe"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/tenth-line/description"
    },
    "241": {
        "difficulty": "MEDIUM",
        "id": 241,
        "questionFrontendId": "241",
        "title": "Different Ways to Add Parentheses",
        "titleSlug": "different-ways-to-add-parentheses",
        "topicTags": [
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Recursion",
                "slug": "recursion"
            },
            {
                "name": "Memoization",
                "slug": "memoization"
            }
        ],
        "companyNames": [
            "bloomberg",
            "adobe",
            "google",
            "amazon"
        ],
        "frequencyCount": 4,
        "url": "https://leetcode.com/problems/different-ways-to-add-parentheses/description"
    },
    "324": {
        "difficulty": "MEDIUM",
        "id": 324,
        "questionFrontendId": "324",
        "title": "Wiggle Sort II",
        "titleSlug": "wiggle-sort-ii",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Divide and Conquer",
                "slug": "divide-and-conquer"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            },
            {
                "name": "Quickselect",
                "slug": "quickselect"
            }
        ],
        "companyNames": [
            "bloomberg",
            "adobe",
            "google",
            "amazon"
        ],
        "frequencyCount": 4,
        "url": "https://leetcode.com/problems/wiggle-sort-ii/description"
    },
    "353": {
        "difficulty": "MEDIUM",
        "id": 353,
        "questionFrontendId": "353",
        "title": "Design Snake Game",
        "titleSlug": "design-snake-game",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Design",
                "slug": "design"
            },
            {
                "name": "Queue",
                "slug": "queue"
            },
            {
                "name": "Simulation",
                "slug": "simulation"
            }
        ],
        "companyNames": [
            "bloomberg",
            "google",
            "amazon"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/design-snake-game/description"
    },
    "357": {
        "difficulty": "MEDIUM",
        "id": 357,
        "questionFrontendId": "357",
        "title": "Count Numbers with Unique Digits",
        "titleSlug": "count-numbers-with-unique-digits",
        "topicTags": [
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Backtracking",
                "slug": "backtracking"
            }
        ],
        "companyNames": [
            "bloomberg",
            "apple",
            "google",
            "amazon"
        ],
        "frequencyCount": 4,
        "url": "https://leetcode.com/problems/count-numbers-with-unique-digits/description"
    },
    "363": {
        "difficulty": "HARD",
        "id": 363,
        "questionFrontendId": "363",
        "title": "Max Sum of Rectangle No Larger Than K",
        "titleSlug": "max-sum-of-rectangle-no-larger-than-k",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Binary Search",
                "slug": "binary-search"
            },
            {
                "name": "Matrix",
                "slug": "matrix"
            },
            {
                "name": "Prefix Sum",
                "slug": "prefix-sum"
            },
            {
                "name": "Ordered Set",
                "slug": "ordered-set"
            }
        ],
        "companyNames": [
            "bloomberg",
            "adobe",
            "google",
            "amazon"
        ],
        "frequencyCount": 4,
        "url": "https://leetcode.com/problems/max-sum-of-rectangle-no-larger-than-k/description"
    },
    "507": {
        "difficulty": "EASY",
        "id": 507,
        "questionFrontendId": "507",
        "title": "Perfect Number",
        "titleSlug": "perfect-number",
        "topicTags": [
            {
                "name": "Math",
                "slug": "math"
            }
        ],
        "companyNames": [
            "bloomberg",
            "apple",
            "accenture",
            "amazon"
        ],
        "frequencyCount": 4,
        "url": "https://leetcode.com/problems/perfect-number/description"
    },
    "524": {
        "difficulty": "MEDIUM",
        "id": 524,
        "questionFrontendId": "524",
        "title": "Longest Word in Dictionary through Deleting",
        "titleSlug": "longest-word-in-dictionary-through-deleting",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Two Pointers",
                "slug": "two-pointers"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ],
        "companyNames": [
            "bloomberg",
            "google"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/longest-word-in-dictionary-through-deleting/description"
    },
    "554": {
        "difficulty": "MEDIUM",
        "id": 554,
        "questionFrontendId": "554",
        "title": "Brick Wall",
        "titleSlug": "brick-wall",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            }
        ],
        "companyNames": [
            "bloomberg",
            "adobe",
            "google",
            "amazon"
        ],
        "frequencyCount": 4,
        "url": "https://leetcode.com/problems/brick-wall/description"
    },
    "566": {
        "difficulty": "EASY",
        "id": 566,
        "questionFrontendId": "566",
        "title": "Reshape the Matrix",
        "titleSlug": "reshape-the-matrix",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Matrix",
                "slug": "matrix"
            },
            {
                "name": "Simulation",
                "slug": "simulation"
            }
        ],
        "companyNames": [
            "bloomberg",
            "apple",
            "adobe"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/reshape-the-matrix/description"
    },
    "576": {
        "difficulty": "MEDIUM",
        "id": 576,
        "questionFrontendId": "576",
        "title": "Out of Boundary Paths",
        "titleSlug": "out-of-boundary-paths",
        "topicTags": [
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            }
        ],
        "companyNames": [
            "bloomberg",
            "apple",
            "adobe",
            "amazon"
        ],
        "frequencyCount": 4,
        "url": "https://leetcode.com/problems/out-of-boundary-paths/description"
    },
    "586": {
        "difficulty": "EASY",
        "id": 586,
        "questionFrontendId": "586",
        "title": "Customer Placing the Largest Number of Orders",
        "titleSlug": "customer-placing-the-largest-number-of-orders",
        "topicTags": [
            {
                "name": "Database",
                "slug": "database"
            }
        ],
        "companyNames": [
            "bloomberg",
            "apple",
            "adobe",
            "amazon"
        ],
        "frequencyCount": 4,
        "url": "https://leetcode.com/problems/customer-placing-the-largest-number-of-orders/description"
    },
    "593": {
        "difficulty": "MEDIUM",
        "id": 593,
        "questionFrontendId": "593",
        "title": "Valid Square",
        "titleSlug": "valid-square",
        "topicTags": [
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Geometry",
                "slug": "geometry"
            }
        ],
        "companyNames": [
            "bloomberg",
            "google"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/valid-square/description"
    },
    "676": {
        "difficulty": "MEDIUM",
        "id": 676,
        "questionFrontendId": "676",
        "title": "Implement Magic Dictionary",
        "titleSlug": "implement-magic-dictionary",
        "topicTags": [
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Design",
                "slug": "design"
            },
            {
                "name": "Trie",
                "slug": "trie"
            }
        ],
        "companyNames": [
            "bloomberg",
            "google"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/implement-magic-dictionary/description"
    },
    "682": {
        "difficulty": "EASY",
        "id": 682,
        "questionFrontendId": "682",
        "title": "Baseball Game",
        "titleSlug": "baseball-game",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Stack",
                "slug": "stack"
            },
            {
                "name": "Simulation",
                "slug": "simulation"
            }
        ],
        "companyNames": [
            "bloomberg",
            "apple",
            "google",
            "amazon"
        ],
        "frequencyCount": 4,
        "url": "https://leetcode.com/problems/baseball-game/description"
    },
    "764": {
        "difficulty": "MEDIUM",
        "id": 764,
        "questionFrontendId": "429",
        "title": "N-ary Tree Level Order Traversal",
        "titleSlug": "n-ary-tree-level-order-traversal",
        "topicTags": [
            {
                "name": "Tree",
                "slug": "tree"
            },
            {
                "name": "Breadth-First Search",
                "slug": "breadth-first-search"
            }
        ],
        "companyNames": [
            "bloomberg",
            "apple",
            "adobe",
            "google",
            "amazon"
        ],
        "frequencyCount": 5,
        "url": "https://leetcode.com/problems/n-ary-tree-level-order-traversal/description"
    },
    "816": {
        "difficulty": "EASY",
        "id": 816,
        "questionFrontendId": "705",
        "title": "Design HashSet",
        "titleSlug": "design-hashset",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Linked List",
                "slug": "linked-list"
            },
            {
                "name": "Design",
                "slug": "design"
            },
            {
                "name": "Hash Function",
                "slug": "hash-function"
            }
        ],
        "companyNames": [
            "bloomberg",
            "apple",
            "adobe",
            "google",
            "amazon"
        ],
        "frequencyCount": 5,
        "url": "https://leetcode.com/problems/design-hashset/description"
    },
    "822": {
        "difficulty": "EASY",
        "id": 822,
        "questionFrontendId": "804",
        "title": "Unique Morse Code Words",
        "titleSlug": "unique-morse-code-words",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "String",
                "slug": "string"
            }
        ],
        "companyNames": [
            "bloomberg",
            "google",
            "amazon"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/unique-morse-code-words/description"
    },
    "826": {
        "difficulty": "MEDIUM",
        "id": 826,
        "questionFrontendId": "808",
        "title": "Soup Servings",
        "titleSlug": "soup-servings",
        "topicTags": [
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Probability and Statistics",
                "slug": "probability-and-statistics"
            }
        ],
        "companyNames": [
            "bloomberg",
            "apple",
            "adobe",
            "google",
            "amazon"
        ],
        "frequencyCount": 5,
        "url": "https://leetcode.com/problems/soup-servings/description"
    },
    "836": {
        "difficulty": "HARD",
        "id": 836,
        "questionFrontendId": "818",
        "title": "Race Car",
        "titleSlug": "race-car",
        "topicTags": [
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            }
        ],
        "companyNames": [
            "bloomberg",
            "google",
            "amazon"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/race-car/description"
    },
    "864": {
        "difficulty": "MEDIUM",
        "id": 864,
        "questionFrontendId": "835",
        "title": "Image Overlap",
        "titleSlug": "image-overlap",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Matrix",
                "slug": "matrix"
            }
        ],
        "companyNames": [
            "bloomberg",
            "google",
            "amazon"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/image-overlap/description"
    },
    "868": {
        "difficulty": "MEDIUM",
        "id": 868,
        "questionFrontendId": "838",
        "title": "Push Dominoes",
        "titleSlug": "push-dominoes",
        "topicTags": [
            {
                "name": "Two Pointers",
                "slug": "two-pointers"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            }
        ],
        "companyNames": [
            "bloomberg",
            "adobe",
            "doordash",
            "google"
        ],
        "frequencyCount": 4,
        "url": "https://leetcode.com/problems/push-dominoes/description"
    },
    "873": {
        "difficulty": "HARD",
        "id": 873,
        "questionFrontendId": "843",
        "title": "Guess the Word",
        "titleSlug": "guess-the-word",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Interactive",
                "slug": "interactive"
            },
            {
                "name": "Game Theory",
                "slug": "game-theory"
            }
        ],
        "companyNames": [
            "bloomberg",
            "google",
            "amazon"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/guess-the-word/description"
    },
    "944": {
        "difficulty": "EASY",
        "id": 944,
        "questionFrontendId": "908",
        "title": "Smallest Range I",
        "titleSlug": "smallest-range-i",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Math",
                "slug": "math"
            }
        ],
        "companyNames": [
            "bloomberg",
            "adobe"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/smallest-range-i/description"
    },
    "950": {
        "difficulty": "EASY",
        "id": 950,
        "questionFrontendId": "914",
        "title": "X of a Kind in a Deck of Cards",
        "titleSlug": "x-of-a-kind-in-a-deck-of-cards",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Counting",
                "slug": "counting"
            },
            {
                "name": "Number Theory",
                "slug": "number-theory"
            }
        ],
        "companyNames": [
            "bloomberg",
            "adobe",
            "google"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/x-of-a-kind-in-a-deck-of-cards/description"
    },
    "961": {
        "difficulty": "EASY",
        "id": 961,
        "questionFrontendId": "925",
        "title": "Long Pressed Name",
        "titleSlug": "long-pressed-name",
        "topicTags": [
            {
                "name": "Two Pointers",
                "slug": "two-pointers"
            },
            {
                "name": "String",
                "slug": "string"
            }
        ],
        "companyNames": [
            "bloomberg",
            "adobe",
            "google",
            "amazon"
        ],
        "frequencyCount": 4,
        "url": "https://leetcode.com/problems/long-pressed-name/description"
    },
    "1047": {
        "difficulty": "EASY",
        "id": 1047,
        "questionFrontendId": "1005",
        "title": "Maximize Sum Of Array After K Negations",
        "titleSlug": "maximize-sum-of-array-after-k-negations",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ],
        "companyNames": [
            "bloomberg",
            "google"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/maximize-sum-of-array-after-k-negations/description"
    },
    "1120": {
        "difficulty": "MEDIUM",
        "id": 1120,
        "questionFrontendId": "1042",
        "title": "Flower Planting With No Adjacent",
        "titleSlug": "flower-planting-with-no-adjacent",
        "topicTags": [
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Breadth-First Search",
                "slug": "breadth-first-search"
            },
            {
                "name": "Graph",
                "slug": "graph"
            }
        ],
        "companyNames": [
            "bloomberg",
            "google",
            "amazon"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/flower-planting-with-no-adjacent/description"
    },
    "1121": {
        "difficulty": "MEDIUM",
        "id": 1121,
        "questionFrontendId": "1043",
        "title": "Partition Array for Maximum Sum",
        "titleSlug": "partition-array-for-maximum-sum",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            }
        ],
        "companyNames": [
            "bloomberg",
            "apple",
            "adobe",
            "google",
            "amazon"
        ],
        "frequencyCount": 5,
        "url": "https://leetcode.com/problems/partition-array-for-maximum-sum/description"
    },
    "1136": {
        "difficulty": "EASY",
        "id": 1136,
        "questionFrontendId": "1050",
        "title": "Actors and Directors Who Cooperated At Least Three Times",
        "titleSlug": "actors-and-directors-who-cooperated-at-least-three-times",
        "topicTags": [
            {
                "name": "Database",
                "slug": "database"
            }
        ],
        "companyNames": [
            "bloomberg",
            "amazon"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/actors-and-directors-who-cooperated-at-least-three-times/description"
    },
    "1238": {
        "difficulty": "MEDIUM",
        "id": 1238,
        "questionFrontendId": "1138",
        "title": "Alphabet Board Path",
        "titleSlug": "alphabet-board-path",
        "topicTags": [
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "String",
                "slug": "string"
            }
        ],
        "companyNames": [
            "bloomberg",
            "google",
            "amazon"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/alphabet-board-path/description"
    },
    "1256": {
        "difficulty": "EASY",
        "id": 1256,
        "questionFrontendId": "1331",
        "title": "Rank Transform of an Array",
        "titleSlug": "rank-transform-of-an-array",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ],
        "companyNames": [
            "bloomberg",
            "google"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/rank-transform-of-an-array/description"
    },
    "1286": {
        "difficulty": "HARD",
        "id": 1286,
        "questionFrontendId": "1425",
        "title": "Constrained Subsequence Sum",
        "titleSlug": "constrained-subsequence-sum",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Queue",
                "slug": "queue"
            },
            {
                "name": "Sliding Window",
                "slug": "sliding-window"
            },
            {
                "name": "Heap (Priority Queue)",
                "slug": "heap-priority-queue"
            },
            {
                "name": "Monotonic Queue",
                "slug": "monotonic-queue"
            }
        ],
        "companyNames": [
            "bloomberg",
            "apple",
            "google",
            "amazon"
        ],
        "frequencyCount": 4,
        "url": "https://leetcode.com/problems/constrained-subsequence-sum/description"
    },
    "1293": {
        "difficulty": "EASY",
        "id": 1293,
        "questionFrontendId": "1550",
        "title": "Three Consecutive Odds",
        "titleSlug": "three-consecutive-odds",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            }
        ],
        "companyNames": [
            "bloomberg",
            "google",
            "amazon"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/three-consecutive-odds/description"
    },
    "1332": {
        "difficulty": "HARD",
        "id": 1332,
        "questionFrontendId": "1220",
        "title": "Count Vowels Permutation",
        "titleSlug": "count-vowels-permutation",
        "topicTags": [
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            }
        ],
        "companyNames": [
            "bloomberg",
            "apple",
            "adobe",
            "google",
            "amazon"
        ],
        "frequencyCount": 5,
        "url": "https://leetcode.com/problems/count-vowels-permutation/description"
    },
    "1349": {
        "difficulty": "EASY",
        "id": 1349,
        "questionFrontendId": "1232",
        "title": "Check If It Is a Straight Line",
        "titleSlug": "check-if-it-is-a-straight-line",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Geometry",
                "slug": "geometry"
            }
        ],
        "companyNames": [
            "bloomberg",
            "apple",
            "adobe",
            "google",
            "amazon"
        ],
        "frequencyCount": 5,
        "url": "https://leetcode.com/problems/check-if-it-is-a-straight-line/description"
    },
    "1354": {
        "difficulty": "MEDIUM",
        "id": 1354,
        "questionFrontendId": "2225",
        "title": "Find Players With Zero or One Losses",
        "titleSlug": "find-players-with-zero-or-one-losses",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            },
            {
                "name": "Counting",
                "slug": "counting"
            }
        ],
        "companyNames": [
            "bloomberg",
            "apple",
            "google",
            "amazon"
        ],
        "frequencyCount": 4,
        "url": "https://leetcode.com/problems/find-players-with-zero-or-one-losses/description"
    },
    "1372": {
        "difficulty": "HARD",
        "id": 1372,
        "questionFrontendId": "1250",
        "title": "Check If It Is a Good Array",
        "titleSlug": "check-if-it-is-a-good-array",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Number Theory",
                "slug": "number-theory"
            }
        ],
        "companyNames": [
            "bloomberg",
            "apple",
            "google",
            "amazon"
        ],
        "frequencyCount": 4,
        "url": "https://leetcode.com/problems/check-if-it-is-a-good-array/description"
    },
    "1378": {
        "difficulty": "EASY",
        "id": 1378,
        "questionFrontendId": "1252",
        "title": "Cells with Odd Values in a Matrix",
        "titleSlug": "cells-with-odd-values-in-a-matrix",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Simulation",
                "slug": "simulation"
            }
        ],
        "companyNames": [
            "bloomberg",
            "amazon"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/cells-with-odd-values-in-a-matrix/description"
    },
    "1388": {
        "difficulty": "MEDIUM",
        "id": 1388,
        "questionFrontendId": "1262",
        "title": "Greatest Sum Divisible by Three",
        "titleSlug": "greatest-sum-divisible-by-three",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ],
        "companyNames": [
            "bloomberg"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/greatest-sum-divisible-by-three/description"
    },
    "1407": {
        "difficulty": "MEDIUM",
        "id": 1407,
        "questionFrontendId": "1282",
        "title": "Group the People Given the Group Size They Belong To",
        "titleSlug": "group-the-people-given-the-group-size-they-belong-to",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            }
        ],
        "companyNames": [
            "bloomberg",
            "apple",
            "adobe",
            "walmart_labs",
            "amazon"
        ],
        "frequencyCount": 5,
        "url": "https://leetcode.com/problems/group-the-people-given-the-group-size-they-belong-to/description"
    },
    "1480": {
        "difficulty": "MEDIUM",
        "id": 1480,
        "questionFrontendId": "1341",
        "title": "Movie Rating",
        "titleSlug": "movie-rating",
        "topicTags": [
            {
                "name": "Database",
                "slug": "database"
            }
        ],
        "companyNames": [
            "bloomberg",
            "amazon"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/movie-rating/description"
    },
    "1498": {
        "difficulty": "EASY",
        "id": 1498,
        "questionFrontendId": "1379",
        "title": "Find a Corresponding Node of a Binary Tree in a Clone of That Tree",
        "titleSlug": "find-a-corresponding-node-of-a-binary-tree-in-a-clone-of-that-tree",
        "topicTags": [
            {
                "name": "Tree",
                "slug": "tree"
            },
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Breadth-First Search",
                "slug": "breadth-first-search"
            },
            {
                "name": "Binary Tree",
                "slug": "binary-tree"
            }
        ],
        "companyNames": [
            "bloomberg",
            "amazon"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/find-a-corresponding-node-of-a-binary-tree-in-a-clone-of-that-tree/description"
    },
    "1547": {
        "difficulty": "EASY",
        "id": 1547,
        "questionFrontendId": "1436",
        "title": "Destination City",
        "titleSlug": "destination-city",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "String",
                "slug": "string"
            }
        ],
        "companyNames": [
            "bloomberg",
            "apple",
            "google",
            "amazon"
        ],
        "frequencyCount": 4,
        "url": "https://leetcode.com/problems/destination-city/description"
    },
    "1553": {
        "difficulty": "MEDIUM",
        "id": 1553,
        "questionFrontendId": "1442",
        "title": "Count Triplets That Can Form Two Arrays of Equal XOR",
        "titleSlug": "count-triplets-that-can-form-two-arrays-of-equal-xor",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Bit Manipulation",
                "slug": "bit-manipulation"
            },
            {
                "name": "Prefix Sum",
                "slug": "prefix-sum"
            }
        ],
        "companyNames": [
            "bloomberg",
            "google",
            "amazon"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/count-triplets-that-can-form-two-arrays-of-equal-xor/description"
    },
    "1560": {
        "difficulty": "EASY",
        "id": 1560,
        "questionFrontendId": "1450",
        "title": "Number of Students Doing Homework at a Given Time",
        "titleSlug": "number-of-students-doing-homework-at-a-given-time",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            }
        ],
        "companyNames": [
            "bloomberg"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/number-of-students-doing-homework-at-a-given-time/description"
    },
    "1572": {
        "difficulty": "MEDIUM",
        "id": 1572,
        "questionFrontendId": "1476",
        "title": "Subrectangle Queries",
        "titleSlug": "subrectangle-queries",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Design",
                "slug": "design"
            },
            {
                "name": "Matrix",
                "slug": "matrix"
            }
        ],
        "companyNames": [
            "bloomberg",
            "google",
            "amazon"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/subrectangle-queries/description"
    },
    "1584": {
        "difficulty": "EASY",
        "id": 1584,
        "questionFrontendId": "1491",
        "title": "Average Salary Excluding the Minimum and Maximum Salary",
        "titleSlug": "average-salary-excluding-the-minimum-and-maximum-salary",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ],
        "companyNames": [
            "bloomberg",
            "google",
            "amazon"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/average-salary-excluding-the-minimum-and-maximum-salary/description"
    },
    "1586": {
        "difficulty": "MEDIUM",
        "id": 1586,
        "questionFrontendId": "1493",
        "title": "Longest Subarray of 1's After Deleting One Element",
        "titleSlug": "longest-subarray-of-1s-after-deleting-one-element",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Sliding Window",
                "slug": "sliding-window"
            }
        ],
        "companyNames": [
            "bloomberg",
            "apple",
            "adobe",
            "google",
            "amazon"
        ],
        "frequencyCount": 5,
        "url": "https://leetcode.com/problems/longest-subarray-of-1s-after-deleting-one-element/description"
    },
    "1610": {
        "difficulty": "EASY",
        "id": 1610,
        "questionFrontendId": "1486",
        "title": "XOR Operation in an Array",
        "titleSlug": "xor-operation-in-an-array",
        "topicTags": [
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Bit Manipulation",
                "slug": "bit-manipulation"
            }
        ],
        "companyNames": [
            "bloomberg",
            "walmart_labs"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/xor-operation-in-an-array/description"
    },
    "1650": {
        "difficulty": "MEDIUM",
        "id": 1650,
        "questionFrontendId": "1506",
        "title": "Find Root of N-Ary Tree",
        "titleSlug": "find-root-of-n-ary-tree",
        "topicTags": [
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Bit Manipulation",
                "slug": "bit-manipulation"
            },
            {
                "name": "Tree",
                "slug": "tree"
            },
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            }
        ],
        "companyNames": [
            "bloomberg",
            "google"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/find-root-of-n-ary-tree/description"
    },
    "1674": {
        "difficulty": "MEDIUM",
        "id": 1674,
        "questionFrontendId": "1551",
        "title": "Minimum Operations to Make Array Equal",
        "titleSlug": "minimum-operations-to-make-array-equal",
        "topicTags": [
            {
                "name": "Math",
                "slug": "math"
            }
        ],
        "companyNames": [
            "bloomberg"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/minimum-operations-to-make-array-equal/description"
    },
    "1691": {
        "difficulty": "HARD",
        "id": 1691,
        "questionFrontendId": "1568",
        "title": "Minimum Number of Days to Disconnect Island",
        "titleSlug": "minimum-number-of-days-to-disconnect-island",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Breadth-First Search",
                "slug": "breadth-first-search"
            },
            {
                "name": "Matrix",
                "slug": "matrix"
            },
            {
                "name": "Strongly Connected Component",
                "slug": "strongly-connected-component"
            }
        ],
        "companyNames": [
            "bloomberg",
            "google",
            "amazon"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/minimum-number-of-days-to-disconnect-island/description"
    },
    "1752": {
        "difficulty": "MEDIUM",
        "id": 1752,
        "questionFrontendId": "1630",
        "title": "Arithmetic Subarrays",
        "titleSlug": "arithmetic-subarrays",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ],
        "companyNames": [
            "bloomberg",
            "adobe",
            "google",
            "amazon"
        ],
        "frequencyCount": 4,
        "url": "https://leetcode.com/problems/arithmetic-subarrays/description"
    },
    "1823": {
        "difficulty": "EASY",
        "id": 1823,
        "questionFrontendId": "1704",
        "title": "Determine if String Halves Are Alike",
        "titleSlug": "determine-if-string-halves-are-alike",
        "topicTags": [
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Counting",
                "slug": "counting"
            }
        ],
        "companyNames": [
            "bloomberg",
            "apple",
            "adobe",
            "amazon"
        ],
        "frequencyCount": 4,
        "url": "https://leetcode.com/problems/determine-if-string-halves-are-alike/description"
    },
    "1839": {
        "difficulty": "EASY",
        "id": 1839,
        "questionFrontendId": "1720",
        "title": "Decode XORed Array",
        "titleSlug": "decode-xored-array",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Bit Manipulation",
                "slug": "bit-manipulation"
            }
        ],
        "companyNames": [
            "bloomberg",
            "apple",
            "amazon"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/decode-xored-array/description"
    },
    "1970": {
        "difficulty": "EASY",
        "id": 1970,
        "questionFrontendId": "1859",
        "title": "Sorting the Sentence",
        "titleSlug": "sorting-the-sentence",
        "topicTags": [
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ],
        "companyNames": [
            "bloomberg",
            "google",
            "amazon"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/sorting-the-sentence/description"
    },
    "1988": {
        "difficulty": "MEDIUM",
        "id": 1988,
        "questionFrontendId": "1877",
        "title": "Minimize Maximum Pair Sum in Array",
        "titleSlug": "minimize-maximum-pair-sum-in-array",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Two Pointers",
                "slug": "two-pointers"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ],
        "companyNames": [
            "bloomberg",
            "google",
            "amazon"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/minimize-maximum-pair-sum-in-array/description"
    },
    "2022": {
        "difficulty": "MEDIUM",
        "id": 2022,
        "questionFrontendId": "1911",
        "title": "Maximum Alternating Subsequence Sum",
        "titleSlug": "maximum-alternating-subsequence-sum",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            }
        ],
        "companyNames": [
            "bloomberg",
            "amazon"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/maximum-alternating-subsequence-sum/description"
    },
    "2042": {
        "difficulty": "EASY",
        "id": 2042,
        "questionFrontendId": "1913",
        "title": "Maximum Product Difference Between Two Pairs",
        "titleSlug": "maximum-product-difference-between-two-pairs",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ],
        "companyNames": [
            "bloomberg",
            "apple",
            "adobe",
            "google",
            "amazon"
        ],
        "frequencyCount": 5,
        "url": "https://leetcode.com/problems/maximum-product-difference-between-two-pairs/description"
    },
    "2090": {
        "difficulty": "MEDIUM",
        "id": 2090,
        "questionFrontendId": "1976",
        "title": "Number of Ways to Arrive at Destination",
        "titleSlug": "number-of-ways-to-arrive-at-destination",
        "topicTags": [
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Graph",
                "slug": "graph"
            },
            {
                "name": "Topological Sort",
                "slug": "topological-sort"
            },
            {
                "name": "Shortest Path",
                "slug": "shortest-path"
            }
        ],
        "companyNames": [
            "bloomberg",
            "amazon"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/number-of-ways-to-arrive-at-destination/description"
    },
    "2106": {
        "difficulty": "EASY",
        "id": 2106,
        "questionFrontendId": "1979",
        "title": "Find Greatest Common Divisor of Array",
        "titleSlug": "find-greatest-common-divisor-of-array",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Number Theory",
                "slug": "number-theory"
            }
        ],
        "companyNames": [
            "bloomberg",
            "google",
            "amazon"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/find-greatest-common-divisor-of-array/description"
    },
    "2127": {
        "difficulty": "EASY",
        "id": 2127,
        "questionFrontendId": "1978",
        "title": "Employees Whose Manager Left the Company",
        "titleSlug": "employees-whose-manager-left-the-company",
        "topicTags": [
            {
                "name": "Database",
                "slug": "database"
            }
        ],
        "companyNames": [
            "bloomberg",
            "apple",
            "adobe",
            "google",
            "amazon"
        ],
        "frequencyCount": 5,
        "url": "https://leetcode.com/problems/employees-whose-manager-left-the-company/description"
    },
    "2137": {
        "difficulty": "EASY",
        "id": 2137,
        "questionFrontendId": "2011",
        "title": "Final Value of Variable After Performing Operations",
        "titleSlug": "final-value-of-variable-after-performing-operations",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Simulation",
                "slug": "simulation"
            }
        ],
        "companyNames": [
            "bloomberg",
            "adobe",
            "google",
            "amazon"
        ],
        "frequencyCount": 4,
        "url": "https://leetcode.com/problems/final-value-of-variable-after-performing-operations/description"
    },
    "2188": {
        "difficulty": "MEDIUM",
        "id": 2188,
        "questionFrontendId": "2064",
        "title": "Minimized Maximum of Products Distributed to Any Store",
        "titleSlug": "minimized-maximum-of-products-distributed-to-any-store",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Binary Search",
                "slug": "binary-search"
            }
        ],
        "companyNames": [
            "bloomberg",
            "google",
            "amazon"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/minimized-maximum-of-products-distributed-to-any-store/description"
    },
    "2231": {
        "difficulty": "EASY",
        "id": 2231,
        "questionFrontendId": "2108",
        "title": "Find First Palindromic String in the Array",
        "titleSlug": "find-first-palindromic-string-in-the-array",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Two Pointers",
                "slug": "two-pointers"
            },
            {
                "name": "String",
                "slug": "string"
            }
        ],
        "companyNames": [
            "bloomberg",
            "google",
            "amazon"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/find-first-palindromic-string-in-the-array/description"
    },
    "2283": {
        "difficulty": "EASY",
        "id": 2283,
        "questionFrontendId": "2164",
        "title": "Sort Even and Odd Indices Independently",
        "titleSlug": "sort-even-and-odd-indices-independently",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ],
        "companyNames": [
            "bloomberg"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/sort-even-and-odd-indices-independently/description"
    },
    "2360": {
        "difficulty": "HARD",
        "id": 2360,
        "questionFrontendId": "2272",
        "title": "Substring With Largest Variance",
        "titleSlug": "substring-with-largest-variance",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            }
        ],
        "companyNames": [
            "bloomberg",
            "amazon"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/substring-with-largest-variance/description"
    },
    "2406": {
        "difficulty": "EASY",
        "id": 2406,
        "questionFrontendId": "2325",
        "title": "Decode the Message",
        "titleSlug": "decode-the-message",
        "topicTags": [
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "String",
                "slug": "string"
            }
        ],
        "companyNames": [
            "bloomberg",
            "adobe",
            "amazon"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/decode-the-message/description"
    },
    "2413": {
        "difficulty": "MEDIUM",
        "id": 2413,
        "questionFrontendId": "2336",
        "title": "Smallest Number in Infinite Set",
        "titleSlug": "smallest-number-in-infinite-set",
        "topicTags": [
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Design",
                "slug": "design"
            },
            {
                "name": "Heap (Priority Queue)",
                "slug": "heap-priority-queue"
            }
        ],
        "companyNames": [
            "bloomberg",
            "amazon"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/smallest-number-in-infinite-set/description"
    },
    "2416": {
        "difficulty": "EASY",
        "id": 2416,
        "questionFrontendId": "2331",
        "title": "Evaluate Boolean Binary Tree",
        "titleSlug": "evaluate-boolean-binary-tree",
        "topicTags": [
            {
                "name": "Tree",
                "slug": "tree"
            },
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Binary Tree",
                "slug": "binary-tree"
            }
        ],
        "companyNames": [
            "bloomberg",
            "apple",
            "google"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/evaluate-boolean-binary-tree/description"
    },
    "2436": {
        "difficulty": "EASY",
        "id": 2436,
        "questionFrontendId": "2357",
        "title": "Make Array Zero by Subtracting Equal Amounts",
        "titleSlug": "make-array-zero-by-subtracting-equal-amounts",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            },
            {
                "name": "Heap (Priority Queue)",
                "slug": "heap-priority-queue"
            },
            {
                "name": "Simulation",
                "slug": "simulation"
            }
        ],
        "companyNames": [
            "bloomberg",
            "amazon"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/make-array-zero-by-subtracting-equal-amounts/description"
    },
    "2459": {
        "difficulty": "EASY",
        "id": 2459,
        "questionFrontendId": "2383",
        "title": "Minimum Hours of Training to Win a Competition",
        "titleSlug": "minimum-hours-of-training-to-win-a-competition",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            }
        ],
        "companyNames": [
            "bloomberg"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/minimum-hours-of-training-to-win-a-competition/description"
    },
    "2469": {
        "difficulty": "EASY",
        "id": 2469,
        "questionFrontendId": "2389",
        "title": "Longest Subsequence With Limited Sum",
        "titleSlug": "longest-subsequence-with-limited-sum",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Binary Search",
                "slug": "binary-search"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            },
            {
                "name": "Prefix Sum",
                "slug": "prefix-sum"
            }
        ],
        "companyNames": [
            "bloomberg",
            "apple",
            "adobe",
            "google"
        ],
        "frequencyCount": 4,
        "url": "https://leetcode.com/problems/longest-subsequence-with-limited-sum/description"
    },
    "2470": {
        "difficulty": "MEDIUM",
        "id": 2470,
        "questionFrontendId": "2390",
        "title": "Removing Stars From a String",
        "titleSlug": "removing-stars-from-a-string",
        "topicTags": [
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Stack",
                "slug": "stack"
            },
            {
                "name": "Simulation",
                "slug": "simulation"
            }
        ],
        "companyNames": [
            "bloomberg",
            "google",
            "amazon"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/removing-stars-from-a-string/description"
    },
    "2477": {
        "difficulty": "MEDIUM",
        "id": 2477,
        "questionFrontendId": "2400",
        "title": "Number of Ways to Reach a Position After Exactly k Steps",
        "titleSlug": "number-of-ways-to-reach-a-position-after-exactly-k-steps",
        "topicTags": [
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Combinatorics",
                "slug": "combinatorics"
            }
        ],
        "companyNames": [
            "bloomberg",
            "amazon"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/number-of-ways-to-reach-a-position-after-exactly-k-steps/description"
    },
    "2553": {
        "difficulty": "MEDIUM",
        "id": 2553,
        "questionFrontendId": "2462",
        "title": "Total Cost to Hire K Workers",
        "titleSlug": "total-cost-to-hire-k-workers",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Two Pointers",
                "slug": "two-pointers"
            },
            {
                "name": "Heap (Priority Queue)",
                "slug": "heap-priority-queue"
            },
            {
                "name": "Simulation",
                "slug": "simulation"
            }
        ],
        "companyNames": [
            "bloomberg",
            "adobe",
            "amazon"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/total-cost-to-hire-k-workers/description"
    },
    "2571": {
        "difficulty": "EASY",
        "id": 2571,
        "questionFrontendId": "2485",
        "title": "Find the Pivot Integer",
        "titleSlug": "find-the-pivot-integer",
        "topicTags": [
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Prefix Sum",
                "slug": "prefix-sum"
            }
        ],
        "companyNames": [
            "bloomberg",
            "apple",
            "amazon"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/find-the-pivot-integer/description"
    },
    "2614": {
        "difficulty": "EASY",
        "id": 2614,
        "questionFrontendId": "2529",
        "title": "Maximum Count of Positive Integer and Negative Integer",
        "titleSlug": "maximum-count-of-positive-integer-and-negative-integer",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Binary Search",
                "slug": "binary-search"
            },
            {
                "name": "Counting",
                "slug": "counting"
            }
        ],
        "companyNames": [
            "bloomberg",
            "amazon"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/maximum-count-of-positive-integer-and-negative-integer/description"
    },
    "2646": {
        "difficulty": "MEDIUM",
        "id": 2646,
        "questionFrontendId": "2583",
        "title": "Kth Largest Sum in a Binary Tree",
        "titleSlug": "kth-largest-sum-in-a-binary-tree",
        "topicTags": [
            {
                "name": "Tree",
                "slug": "tree"
            },
            {
                "name": "Breadth-First Search",
                "slug": "breadth-first-search"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            },
            {
                "name": "Binary Tree",
                "slug": "binary-tree"
            }
        ],
        "companyNames": [
            "bloomberg",
            "amazon"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/kth-largest-sum-in-a-binary-tree/description"
    },
    "2659": {
        "difficulty": "EASY",
        "id": 2659,
        "questionFrontendId": "2595",
        "title": "Number of Even and Odd Bits",
        "titleSlug": "number-of-even-and-odd-bits",
        "topicTags": [
            {
                "name": "Bit Manipulation",
                "slug": "bit-manipulation"
            }
        ],
        "companyNames": [
            "bloomberg"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/number-of-even-and-odd-bits/description"
    },
    "2678": {
        "difficulty": "HARD",
        "id": 2678,
        "questionFrontendId": "2642",
        "title": "Design Graph With Shortest Path Calculator",
        "titleSlug": "design-graph-with-shortest-path-calculator",
        "topicTags": [
            {
                "name": "Graph",
                "slug": "graph"
            },
            {
                "name": "Design",
                "slug": "design"
            },
            {
                "name": "Heap (Priority Queue)",
                "slug": "heap-priority-queue"
            },
            {
                "name": "Shortest Path",
                "slug": "shortest-path"
            }
        ],
        "companyNames": [
            "bloomberg",
            "google"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/design-graph-with-shortest-path-calculator/description"
    },
    "2711": {
        "difficulty": "HARD",
        "id": 2711,
        "questionFrontendId": "2577",
        "title": "Minimum Time to Visit a Cell In a Grid",
        "titleSlug": "minimum-time-to-visit-a-cell-in-a-grid",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Breadth-First Search",
                "slug": "breadth-first-search"
            },
            {
                "name": "Graph",
                "slug": "graph"
            },
            {
                "name": "Heap (Priority Queue)",
                "slug": "heap-priority-queue"
            },
            {
                "name": "Matrix",
                "slug": "matrix"
            },
            {
                "name": "Shortest Path",
                "slug": "shortest-path"
            }
        ],
        "companyNames": [
            "bloomberg"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/minimum-time-to-visit-a-cell-in-a-grid/description"
    },
    "2721": {
        "difficulty": "MEDIUM",
        "id": 2721,
        "questionFrontendId": "2615",
        "title": "Sum of Distances",
        "titleSlug": "sum-of-distances",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Prefix Sum",
                "slug": "prefix-sum"
            }
        ],
        "companyNames": [
            "bloomberg",
            "adobe"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/sum-of-distances/description"
    },
    "2725": {
        "difficulty": "MEDIUM",
        "id": 2725,
        "questionFrontendId": "2611",
        "title": "Mice and Cheese",
        "titleSlug": "mice-and-cheese",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            },
            {
                "name": "Heap (Priority Queue)",
                "slug": "heap-priority-queue"
            }
        ],
        "companyNames": [
            "bloomberg",
            "doordash"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/mice-and-cheese/description"
    },
    "2734": {
        "difficulty": "EASY",
        "id": 2734,
        "questionFrontendId": "2619",
        "title": "Array Prototype Last",
        "titleSlug": "array-prototype-last",
        "topicTags": [],
        "companyNames": [
            "bloomberg",
            "apple",
            "adobe",
            "google",
            "amazon"
        ],
        "frequencyCount": 5,
        "url": "https://leetcode.com/problems/array-prototype-last/description"
    },
    "2780": {
        "difficulty": "MEDIUM",
        "id": 2780,
        "questionFrontendId": "2673",
        "title": "Make Costs of Paths Equal in a Binary Tree",
        "titleSlug": "make-costs-of-paths-equal-in-a-binary-tree",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            },
            {
                "name": "Tree",
                "slug": "tree"
            },
            {
                "name": "Binary Tree",
                "slug": "binary-tree"
            }
        ],
        "companyNames": [
            "bloomberg"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/make-costs-of-paths-equal-in-a-binary-tree/description"
    },
    "2816": {
        "difficulty": "EASY",
        "id": 2816,
        "questionFrontendId": "2697",
        "title": "Lexicographically Smallest Palindrome",
        "titleSlug": "lexicographically-smallest-palindrome",
        "topicTags": [
            {
                "name": "Two Pointers",
                "slug": "two-pointers"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            }
        ],
        "companyNames": [
            "bloomberg",
            "amazon"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/lexicographically-smallest-palindrome/description"
    },
    "2847": {
        "difficulty": "EASY",
        "id": 2847,
        "questionFrontendId": "2744",
        "title": "Find Maximum Number of String Pairs",
        "titleSlug": "find-maximum-number-of-string-pairs",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Simulation",
                "slug": "simulation"
            }
        ],
        "companyNames": [
            "bloomberg"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/find-maximum-number-of-string-pairs/description"
    },
    "2914": {
        "difficulty": "MEDIUM",
        "id": 2914,
        "questionFrontendId": "2812",
        "title": "Find the Safest Path in a Grid",
        "titleSlug": "find-the-safest-path-in-a-grid",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Binary Search",
                "slug": "binary-search"
            },
            {
                "name": "Breadth-First Search",
                "slug": "breadth-first-search"
            },
            {
                "name": "Union Find",
                "slug": "union-find"
            },
            {
                "name": "Matrix",
                "slug": "matrix"
            }
        ],
        "companyNames": [
            "bloomberg",
            "google",
            "amazon"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/find-the-safest-path-in-a-grid/description"
    },
    "2979": {
        "difficulty": "MEDIUM",
        "id": 2979,
        "questionFrontendId": "2830",
        "title": "Maximize the Profit as the Salesman",
        "titleSlug": "maximize-the-profit-as-the-salesman",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Binary Search",
                "slug": "binary-search"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ],
        "companyNames": [
            "bloomberg",
            "amazon"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/maximize-the-profit-as-the-salesman/description"
    },
    "3072": {
        "difficulty": "EASY",
        "id": 3072,
        "questionFrontendId": "2889",
        "title": "Reshape Data: Pivot",
        "titleSlug": "reshape-data-pivot",
        "topicTags": [],
        "companyNames": [
            "bloomberg"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/reshape-data-pivot/description"
    },
    "3079": {
        "difficulty": "HARD",
        "id": 3079,
        "questionFrontendId": "2846",
        "title": "Minimum Edge Weight Equilibrium Queries in a Tree",
        "titleSlug": "minimum-edge-weight-equilibrium-queries-in-a-tree",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Tree",
                "slug": "tree"
            },
            {
                "name": "Graph",
                "slug": "graph"
            },
            {
                "name": "Strongly Connected Component",
                "slug": "strongly-connected-component"
            }
        ],
        "companyNames": [
            "bloomberg"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/minimum-edge-weight-equilibrium-queries-in-a-tree/description"
    },
    "3081": {
        "difficulty": "MEDIUM",
        "id": 3081,
        "questionFrontendId": "2856",
        "title": "Minimum Array Length After Pair Removals",
        "titleSlug": "minimum-array-length-after-pair-removals",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Two Pointers",
                "slug": "two-pointers"
            },
            {
                "name": "Binary Search",
                "slug": "binary-search"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            },
            {
                "name": "Counting",
                "slug": "counting"
            }
        ],
        "companyNames": [
            "bloomberg",
            "adobe"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/minimum-array-length-after-pair-removals/description"
    },
    "3376": {
        "difficulty": "HARD",
        "id": 3376,
        "questionFrontendId": "3093",
        "title": "Longest Common Suffix Queries",
        "titleSlug": "longest-common-suffix-queries",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Trie",
                "slug": "trie"
            }
        ],
        "companyNames": [
            "bloomberg",
            "google"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/longest-common-suffix-queries/description"
    },
    "3386": {
        "difficulty": "HARD",
        "id": 3386,
        "questionFrontendId": "3123",
        "title": "Find Edges in Shortest Paths",
        "titleSlug": "find-edges-in-shortest-paths",
        "topicTags": [
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Breadth-First Search",
                "slug": "breadth-first-search"
            },
            {
                "name": "Graph",
                "slug": "graph"
            },
            {
                "name": "Heap (Priority Queue)",
                "slug": "heap-priority-queue"
            },
            {
                "name": "Shortest Path",
                "slug": "shortest-path"
            }
        ],
        "companyNames": [
            "bloomberg"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/find-edges-in-shortest-paths/description"
    },
    "3397": {
        "difficulty": "EASY",
        "id": 3397,
        "questionFrontendId": "3131",
        "title": "Find the Integer Added to Array I",
        "titleSlug": "find-the-integer-added-to-array-i",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            }
        ],
        "companyNames": [
            "bloomberg"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/find-the-integer-added-to-array-i/description"
    },
    "3444": {
        "difficulty": "MEDIUM",
        "id": 3444,
        "questionFrontendId": "3164",
        "title": "Find the Number of Good Pairs II",
        "titleSlug": "find-the-number-of-good-pairs-ii",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            }
        ],
        "companyNames": [
            "bloomberg",
            "amazon"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/find-the-number-of-good-pairs-ii/description"
    },
    "1038": {
        "difficulty": "HARD",
        "id": 1038,
        "questionFrontendId": "996",
        "title": "Number of Squareful Arrays",
        "titleSlug": "number-of-squareful-arrays",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Backtracking",
                "slug": "backtracking"
            },
            {
                "name": "Bit Manipulation",
                "slug": "bit-manipulation"
            },
            {
                "name": "Bitmask",
                "slug": "bitmask"
            }
        ],
        "companyNames": [
            "apple"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/number-of-squareful-arrays/description"
    },
    "2133": {
        "difficulty": "MEDIUM",
        "id": 2133,
        "questionFrontendId": "2023",
        "title": "Number of Pairs of Strings With Concatenation Equal to Target",
        "titleSlug": "number-of-pairs-of-strings-with-concatenation-equal-to-target",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Counting",
                "slug": "counting"
            }
        ],
        "companyNames": [
            "apple"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/number-of-pairs-of-strings-with-concatenation-equal-to-target/description"
    },
    "565": {
        "difficulty": "MEDIUM",
        "id": 565,
        "questionFrontendId": "565",
        "title": "Array Nesting",
        "titleSlug": "array-nesting",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            }
        ],
        "companyNames": [
            "apple"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/array-nesting/description"
    },
    "2482": {
        "difficulty": "MEDIUM",
        "id": 2482,
        "questionFrontendId": "2397",
        "title": "Maximum Rows Covered by Columns",
        "titleSlug": "maximum-rows-covered-by-columns",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Backtracking",
                "slug": "backtracking"
            },
            {
                "name": "Bit Manipulation",
                "slug": "bit-manipulation"
            },
            {
                "name": "Matrix",
                "slug": "matrix"
            },
            {
                "name": "Enumeration",
                "slug": "enumeration"
            }
        ],
        "companyNames": [
            "apple"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/maximum-rows-covered-by-columns/description"
    },
    "3248": {
        "difficulty": "HARD",
        "id": 3248,
        "questionFrontendId": "2972",
        "title": "Count the Number of Incremovable Subarrays II",
        "titleSlug": "count-the-number-of-incremovable-subarrays-ii",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Two Pointers",
                "slug": "two-pointers"
            },
            {
                "name": "Binary Search",
                "slug": "binary-search"
            }
        ],
        "companyNames": [
            "apple"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/count-the-number-of-incremovable-subarrays-ii/description"
    },
    "3252": {
        "difficulty": "EASY",
        "id": 3252,
        "questionFrontendId": "2970",
        "title": "Count the Number of Incremovable Subarrays I",
        "titleSlug": "count-the-number-of-incremovable-subarrays-i",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Two Pointers",
                "slug": "two-pointers"
            },
            {
                "name": "Binary Search",
                "slug": "binary-search"
            },
            {
                "name": "Enumeration",
                "slug": "enumeration"
            }
        ],
        "companyNames": [
            "apple"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/count-the-number-of-incremovable-subarrays-i/description"
    },
    "3272": {
        "difficulty": "MEDIUM",
        "id": 3272,
        "questionFrontendId": "3030",
        "title": "Find the Grid of Region Average",
        "titleSlug": "find-the-grid-of-region-average",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Matrix",
                "slug": "matrix"
            }
        ],
        "companyNames": [
            "apple"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/find-the-grid-of-region-average/description"
    },
    "1278": {
        "difficulty": "MEDIUM",
        "id": 1278,
        "questionFrontendId": "1164",
        "title": "Product Price at a Given Date",
        "titleSlug": "product-price-at-a-given-date",
        "topicTags": [
            {
                "name": "Database",
                "slug": "database"
            }
        ],
        "companyNames": [
            "apple",
            "adobe",
            "google",
            "amazon"
        ],
        "frequencyCount": 4,
        "url": "https://leetcode.com/problems/product-price-at-a-given-date/description"
    },
    "1899": {
        "difficulty": "EASY",
        "id": 1899,
        "questionFrontendId": "1773",
        "title": "Count Items Matching a Rule",
        "titleSlug": "count-items-matching-a-rule",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "String",
                "slug": "string"
            }
        ],
        "companyNames": [
            "apple",
            "adobe",
            "amazon"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/count-items-matching-a-rule/description"
    },
    "797": {
        "difficulty": "MEDIUM",
        "id": 797,
        "questionFrontendId": "781",
        "title": "Rabbits in Forest",
        "titleSlug": "rabbits-in-forest",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            }
        ],
        "companyNames": [
            "apple",
            "google",
            "amazon"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/rabbits-in-forest/description"
    },
    "1187": {
        "difficulty": "MEDIUM",
        "id": 1187,
        "questionFrontendId": "1115",
        "title": "Print FooBar Alternately",
        "titleSlug": "print-foobar-alternately",
        "topicTags": [
            {
                "name": "Concurrency",
                "slug": "concurrency"
            }
        ],
        "companyNames": [
            "apple"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/print-foobar-alternately/description"
    },
    "1463": {
        "difficulty": "EASY",
        "id": 1463,
        "questionFrontendId": "1337",
        "title": "The K Weakest Rows in a Matrix",
        "titleSlug": "the-k-weakest-rows-in-a-matrix",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Binary Search",
                "slug": "binary-search"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            },
            {
                "name": "Heap (Priority Queue)",
                "slug": "heap-priority-queue"
            },
            {
                "name": "Matrix",
                "slug": "matrix"
            }
        ],
        "companyNames": [
            "apple",
            "google",
            "amazon"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/the-k-weakest-rows-in-a-matrix/description"
    },
    "1777": {
        "difficulty": "MEDIUM",
        "id": 1777,
        "questionFrontendId": "1657",
        "title": "Determine if Two Strings Are Close",
        "titleSlug": "determine-if-two-strings-are-close",
        "topicTags": [
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            },
            {
                "name": "Counting",
                "slug": "counting"
            }
        ],
        "companyNames": [
            "apple",
            "adobe",
            "google",
            "amazon"
        ],
        "frequencyCount": 4,
        "url": "https://leetcode.com/problems/determine-if-two-strings-are-close/description"
    },
    "1794": {
        "difficulty": "HARD",
        "id": 1794,
        "questionFrontendId": "1675",
        "title": "Minimize Deviation in Array",
        "titleSlug": "minimize-deviation-in-array",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            },
            {
                "name": "Heap (Priority Queue)",
                "slug": "heap-priority-queue"
            },
            {
                "name": "Ordered Set",
                "slug": "ordered-set"
            }
        ],
        "companyNames": [
            "apple",
            "amazon"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/minimize-deviation-in-array/description"
    },
    "1918": {
        "difficulty": "HARD",
        "id": 1918,
        "questionFrontendId": "1793",
        "title": "Maximum Score of a Good Subarray",
        "titleSlug": "maximum-score-of-a-good-subarray",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Two Pointers",
                "slug": "two-pointers"
            },
            {
                "name": "Binary Search",
                "slug": "binary-search"
            },
            {
                "name": "Stack",
                "slug": "stack"
            },
            {
                "name": "Monotonic Stack",
                "slug": "monotonic-stack"
            }
        ],
        "companyNames": [
            "apple",
            "adobe",
            "google",
            "amazon"
        ],
        "frequencyCount": 4,
        "url": "https://leetcode.com/problems/maximum-score-of-a-good-subarray/description"
    },
    "2759": {
        "difficulty": "MEDIUM",
        "id": 2759,
        "questionFrontendId": "2625",
        "title": "Flatten Deeply Nested Array",
        "titleSlug": "flatten-deeply-nested-array",
        "topicTags": [],
        "companyNames": [
            "apple",
            "walmart_labs",
            "amazon"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/flatten-deeply-nested-array/description"
    },
    "3334": {
        "difficulty": "EASY",
        "id": 3334,
        "questionFrontendId": "3074",
        "title": "Apple Redistribution into Boxes",
        "titleSlug": "apple-redistribution-into-boxes",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ],
        "companyNames": [
            "apple"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/apple-redistribution-into-boxes/description"
    },
    "193": {
        "difficulty": "EASY",
        "id": 193,
        "questionFrontendId": "193",
        "title": "Valid Phone Numbers",
        "titleSlug": "valid-phone-numbers",
        "topicTags": [
            {
                "name": "Shell",
                "slug": "shell"
            }
        ],
        "companyNames": [
            "apple",
            "adobe",
            "google",
            "amazon"
        ],
        "frequencyCount": 4,
        "url": "https://leetcode.com/problems/valid-phone-numbers/description"
    },
    "504": {
        "difficulty": "EASY",
        "id": 504,
        "questionFrontendId": "504",
        "title": "Base 7",
        "titleSlug": "base-7",
        "topicTags": [
            {
                "name": "Math",
                "slug": "math"
            }
        ],
        "companyNames": [
            "apple",
            "google",
            "amazon"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/base-7/description"
    },
    "538": {
        "difficulty": "MEDIUM",
        "id": 538,
        "questionFrontendId": "538",
        "title": "Convert BST to Greater Tree",
        "titleSlug": "convert-bst-to-greater-tree",
        "topicTags": [
            {
                "name": "Tree",
                "slug": "tree"
            },
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Binary Search Tree",
                "slug": "binary-search-tree"
            },
            {
                "name": "Binary Tree",
                "slug": "binary-tree"
            }
        ],
        "companyNames": [
            "apple",
            "adobe",
            "amazon"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/convert-bst-to-greater-tree/description"
    },
    "637": {
        "difficulty": "EASY",
        "id": 637,
        "questionFrontendId": "637",
        "title": "Average of Levels in Binary Tree",
        "titleSlug": "average-of-levels-in-binary-tree",
        "topicTags": [
            {
                "name": "Tree",
                "slug": "tree"
            },
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Breadth-First Search",
                "slug": "breadth-first-search"
            },
            {
                "name": "Binary Tree",
                "slug": "binary-tree"
            }
        ],
        "companyNames": [
            "apple",
            "amazon"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/average-of-levels-in-binary-tree/description"
    },
    "1135": {
        "difficulty": "MEDIUM",
        "id": 1135,
        "questionFrontendId": "1045",
        "title": "Customers Who Bought All Products",
        "titleSlug": "customers-who-bought-all-products",
        "topicTags": [
            {
                "name": "Database",
                "slug": "database"
            }
        ],
        "companyNames": [
            "apple",
            "adobe",
            "google",
            "amazon"
        ],
        "frequencyCount": 4,
        "url": "https://leetcode.com/problems/customers-who-bought-all-products/description"
    },
    "1489": {
        "difficulty": "HARD",
        "id": 1489,
        "questionFrontendId": "1388",
        "title": "Pizza With 3n Slices",
        "titleSlug": "pizza-with-3n-slices",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            },
            {
                "name": "Heap (Priority Queue)",
                "slug": "heap-priority-queue"
            }
        ],
        "companyNames": [
            "apple",
            "google"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/pizza-with-3n-slices/description"
    },
    "1539": {
        "difficulty": "MEDIUM",
        "id": 1539,
        "questionFrontendId": "1424",
        "title": "Diagonal Traverse II",
        "titleSlug": "diagonal-traverse-ii",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            },
            {
                "name": "Heap (Priority Queue)",
                "slug": "heap-priority-queue"
            }
        ],
        "companyNames": [
            "apple",
            "adobe",
            "google",
            "amazon"
        ],
        "frequencyCount": 4,
        "url": "https://leetcode.com/problems/diagonal-traverse-ii/description"
    },
    "1666": {
        "difficulty": "EASY",
        "id": 1666,
        "questionFrontendId": "1544",
        "title": "Make The String Great",
        "titleSlug": "make-the-string-great",
        "topicTags": [
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Stack",
                "slug": "stack"
            }
        ],
        "companyNames": [
            "apple",
            "adobe",
            "accenture",
            "google",
            "amazon"
        ],
        "frequencyCount": 5,
        "url": "https://leetcode.com/problems/make-the-string-great/description"
    },
    "1746": {
        "difficulty": "EASY",
        "id": 1746,
        "questionFrontendId": "1624",
        "title": "Largest Substring Between Two Equal Characters",
        "titleSlug": "largest-substring-between-two-equal-characters",
        "topicTags": [
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "String",
                "slug": "string"
            }
        ],
        "companyNames": [
            "apple",
            "adobe",
            "google",
            "amazon"
        ],
        "frequencyCount": 4,
        "url": "https://leetcode.com/problems/largest-substring-between-two-equal-characters/description"
    },
    "1761": {
        "difficulty": "MEDIUM",
        "id": 1761,
        "questionFrontendId": "1641",
        "title": "Count Sorted Vowel Strings",
        "titleSlug": "count-sorted-vowel-strings",
        "topicTags": [
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Combinatorics",
                "slug": "combinatorics"
            }
        ],
        "companyNames": [
            "apple",
            "google"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/count-sorted-vowel-strings/description"
    },
    "1803": {
        "difficulty": "MEDIUM",
        "id": 1803,
        "questionFrontendId": "1701",
        "title": "Average Waiting Time",
        "titleSlug": "average-waiting-time",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Simulation",
                "slug": "simulation"
            }
        ],
        "companyNames": [
            "apple",
            "google",
            "amazon"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/average-waiting-time/description"
    },
    "1829": {
        "difficulty": "EASY",
        "id": 1829,
        "questionFrontendId": "1710",
        "title": "Maximum Units on a Truck",
        "titleSlug": "maximum-units-on-a-truck",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ],
        "companyNames": [
            "apple",
            "adobe",
            "google",
            "amazon"
        ],
        "frequencyCount": 4,
        "url": "https://leetcode.com/problems/maximum-units-on-a-truck/description"
    },
    "2101": {
        "difficulty": "HARD",
        "id": 2101,
        "questionFrontendId": "1970",
        "title": "Last Day Where You Can Still Cross",
        "titleSlug": "last-day-where-you-can-still-cross",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Binary Search",
                "slug": "binary-search"
            },
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Breadth-First Search",
                "slug": "breadth-first-search"
            },
            {
                "name": "Union Find",
                "slug": "union-find"
            },
            {
                "name": "Matrix",
                "slug": "matrix"
            }
        ],
        "companyNames": [
            "apple",
            "google",
            "amazon"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/last-day-where-you-can-still-cross/description"
    },
    "2152": {
        "difficulty": "HARD",
        "id": 2152,
        "questionFrontendId": "2004",
        "title": "The Number of Seniors and Juniors to Join the Company",
        "titleSlug": "the-number-of-seniors-and-juniors-to-join-the-company",
        "topicTags": [
            {
                "name": "Database",
                "slug": "database"
            }
        ],
        "companyNames": [
            "apple"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/the-number-of-seniors-and-juniors-to-join-the-company/description"
    },
    "2265": {
        "difficulty": "MEDIUM",
        "id": 2265,
        "questionFrontendId": "2161",
        "title": "Partition Array According to Given Pivot",
        "titleSlug": "partition-array-according-to-given-pivot",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Two Pointers",
                "slug": "two-pointers"
            },
            {
                "name": "Simulation",
                "slug": "simulation"
            }
        ],
        "companyNames": [
            "apple",
            "adobe",
            "google",
            "amazon"
        ],
        "frequencyCount": 4,
        "url": "https://leetcode.com/problems/partition-array-according-to-given-pivot/description"
    },
    "2270": {
        "difficulty": "MEDIUM",
        "id": 2270,
        "questionFrontendId": "2150",
        "title": "Find All Lonely Numbers in the Array",
        "titleSlug": "find-all-lonely-numbers-in-the-array",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Counting",
                "slug": "counting"
            }
        ],
        "companyNames": [
            "apple",
            "google",
            "amazon"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/find-all-lonely-numbers-in-the-array/description"
    },
    "2427": {
        "difficulty": "EASY",
        "id": 2427,
        "questionFrontendId": "2351",
        "title": "First Letter to Appear Twice",
        "titleSlug": "first-letter-to-appear-twice",
        "topicTags": [
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Bit Manipulation",
                "slug": "bit-manipulation"
            },
            {
                "name": "Counting",
                "slug": "counting"
            }
        ],
        "companyNames": [
            "apple",
            "adobe",
            "google",
            "amazon"
        ],
        "frequencyCount": 4,
        "url": "https://leetcode.com/problems/first-letter-to-appear-twice/description"
    },
    "2526": {
        "difficulty": "HARD",
        "id": 2526,
        "questionFrontendId": "2407",
        "title": "Longest Increasing Subsequence II",
        "titleSlug": "longest-increasing-subsequence-ii",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Divide and Conquer",
                "slug": "divide-and-conquer"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Binary Indexed Tree",
                "slug": "binary-indexed-tree"
            },
            {
                "name": "Segment Tree",
                "slug": "segment-tree"
            },
            {
                "name": "Queue",
                "slug": "queue"
            },
            {
                "name": "Monotonic Queue",
                "slug": "monotonic-queue"
            }
        ],
        "companyNames": [
            "apple",
            "google"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/longest-increasing-subsequence-ii/description"
    },
    "3017": {
        "difficulty": "HARD",
        "id": 3017,
        "questionFrontendId": "2827",
        "title": "Number of Beautiful Integers in the Range",
        "titleSlug": "number-of-beautiful-integers-in-the-range",
        "topicTags": [
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            }
        ],
        "companyNames": [
            "apple",
            "amazon"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/number-of-beautiful-integers-in-the-range/description"
    },
    "3312": {
        "difficulty": "EASY",
        "id": 3312,
        "questionFrontendId": "3019",
        "title": "Number of Changing Keys",
        "titleSlug": "number-of-changing-keys",
        "topicTags": [
            {
                "name": "String",
                "slug": "string"
            }
        ],
        "companyNames": [
            "apple"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/number-of-changing-keys/description"
    },
    "87": {
        "difficulty": "HARD",
        "id": 87,
        "questionFrontendId": "87",
        "title": "Scramble String",
        "titleSlug": "scramble-string",
        "topicTags": [
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            }
        ],
        "companyNames": [
            "apple",
            "adobe",
            "google",
            "amazon"
        ],
        "frequencyCount": 4,
        "url": "https://leetcode.com/problems/scramble-string/description"
    },
    "306": {
        "difficulty": "MEDIUM",
        "id": 306,
        "questionFrontendId": "306",
        "title": "Additive Number",
        "titleSlug": "additive-number",
        "topicTags": [
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Backtracking",
                "slug": "backtracking"
            }
        ],
        "companyNames": [
            "apple",
            "google"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/additive-number/description"
    },
    "313": {
        "difficulty": "MEDIUM",
        "id": 313,
        "questionFrontendId": "313",
        "title": "Super Ugly Number",
        "titleSlug": "super-ugly-number",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            }
        ],
        "companyNames": [
            "apple",
            "google",
            "amazon"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/super-ugly-number/description"
    },
    "352": {
        "difficulty": "HARD",
        "id": 352,
        "questionFrontendId": "352",
        "title": "Data Stream as Disjoint Intervals",
        "titleSlug": "data-stream-as-disjoint-intervals",
        "topicTags": [
            {
                "name": "Binary Search",
                "slug": "binary-search"
            },
            {
                "name": "Design",
                "slug": "design"
            },
            {
                "name": "Ordered Set",
                "slug": "ordered-set"
            }
        ],
        "companyNames": [
            "apple",
            "google"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/data-stream-as-disjoint-intervals/description"
    },
    "372": {
        "difficulty": "MEDIUM",
        "id": 372,
        "questionFrontendId": "372",
        "title": "Super Pow",
        "titleSlug": "super-pow",
        "topicTags": [
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Divide and Conquer",
                "slug": "divide-and-conquer"
            }
        ],
        "companyNames": [
            "apple",
            "amazon"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/super-pow/description"
    },
    "388": {
        "difficulty": "MEDIUM",
        "id": 388,
        "questionFrontendId": "388",
        "title": "Longest Absolute File Path",
        "titleSlug": "longest-absolute-file-path",
        "topicTags": [
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Stack",
                "slug": "stack"
            },
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            }
        ],
        "companyNames": [
            "apple",
            "google",
            "amazon"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/longest-absolute-file-path/description"
    },
    "422": {
        "difficulty": "EASY",
        "id": 422,
        "questionFrontendId": "422",
        "title": "Valid Word Square",
        "titleSlug": "valid-word-square",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Matrix",
                "slug": "matrix"
            }
        ],
        "companyNames": [
            "apple",
            "google"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/valid-word-square/description"
    },
    "492": {
        "difficulty": "EASY",
        "id": 492,
        "questionFrontendId": "492",
        "title": "Construct the Rectangle",
        "titleSlug": "construct-the-rectangle",
        "topicTags": [
            {
                "name": "Math",
                "slug": "math"
            }
        ],
        "companyNames": [
            "apple"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/construct-the-rectangle/description"
    },
    "526": {
        "difficulty": "MEDIUM",
        "id": 526,
        "questionFrontendId": "526",
        "title": "Beautiful Arrangement",
        "titleSlug": "beautiful-arrangement",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Backtracking",
                "slug": "backtracking"
            },
            {
                "name": "Bit Manipulation",
                "slug": "bit-manipulation"
            },
            {
                "name": "Bitmask",
                "slug": "bitmask"
            }
        ],
        "companyNames": [
            "apple",
            "nvidia",
            "cisco",
            "google",
            "amazon"
        ],
        "frequencyCount": 5,
        "url": "https://leetcode.com/problems/beautiful-arrangement/description"
    },
    "571": {
        "difficulty": "HARD",
        "id": 571,
        "questionFrontendId": "571",
        "title": "Find Median Given Frequency of Numbers",
        "titleSlug": "find-median-given-frequency-of-numbers",
        "topicTags": [
            {
                "name": "Database",
                "slug": "database"
            }
        ],
        "companyNames": [
            "apple"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/find-median-given-frequency-of-numbers/description"
    },
    "594": {
        "difficulty": "EASY",
        "id": 594,
        "questionFrontendId": "594",
        "title": "Longest Harmonious Subsequence",
        "titleSlug": "longest-harmonious-subsequence",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Sliding Window",
                "slug": "sliding-window"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            },
            {
                "name": "Counting",
                "slug": "counting"
            }
        ],
        "companyNames": [
            "apple",
            "amazon"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/longest-harmonious-subsequence/description"
    },
    "606": {
        "difficulty": "MEDIUM",
        "id": 606,
        "questionFrontendId": "606",
        "title": "Construct String from Binary Tree",
        "titleSlug": "construct-string-from-binary-tree",
        "topicTags": [
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Tree",
                "slug": "tree"
            },
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Binary Tree",
                "slug": "binary-tree"
            }
        ],
        "companyNames": [
            "apple",
            "adobe",
            "amazon"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/construct-string-from-binary-tree/description"
    },
    "619": {
        "difficulty": "EASY",
        "id": 619,
        "questionFrontendId": "619",
        "title": "Biggest Single Number",
        "titleSlug": "biggest-single-number",
        "topicTags": [
            {
                "name": "Database",
                "slug": "database"
            }
        ],
        "companyNames": [
            "apple"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/biggest-single-number/description"
    },
    "627": {
        "difficulty": "EASY",
        "id": 627,
        "questionFrontendId": "627",
        "title": "Swap Salary",
        "titleSlug": "swap-salary",
        "topicTags": [
            {
                "name": "Database",
                "slug": "database"
            }
        ],
        "companyNames": [
            "apple",
            "google",
            "amazon"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/swap-salary/description"
    },
    "632": {
        "difficulty": "HARD",
        "id": 632,
        "questionFrontendId": "632",
        "title": "Smallest Range Covering Elements from K Lists",
        "titleSlug": "smallest-range-covering-elements-from-k-lists",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            },
            {
                "name": "Sliding Window",
                "slug": "sliding-window"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            },
            {
                "name": "Heap (Priority Queue)",
                "slug": "heap-priority-queue"
            }
        ],
        "companyNames": [
            "apple",
            "adobe",
            "amazon"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/smallest-range-covering-elements-from-k-lists/description"
    },
    "674": {
        "difficulty": "EASY",
        "id": 674,
        "questionFrontendId": "674",
        "title": "Longest Continuous Increasing Subsequence",
        "titleSlug": "longest-continuous-increasing-subsequence",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            }
        ],
        "companyNames": [
            "apple",
            "google"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/longest-continuous-increasing-subsequence/description"
    },
    "728": {
        "difficulty": "EASY",
        "id": 728,
        "questionFrontendId": "728",
        "title": "Self Dividing Numbers",
        "titleSlug": "self-dividing-numbers",
        "topicTags": [
            {
                "name": "Math",
                "slug": "math"
            }
        ],
        "companyNames": [
            "apple"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/self-dividing-numbers/description"
    },
    "742": {
        "difficulty": "EASY",
        "id": 742,
        "questionFrontendId": "709",
        "title": "To Lower Case",
        "titleSlug": "to-lower-case",
        "topicTags": [
            {
                "name": "String",
                "slug": "string"
            }
        ],
        "companyNames": [
            "apple",
            "google"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/to-lower-case/description"
    },
    "777": {
        "difficulty": "EASY",
        "id": 777,
        "questionFrontendId": "766",
        "title": "Toeplitz Matrix",
        "titleSlug": "toeplitz-matrix",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Matrix",
                "slug": "matrix"
            }
        ],
        "companyNames": [
            "apple",
            "tcs",
            "google"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/toeplitz-matrix/description"
    },
    "879": {
        "difficulty": "MEDIUM",
        "id": 879,
        "questionFrontendId": "849",
        "title": "Maximize Distance to Closest Person",
        "titleSlug": "maximize-distance-to-closest-person",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            }
        ],
        "companyNames": [
            "apple",
            "google",
            "amazon"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/maximize-distance-to-closest-person/description"
    },
    "910": {
        "difficulty": "HARD",
        "id": 910,
        "questionFrontendId": "878",
        "title": "Nth Magical Number",
        "titleSlug": "nth-magical-number",
        "topicTags": [
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Binary Search",
                "slug": "binary-search"
            }
        ],
        "companyNames": [
            "apple",
            "google",
            "amazon"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/nth-magical-number/description"
    },
    "959": {
        "difficulty": "MEDIUM",
        "id": 959,
        "questionFrontendId": "923",
        "title": "3Sum With Multiplicity",
        "titleSlug": "3sum-with-multiplicity",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Two Pointers",
                "slug": "two-pointers"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            },
            {
                "name": "Counting",
                "slug": "counting"
            }
        ],
        "companyNames": [
            "apple",
            "amazon"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/3sum-with-multiplicity/description"
    },
    "980": {
        "difficulty": "HARD",
        "id": 980,
        "questionFrontendId": "943",
        "title": "Find the Shortest Superstring",
        "titleSlug": "find-the-shortest-superstring",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Bit Manipulation",
                "slug": "bit-manipulation"
            },
            {
                "name": "Bitmask",
                "slug": "bitmask"
            }
        ],
        "companyNames": [
            "apple",
            "google"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/find-the-shortest-superstring/description"
    },
    "1024": {
        "difficulty": "HARD",
        "id": 1024,
        "questionFrontendId": "982",
        "title": "Triples with Bitwise AND Equal To Zero",
        "titleSlug": "triples-with-bitwise-and-equal-to-zero",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Bit Manipulation",
                "slug": "bit-manipulation"
            }
        ],
        "companyNames": [
            "apple"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/triples-with-bitwise-and-equal-to-zero/description"
    },
    "1080": {
        "difficulty": "MEDIUM",
        "id": 1080,
        "questionFrontendId": "1023",
        "title": "Camelcase Matching",
        "titleSlug": "camelcase-matching",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Two Pointers",
                "slug": "two-pointers"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Trie",
                "slug": "trie"
            },
            {
                "name": "String Matching",
                "slug": "string-matching"
            }
        ],
        "companyNames": [
            "apple",
            "google"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/camelcase-matching/description"
    },
    "1106": {
        "difficulty": "HARD",
        "id": 1106,
        "questionFrontendId": "1036",
        "title": "Escape a Large Maze",
        "titleSlug": "escape-a-large-maze",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Breadth-First Search",
                "slug": "breadth-first-search"
            }
        ],
        "companyNames": [
            "apple",
            "google"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/escape-a-large-maze/description"
    },
    "1140": {
        "difficulty": "MEDIUM",
        "id": 1140,
        "questionFrontendId": "1054",
        "title": "Distant Barcodes",
        "titleSlug": "distant-barcodes",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            },
            {
                "name": "Heap (Priority Queue)",
                "slug": "heap-priority-queue"
            },
            {
                "name": "Counting",
                "slug": "counting"
            }
        ],
        "companyNames": [
            "apple",
            "adobe",
            "amazon"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/distant-barcodes/description"
    },
    "1165": {
        "difficulty": "MEDIUM",
        "id": 1165,
        "questionFrontendId": "1229",
        "title": "Meeting Scheduler",
        "titleSlug": "meeting-scheduler",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Two Pointers",
                "slug": "two-pointers"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ],
        "companyNames": [
            "apple",
            "amazon"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/meeting-scheduler/description"
    },
    "1177": {
        "difficulty": "MEDIUM",
        "id": 1177,
        "questionFrontendId": "1245",
        "title": "Tree Diameter",
        "titleSlug": "tree-diameter",
        "topicTags": [
            {
                "name": "Tree",
                "slug": "tree"
            },
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Breadth-First Search",
                "slug": "breadth-first-search"
            },
            {
                "name": "Graph",
                "slug": "graph"
            },
            {
                "name": "Topological Sort",
                "slug": "topological-sort"
            }
        ],
        "companyNames": [
            "apple",
            "google"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/tree-diameter/description"
    },
    "1191": {
        "difficulty": "MEDIUM",
        "id": 1191,
        "questionFrontendId": "1258",
        "title": "Synonymous Sentences",
        "titleSlug": "synonymous-sentences",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Backtracking",
                "slug": "backtracking"
            },
            {
                "name": "Union Find",
                "slug": "union-find"
            }
        ],
        "companyNames": [
            "apple"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/synonymous-sentences/description"
    },
    "1219": {
        "difficulty": "MEDIUM",
        "id": 1219,
        "questionFrontendId": "1124",
        "title": "Longest Well-Performing Interval",
        "titleSlug": "longest-well-performing-interval",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Stack",
                "slug": "stack"
            },
            {
                "name": "Monotonic Stack",
                "slug": "monotonic-stack"
            },
            {
                "name": "Prefix Sum",
                "slug": "prefix-sum"
            }
        ],
        "companyNames": [
            "apple"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/longest-well-performing-interval/description"
    },
    "1227": {
        "difficulty": "EASY",
        "id": 1227,
        "questionFrontendId": "1128",
        "title": "Number of Equivalent Domino Pairs",
        "titleSlug": "number-of-equivalent-domino-pairs",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Counting",
                "slug": "counting"
            }
        ],
        "companyNames": [
            "apple",
            "amazon"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/number-of-equivalent-domino-pairs/description"
    },
    "1279": {
        "difficulty": "EASY",
        "id": 1279,
        "questionFrontendId": "1175",
        "title": "Prime Arrangements",
        "titleSlug": "prime-arrangements",
        "topicTags": [
            {
                "name": "Math",
                "slug": "math"
            }
        ],
        "companyNames": [
            "apple",
            "amazon"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/prime-arrangements/description"
    },
    "1324": {
        "difficulty": "MEDIUM",
        "id": 1324,
        "questionFrontendId": "1706",
        "title": "Where Will the Ball Fall",
        "titleSlug": "where-will-the-ball-fall",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Matrix",
                "slug": "matrix"
            },
            {
                "name": "Simulation",
                "slug": "simulation"
            }
        ],
        "companyNames": [
            "apple",
            "adobe",
            "google",
            "amazon"
        ],
        "frequencyCount": 4,
        "url": "https://leetcode.com/problems/where-will-the-ball-fall/description"
    },
    "1329": {
        "difficulty": "EASY",
        "id": 1329,
        "questionFrontendId": "1217",
        "title": "Minimum Cost to Move Chips to The Same Position",
        "titleSlug": "minimum-cost-to-move-chips-to-the-same-position",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            }
        ],
        "companyNames": [
            "apple",
            "adobe",
            "amazon"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/minimum-cost-to-move-chips-to-the-same-position/description"
    },
    "1340": {
        "difficulty": "MEDIUM",
        "id": 1340,
        "questionFrontendId": "1226",
        "title": "The Dining Philosophers",
        "titleSlug": "the-dining-philosophers",
        "topicTags": [
            {
                "name": "Concurrency",
                "slug": "concurrency"
            }
        ],
        "companyNames": [
            "apple",
            "amazon"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/the-dining-philosophers/description"
    },
    "1434": {
        "difficulty": "EASY",
        "id": 1434,
        "questionFrontendId": "1309",
        "title": "Decrypt String from Alphabet to Integer Mapping",
        "titleSlug": "decrypt-string-from-alphabet-to-integer-mapping",
        "topicTags": [
            {
                "name": "String",
                "slug": "string"
            }
        ],
        "companyNames": [
            "apple",
            "google"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/decrypt-string-from-alphabet-to-integer-mapping/description"
    },
    "1461": {
        "difficulty": "HARD",
        "id": 1461,
        "questionFrontendId": "1359",
        "title": "Count All Valid Pickup and Delivery Options",
        "titleSlug": "count-all-valid-pickup-and-delivery-options",
        "topicTags": [
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Combinatorics",
                "slug": "combinatorics"
            }
        ],
        "companyNames": [
            "apple",
            "adobe",
            "doordash",
            "google",
            "amazon"
        ],
        "frequencyCount": 5,
        "url": "https://leetcode.com/problems/count-all-valid-pickup-and-delivery-options/description"
    },
    "1522": {
        "difficulty": "HARD",
        "id": 1522,
        "questionFrontendId": "1406",
        "title": "Stone Game III",
        "titleSlug": "stone-game-iii",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Game Theory",
                "slug": "game-theory"
            }
        ],
        "companyNames": [
            "apple",
            "adobe",
            "google",
            "amazon"
        ],
        "frequencyCount": 4,
        "url": "https://leetcode.com/problems/stone-game-iii/description"
    },
    "1523": {
        "difficulty": "MEDIUM",
        "id": 1523,
        "questionFrontendId": "1393",
        "title": "Capital Gain/Loss",
        "titleSlug": "capital-gainloss",
        "topicTags": [
            {
                "name": "Database",
                "slug": "database"
            }
        ],
        "companyNames": [
            "apple",
            "amazon"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/capital-gainloss/description"
    },
    "1683": {
        "difficulty": "MEDIUM",
        "id": 1683,
        "questionFrontendId": "1561",
        "title": "Maximum Number of Coins You Can Get",
        "titleSlug": "maximum-number-of-coins-you-can-get",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            },
            {
                "name": "Game Theory",
                "slug": "game-theory"
            }
        ],
        "companyNames": [
            "apple",
            "google",
            "amazon"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/maximum-number-of-coins-you-can-get/description"
    },
    "1815": {
        "difficulty": "HARD",
        "id": 1815,
        "questionFrontendId": "1697",
        "title": "Checking Existence of Edge Length Limited Paths",
        "titleSlug": "checking-existence-of-edge-length-limited-paths",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Two Pointers",
                "slug": "two-pointers"
            },
            {
                "name": "Union Find",
                "slug": "union-find"
            },
            {
                "name": "Graph",
                "slug": "graph"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ],
        "companyNames": [
            "apple",
            "google"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/checking-existence-of-edge-length-limited-paths/description"
    },
    "1848": {
        "difficulty": "EASY",
        "id": 1848,
        "questionFrontendId": "1748",
        "title": "Sum of Unique Elements",
        "titleSlug": "sum-of-unique-elements",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Counting",
                "slug": "counting"
            }
        ],
        "companyNames": [
            "apple",
            "adobe",
            "tcs"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/sum-of-unique-elements/description"
    },
    "1884": {
        "difficulty": "EASY",
        "id": 1884,
        "questionFrontendId": "1758",
        "title": "Minimum Changes To Make Alternating Binary String",
        "titleSlug": "minimum-changes-to-make-alternating-binary-string",
        "topicTags": [
            {
                "name": "String",
                "slug": "string"
            }
        ],
        "companyNames": [
            "apple",
            "adobe",
            "amazon"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/minimum-changes-to-make-alternating-binary-string/description"
    },
    "1896": {
        "difficulty": "HARD",
        "id": 1896,
        "questionFrontendId": "1770",
        "title": "Maximum Score from Performing Multiplication Operations",
        "titleSlug": "maximum-score-from-performing-multiplication-operations",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            }
        ],
        "companyNames": [
            "apple",
            "adobe",
            "google"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/maximum-score-from-performing-multiplication-operations/description"
    },
    "1948": {
        "difficulty": "EASY",
        "id": 1948,
        "questionFrontendId": "1795",
        "title": "Rearrange Products Table",
        "titleSlug": "rearrange-products-table",
        "topicTags": [
            {
                "name": "Database",
                "slug": "database"
            }
        ],
        "companyNames": [
            "apple",
            "google",
            "amazon"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/rearrange-products-table/description"
    },
    "1952": {
        "difficulty": "MEDIUM",
        "id": 1952,
        "questionFrontendId": "1824",
        "title": "Minimum Sideway Jumps",
        "titleSlug": "minimum-sideway-jumps",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            }
        ],
        "companyNames": [
            "apple",
            "google",
            "amazon"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/minimum-sideway-jumps/description"
    },
    "1956": {
        "difficulty": "MEDIUM",
        "id": 1956,
        "questionFrontendId": "1846",
        "title": "Maximum Element After Decreasing and Rearranging",
        "titleSlug": "maximum-element-after-decreasing-and-rearranging",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ],
        "companyNames": [
            "apple",
            "amazon"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/maximum-element-after-decreasing-and-rearranging/description"
    },
    "2095": {
        "difficulty": "MEDIUM",
        "id": 2095,
        "questionFrontendId": "1963",
        "title": "Minimum Number of Swaps to Make the String Balanced",
        "titleSlug": "minimum-number-of-swaps-to-make-the-string-balanced",
        "topicTags": [
            {
                "name": "Two Pointers",
                "slug": "two-pointers"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Stack",
                "slug": "stack"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            }
        ],
        "companyNames": [
            "apple",
            "amazon"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/minimum-number-of-swaps-to-make-the-string-balanced/description"
    },
    "2130": {
        "difficulty": "MEDIUM",
        "id": 2130,
        "questionFrontendId": "2002",
        "title": "Maximum Product of the Length of Two Palindromic Subsequences",
        "titleSlug": "maximum-product-of-the-length-of-two-palindromic-subsequences",
        "topicTags": [
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Backtracking",
                "slug": "backtracking"
            },
            {
                "name": "Bit Manipulation",
                "slug": "bit-manipulation"
            },
            {
                "name": "Bitmask",
                "slug": "bitmask"
            }
        ],
        "companyNames": [
            "apple"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/maximum-product-of-the-length-of-two-palindromic-subsequences/description"
    },
    "2226": {
        "difficulty": "EASY",
        "id": 2226,
        "questionFrontendId": "2103",
        "title": "Rings and Rods",
        "titleSlug": "rings-and-rods",
        "topicTags": [
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "String",
                "slug": "string"
            }
        ],
        "companyNames": [
            "apple",
            "google"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/rings-and-rods/description"
    },
    "2237": {
        "difficulty": "MEDIUM",
        "id": 2237,
        "questionFrontendId": "2131",
        "title": "Longest Palindrome by Concatenating Two Letter Words",
        "titleSlug": "longest-palindrome-by-concatenating-two-letter-words",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            },
            {
                "name": "Counting",
                "slug": "counting"
            }
        ],
        "companyNames": [
            "apple",
            "google",
            "amazon"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/longest-palindrome-by-concatenating-two-letter-words/description"
    },
    "2251": {
        "difficulty": "HARD",
        "id": 2251,
        "questionFrontendId": "2147",
        "title": "Number of Ways to Divide a Long Corridor",
        "titleSlug": "number-of-ways-to-divide-a-long-corridor",
        "topicTags": [
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            }
        ],
        "companyNames": [
            "apple"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/number-of-ways-to-divide-a-long-corridor/description"
    },
    "2284": {
        "difficulty": "MEDIUM",
        "id": 2284,
        "questionFrontendId": "2165",
        "title": "Smallest Value of the Rearranged Number",
        "titleSlug": "smallest-value-of-the-rearranged-number",
        "topicTags": [
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ],
        "companyNames": [
            "apple",
            "adobe",
            "amazon"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/smallest-value-of-the-rearranged-number/description"
    },
    "2368": {
        "difficulty": "HARD",
        "id": 2368,
        "questionFrontendId": "2281",
        "title": "Sum of Total Strength of Wizards",
        "titleSlug": "sum-of-total-strength-of-wizards",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Stack",
                "slug": "stack"
            },
            {
                "name": "Monotonic Stack",
                "slug": "monotonic-stack"
            },
            {
                "name": "Prefix Sum",
                "slug": "prefix-sum"
            }
        ],
        "companyNames": [
            "apple",
            "adobe",
            "amazon"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/sum-of-total-strength-of-wizards/description"
    },
    "2449": {
        "difficulty": "HARD",
        "id": 2449,
        "questionFrontendId": "2398",
        "title": "Maximum Number of Robots Within Budget",
        "titleSlug": "maximum-number-of-robots-within-budget",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Binary Search",
                "slug": "binary-search"
            },
            {
                "name": "Queue",
                "slug": "queue"
            },
            {
                "name": "Sliding Window",
                "slug": "sliding-window"
            },
            {
                "name": "Heap (Priority Queue)",
                "slug": "heap-priority-queue"
            },
            {
                "name": "Prefix Sum",
                "slug": "prefix-sum"
            }
        ],
        "companyNames": [
            "apple",
            "amazon"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/maximum-number-of-robots-within-budget/description"
    },
    "2472": {
        "difficulty": "HARD",
        "id": 2472,
        "questionFrontendId": "2392",
        "title": "Build a Matrix With Conditions",
        "titleSlug": "build-a-matrix-with-conditions",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Graph",
                "slug": "graph"
            },
            {
                "name": "Topological Sort",
                "slug": "topological-sort"
            },
            {
                "name": "Matrix",
                "slug": "matrix"
            }
        ],
        "companyNames": [
            "apple",
            "google"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/build-a-matrix-with-conditions/description"
    },
    "2519": {
        "difficulty": "MEDIUM",
        "id": 2519,
        "questionFrontendId": "2433",
        "title": "Find The Original Array of Prefix Xor",
        "titleSlug": "find-the-original-array-of-prefix-xor",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Bit Manipulation",
                "slug": "bit-manipulation"
            }
        ],
        "companyNames": [
            "apple",
            "nvidia",
            "amazon"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/find-the-original-array-of-prefix-xor/description"
    },
    "2606": {
        "difficulty": "MEDIUM",
        "id": 2606,
        "questionFrontendId": "2482",
        "title": "Difference Between Ones and Zeros in Row and Column",
        "titleSlug": "difference-between-ones-and-zeros-in-row-and-column",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Matrix",
                "slug": "matrix"
            },
            {
                "name": "Simulation",
                "slug": "simulation"
            }
        ],
        "companyNames": [
            "apple",
            "adobe",
            "amazon"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/difference-between-ones-and-zeros-in-row-and-column/description"
    },
    "2701": {
        "difficulty": "HARD",
        "id": 2701,
        "questionFrontendId": "2565",
        "title": "Subsequence With the Minimum Score",
        "titleSlug": "subsequence-with-the-minimum-score",
        "topicTags": [
            {
                "name": "Two Pointers",
                "slug": "two-pointers"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Binary Search",
                "slug": "binary-search"
            }
        ],
        "companyNames": [
            "apple",
            "doordash"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/subsequence-with-the-minimum-score/description"
    },
    "2728": {
        "difficulty": "MEDIUM",
        "id": 2728,
        "questionFrontendId": "2679",
        "title": "Sum in a Matrix",
        "titleSlug": "sum-in-a-matrix",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            },
            {
                "name": "Heap (Priority Queue)",
                "slug": "heap-priority-queue"
            },
            {
                "name": "Matrix",
                "slug": "matrix"
            },
            {
                "name": "Simulation",
                "slug": "simulation"
            }
        ],
        "companyNames": [
            "apple"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/sum-in-a-matrix/description"
    },
    "2746": {
        "difficulty": "EASY",
        "id": 2746,
        "questionFrontendId": "2634",
        "title": "Filter Elements from Array",
        "titleSlug": "filter-elements-from-array",
        "topicTags": [],
        "companyNames": [
            "apple",
            "adobe",
            "amazon"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/filter-elements-from-array/description"
    },
    "2761": {
        "difficulty": "EASY",
        "id": 2761,
        "questionFrontendId": "2626",
        "title": "Array Reduce Transformation",
        "titleSlug": "array-reduce-transformation",
        "topicTags": [],
        "companyNames": [
            "apple",
            "adobe",
            "google",
            "amazon"
        ],
        "frequencyCount": 4,
        "url": "https://leetcode.com/problems/array-reduce-transformation/description"
    },
    "2796": {
        "difficulty": "EASY",
        "id": 2796,
        "questionFrontendId": "2666",
        "title": "Allow One Function Call",
        "titleSlug": "allow-one-function-call",
        "topicTags": [],
        "companyNames": [
            "apple",
            "google",
            "amazon"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/allow-one-function-call/description"
    },
    "2857": {
        "difficulty": "EASY",
        "id": 2857,
        "questionFrontendId": "2739",
        "title": "Total Distance Traveled",
        "titleSlug": "total-distance-traveled",
        "topicTags": [
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Simulation",
                "slug": "simulation"
            }
        ],
        "companyNames": [
            "apple"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/total-distance-traveled/description"
    },
    "2858": {
        "difficulty": "MEDIUM",
        "id": 2858,
        "questionFrontendId": "2722",
        "title": "Join Two Arrays by ID",
        "titleSlug": "join-two-arrays-by-id",
        "topicTags": [],
        "companyNames": [
            "apple",
            "google"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/join-two-arrays-by-id/description"
    },
    "2867": {
        "difficulty": "MEDIUM",
        "id": 2867,
        "questionFrontendId": "2750",
        "title": "Ways to Split Array Into Good Subarrays",
        "titleSlug": "ways-to-split-array-into-good-subarrays",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            }
        ],
        "companyNames": [
            "apple",
            "google"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/ways-to-split-array-into-good-subarrays/description"
    },
    "2920": {
        "difficulty": "MEDIUM",
        "id": 2920,
        "questionFrontendId": "2808",
        "title": "Minimum Seconds to Equalize a Circular Array",
        "titleSlug": "minimum-seconds-to-equalize-a-circular-array",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            }
        ],
        "companyNames": [
            "apple",
            "amazon"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/minimum-seconds-to-equalize-a-circular-array/description"
    },
    "2998": {
        "difficulty": "EASY",
        "id": 2998,
        "questionFrontendId": "2843",
        "title": "  Count Symmetric Integers",
        "titleSlug": "count-symmetric-integers",
        "topicTags": [
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Enumeration",
                "slug": "enumeration"
            }
        ],
        "companyNames": [
            "apple",
            "google",
            "amazon"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/count-symmetric-integers/description"
    },
    "3328": {
        "difficulty": "MEDIUM",
        "id": 3328,
        "questionFrontendId": "3091",
        "title": "Apply Operations to Make Sum of Array Greater Than or Equal to k",
        "titleSlug": "apply-operations-to-make-sum-of-array-greater-than-or-equal-to-k",
        "topicTags": [
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            },
            {
                "name": "Enumeration",
                "slug": "enumeration"
            }
        ],
        "companyNames": [
            "apple"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/apply-operations-to-make-sum-of-array-greater-than-or-equal-to-k/description"
    },
    "2165": {
        "difficulty": "MEDIUM",
        "id": 2165,
        "questionFrontendId": "2055",
        "title": "Plates Between Candles",
        "titleSlug": "plates-between-candles",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Binary Search",
                "slug": "binary-search"
            },
            {
                "name": "Prefix Sum",
                "slug": "prefix-sum"
            }
        ],
        "companyNames": [
            "adobe",
            "amazon"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/plates-between-candles/description"
    },
    "809": {
        "difficulty": "HARD",
        "id": 809,
        "questionFrontendId": "793",
        "title": "Preimage Size of Factorial Zeroes Function",
        "titleSlug": "preimage-size-of-factorial-zeroes-function",
        "topicTags": [
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Binary Search",
                "slug": "binary-search"
            }
        ],
        "companyNames": [
            "adobe"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/preimage-size-of-factorial-zeroes-function/description"
    },
    "1313": {
        "difficulty": "HARD",
        "id": 1313,
        "questionFrontendId": "1916",
        "title": "Count Ways to Build Rooms in an Ant Colony",
        "titleSlug": "count-ways-to-build-rooms-in-an-ant-colony",
        "topicTags": [
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Tree",
                "slug": "tree"
            },
            {
                "name": "Graph",
                "slug": "graph"
            },
            {
                "name": "Topological Sort",
                "slug": "topological-sort"
            },
            {
                "name": "Combinatorics",
                "slug": "combinatorics"
            }
        ],
        "companyNames": [
            "adobe"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/count-ways-to-build-rooms-in-an-ant-colony/description"
    },
    "2282": {
        "difficulty": "HARD",
        "id": 2282,
        "questionFrontendId": "2143",
        "title": "Choose Numbers From Two Arrays in Range",
        "titleSlug": "choose-numbers-from-two-arrays-in-range",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            }
        ],
        "companyNames": [
            "adobe"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/choose-numbers-from-two-arrays-in-range/description"
    },
    "2509": {
        "difficulty": "MEDIUM",
        "id": 2509,
        "questionFrontendId": "2429",
        "title": "Minimize XOR",
        "titleSlug": "minimize-xor",
        "topicTags": [
            {
                "name": "Greedy",
                "slug": "greedy"
            },
            {
                "name": "Bit Manipulation",
                "slug": "bit-manipulation"
            }
        ],
        "companyNames": [
            "adobe"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/minimize-xor/description"
    },
    "3177": {
        "difficulty": "MEDIUM",
        "id": 3177,
        "questionFrontendId": "2892",
        "title": "Minimizing Array After Replacing Pairs With Their Product",
        "titleSlug": "minimizing-array-after-replacing-pairs-with-their-product",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            }
        ],
        "companyNames": [
            "adobe"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/minimizing-array-after-replacing-pairs-with-their-product/description"
    },
    "3472": {
        "difficulty": "EASY",
        "id": 3472,
        "questionFrontendId": "3173",
        "title": "Bitwise OR of Adjacent Elements",
        "titleSlug": "bitwise-or-of-adjacent-elements",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Bit Manipulation",
                "slug": "bit-manipulation"
            }
        ],
        "companyNames": [
            "adobe"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/bitwise-or-of-adjacent-elements/description"
    },
    "1637": {
        "difficulty": "HARD",
        "id": 1637,
        "questionFrontendId": "1531",
        "title": "String Compression II",
        "titleSlug": "string-compression-ii",
        "topicTags": [
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            }
        ],
        "companyNames": [
            "adobe",
            "amazon"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/string-compression-ii/description"
    },
    "2263": {
        "difficulty": "HARD",
        "id": 2263,
        "questionFrontendId": "2141",
        "title": "Maximum Running Time of N Computers",
        "titleSlug": "maximum-running-time-of-n-computers",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Binary Search",
                "slug": "binary-search"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ],
        "companyNames": [
            "adobe",
            "google",
            "amazon"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/maximum-running-time-of-n-computers/description"
    },
    "867": {
        "difficulty": "MEDIUM",
        "id": 867,
        "questionFrontendId": "837",
        "title": "New 21 Game",
        "titleSlug": "new-21-game",
        "topicTags": [
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Sliding Window",
                "slug": "sliding-window"
            },
            {
                "name": "Probability and Statistics",
                "slug": "probability-and-statistics"
            }
        ],
        "companyNames": [
            "adobe",
            "google"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/new-21-game/description"
    },
    "1552": {
        "difficulty": "MEDIUM",
        "id": 1552,
        "questionFrontendId": "1441",
        "title": "Build an Array With Stack Operations",
        "titleSlug": "build-an-array-with-stack-operations",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Stack",
                "slug": "stack"
            },
            {
                "name": "Simulation",
                "slug": "simulation"
            }
        ],
        "companyNames": [
            "adobe",
            "google"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/build-an-array-with-stack-operations/description"
    },
    "2244": {
        "difficulty": "MEDIUM",
        "id": 2244,
        "questionFrontendId": "2125",
        "title": "Number of Laser Beams in a Bank",
        "titleSlug": "number-of-laser-beams-in-a-bank",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Matrix",
                "slug": "matrix"
            }
        ],
        "companyNames": [
            "adobe",
            "amazon"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/number-of-laser-beams-in-a-bank/description"
    },
    "3114": {
        "difficulty": "MEDIUM",
        "id": 3114,
        "questionFrontendId": "2865",
        "title": "Beautiful Towers I",
        "titleSlug": "beautiful-towers-i",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Stack",
                "slug": "stack"
            },
            {
                "name": "Monotonic Stack",
                "slug": "monotonic-stack"
            }
        ],
        "companyNames": [
            "adobe"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/beautiful-towers-i/description"
    },
    "327": {
        "difficulty": "HARD",
        "id": 327,
        "questionFrontendId": "327",
        "title": "Count of Range Sum",
        "titleSlug": "count-of-range-sum",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Binary Search",
                "slug": "binary-search"
            },
            {
                "name": "Divide and Conquer",
                "slug": "divide-and-conquer"
            },
            {
                "name": "Binary Indexed Tree",
                "slug": "binary-indexed-tree"
            },
            {
                "name": "Segment Tree",
                "slug": "segment-tree"
            },
            {
                "name": "Merge Sort",
                "slug": "merge-sort"
            },
            {
                "name": "Ordered Set",
                "slug": "ordered-set"
            }
        ],
        "companyNames": [
            "adobe",
            "google",
            "amazon"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/count-of-range-sum/description"
    },
    "454": {
        "difficulty": "MEDIUM",
        "id": 454,
        "questionFrontendId": "454",
        "title": "4Sum II",
        "titleSlug": "4sum-ii",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            }
        ],
        "companyNames": [
            "adobe",
            "google",
            "amazon"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/4sum-ii/description"
    },
    "1247": {
        "difficulty": "MEDIUM",
        "id": 1247,
        "questionFrontendId": "1144",
        "title": "Decrease Elements To Make Array Zigzag",
        "titleSlug": "decrease-elements-to-make-array-zigzag",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            }
        ],
        "companyNames": [
            "adobe",
            "google"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/decrease-elements-to-make-array-zigzag/description"
    },
    "1299": {
        "difficulty": "MEDIUM",
        "id": 1299,
        "questionFrontendId": "1191",
        "title": "K-Concatenation Maximum Sum",
        "titleSlug": "k-concatenation-maximum-sum",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            }
        ],
        "companyNames": [
            "adobe",
            "amazon"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/k-concatenation-maximum-sum/description"
    },
    "1484": {
        "difficulty": "MEDIUM",
        "id": 1484,
        "questionFrontendId": "1367",
        "title": "Linked List in Binary Tree",
        "titleSlug": "linked-list-in-binary-tree",
        "topicTags": [
            {
                "name": "Linked List",
                "slug": "linked-list"
            },
            {
                "name": "Tree",
                "slug": "tree"
            },
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Breadth-First Search",
                "slug": "breadth-first-search"
            },
            {
                "name": "Binary Tree",
                "slug": "binary-tree"
            }
        ],
        "companyNames": [
            "adobe",
            "google",
            "amazon"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/linked-list-in-binary-tree/description"
    },
    "1657": {
        "difficulty": "MEDIUM",
        "id": 1657,
        "questionFrontendId": "1535",
        "title": "Find the Winner of an Array Game",
        "titleSlug": "find-the-winner-of-an-array-game",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Simulation",
                "slug": "simulation"
            }
        ],
        "companyNames": [
            "adobe",
            "google",
            "amazon"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/find-the-winner-of-an-array-game/description"
    },
    "1827": {
        "difficulty": "EASY",
        "id": 1827,
        "questionFrontendId": "1683",
        "title": "Invalid Tweets",
        "titleSlug": "invalid-tweets",
        "topicTags": [
            {
                "name": "Database",
                "slug": "database"
            }
        ],
        "companyNames": [
            "adobe",
            "amazon"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/invalid-tweets/description"
    },
    "2015": {
        "difficulty": "EASY",
        "id": 2015,
        "questionFrontendId": "1886",
        "title": "Determine Whether Matrix Can Be Obtained By Rotation",
        "titleSlug": "determine-whether-matrix-can-be-obtained-by-rotation",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Matrix",
                "slug": "matrix"
            }
        ],
        "companyNames": [
            "adobe",
            "amazon"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/determine-whether-matrix-can-be-obtained-by-rotation/description"
    },
    "2020": {
        "difficulty": "EASY",
        "id": 2020,
        "questionFrontendId": "1909",
        "title": "Remove One Element to Make the Array Strictly Increasing",
        "titleSlug": "remove-one-element-to-make-the-array-strictly-increasing",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            }
        ],
        "companyNames": [
            "adobe",
            "google",
            "amazon"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/remove-one-element-to-make-the-array-strictly-increasing/description"
    },
    "2390": {
        "difficulty": "HARD",
        "id": 2390,
        "questionFrontendId": "2306",
        "title": "Naming a Company",
        "titleSlug": "naming-a-company",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Bit Manipulation",
                "slug": "bit-manipulation"
            },
            {
                "name": "Enumeration",
                "slug": "enumeration"
            }
        ],
        "companyNames": [
            "adobe"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/naming-a-company/description"
    },
    "2864": {
        "difficulty": "EASY",
        "id": 2864,
        "questionFrontendId": "2727",
        "title": "Is Object Empty",
        "titleSlug": "is-object-empty",
        "topicTags": [],
        "companyNames": [
            "adobe"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/is-object-empty/description"
    },
    "275": {
        "difficulty": "MEDIUM",
        "id": 275,
        "questionFrontendId": "275",
        "title": "H-Index II",
        "titleSlug": "h-index-ii",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Binary Search",
                "slug": "binary-search"
            }
        ],
        "companyNames": [
            "adobe",
            "amazon"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/h-index-ii/description"
    },
    "318": {
        "difficulty": "MEDIUM",
        "id": 318,
        "questionFrontendId": "318",
        "title": "Maximum Product of Word Lengths",
        "titleSlug": "maximum-product-of-word-lengths",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Bit Manipulation",
                "slug": "bit-manipulation"
            }
        ],
        "companyNames": [
            "adobe",
            "google",
            "amazon"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/maximum-product-of-word-lengths/description"
    },
    "356": {
        "difficulty": "MEDIUM",
        "id": 356,
        "questionFrontendId": "356",
        "title": "Line Reflection",
        "titleSlug": "line-reflection",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Math",
                "slug": "math"
            }
        ],
        "companyNames": [
            "adobe",
            "google"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/line-reflection/description"
    },
    "406": {
        "difficulty": "MEDIUM",
        "id": 406,
        "questionFrontendId": "406",
        "title": "Queue Reconstruction by Height",
        "titleSlug": "queue-reconstruction-by-height",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Binary Indexed Tree",
                "slug": "binary-indexed-tree"
            },
            {
                "name": "Segment Tree",
                "slug": "segment-tree"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ],
        "companyNames": [
            "adobe",
            "google",
            "amazon"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/queue-reconstruction-by-height/description"
    },
    "458": {
        "difficulty": "HARD",
        "id": 458,
        "questionFrontendId": "458",
        "title": "Poor Pigs",
        "titleSlug": "poor-pigs",
        "topicTags": [
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Combinatorics",
                "slug": "combinatorics"
            }
        ],
        "companyNames": [
            "adobe",
            "google",
            "amazon"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/poor-pigs/description"
    },
    "491": {
        "difficulty": "MEDIUM",
        "id": 491,
        "questionFrontendId": "491",
        "title": "Non-decreasing Subsequences",
        "titleSlug": "non-decreasing-subsequences",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Backtracking",
                "slug": "backtracking"
            },
            {
                "name": "Bit Manipulation",
                "slug": "bit-manipulation"
            }
        ],
        "companyNames": [
            "adobe",
            "amazon"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/non-decreasing-subsequences/description"
    },
    "575": {
        "difficulty": "EASY",
        "id": 575,
        "questionFrontendId": "575",
        "title": "Distribute Candies",
        "titleSlug": "distribute-candies",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            }
        ],
        "companyNames": [
            "adobe"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/distribute-candies/description"
    },
    "587": {
        "difficulty": "HARD",
        "id": 587,
        "questionFrontendId": "587",
        "title": "Erect the Fence",
        "titleSlug": "erect-the-fence",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Geometry",
                "slug": "geometry"
            }
        ],
        "companyNames": [
            "adobe",
            "google",
            "amazon"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/erect-the-fence/description"
    },
    "655": {
        "difficulty": "MEDIUM",
        "id": 655,
        "questionFrontendId": "655",
        "title": "Print Binary Tree",
        "titleSlug": "print-binary-tree",
        "topicTags": [
            {
                "name": "Tree",
                "slug": "tree"
            },
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Breadth-First Search",
                "slug": "breadth-first-search"
            },
            {
                "name": "Binary Tree",
                "slug": "binary-tree"
            }
        ],
        "companyNames": [
            "adobe",
            "google",
            "amazon"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/print-binary-tree/description"
    },
    "675": {
        "difficulty": "HARD",
        "id": 675,
        "questionFrontendId": "675",
        "title": "Cut Off Trees for Golf Event",
        "titleSlug": "cut-off-trees-for-golf-event",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Breadth-First Search",
                "slug": "breadth-first-search"
            },
            {
                "name": "Heap (Priority Queue)",
                "slug": "heap-priority-queue"
            },
            {
                "name": "Matrix",
                "slug": "matrix"
            }
        ],
        "companyNames": [
            "adobe",
            "google",
            "amazon"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/cut-off-trees-for-golf-event/description"
    },
    "712": {
        "difficulty": "MEDIUM",
        "id": 712,
        "questionFrontendId": "712",
        "title": "Minimum ASCII Delete Sum for Two Strings",
        "titleSlug": "minimum-ascii-delete-sum-for-two-strings",
        "topicTags": [
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            }
        ],
        "companyNames": [
            "adobe",
            "google",
            "amazon"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/minimum-ascii-delete-sum-for-two-strings/description"
    },
    "781": {
        "difficulty": "HARD",
        "id": 781,
        "questionFrontendId": "770",
        "title": "Basic Calculator IV",
        "titleSlug": "basic-calculator-iv",
        "topicTags": [
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Stack",
                "slug": "stack"
            },
            {
                "name": "Recursion",
                "slug": "recursion"
            }
        ],
        "companyNames": [
            "adobe",
            "google",
            "amazon"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/basic-calculator-iv/description"
    },
    "793": {
        "difficulty": "MEDIUM",
        "id": 793,
        "questionFrontendId": "777",
        "title": "Swap Adjacent in LR String",
        "titleSlug": "swap-adjacent-in-lr-string",
        "topicTags": [
            {
                "name": "Two Pointers",
                "slug": "two-pointers"
            },
            {
                "name": "String",
                "slug": "string"
            }
        ],
        "companyNames": [
            "adobe",
            "google",
            "amazon"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/swap-adjacent-in-lr-string/description"
    },
    "841": {
        "difficulty": "EASY",
        "id": 841,
        "questionFrontendId": "821",
        "title": "Shortest Distance to a Character",
        "titleSlug": "shortest-distance-to-a-character",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Two Pointers",
                "slug": "two-pointers"
            },
            {
                "name": "String",
                "slug": "string"
            }
        ],
        "companyNames": [
            "adobe"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/shortest-distance-to-a-character/description"
    },
    "852": {
        "difficulty": "MEDIUM",
        "id": 852,
        "questionFrontendId": "825",
        "title": "Friends Of Appropriate Ages",
        "titleSlug": "friends-of-appropriate-ages",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Two Pointers",
                "slug": "two-pointers"
            },
            {
                "name": "Binary Search",
                "slug": "binary-search"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ],
        "companyNames": [
            "adobe"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/friends-of-appropriate-ages/description"
    },
    "903": {
        "difficulty": "MEDIUM",
        "id": 903,
        "questionFrontendId": "470",
        "title": "Implement Rand10() Using Rand7()",
        "titleSlug": "implement-rand10-using-rand7",
        "topicTags": [
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Rejection Sampling",
                "slug": "rejection-sampling"
            },
            {
                "name": "Randomized",
                "slug": "randomized"
            },
            {
                "name": "Probability and Statistics",
                "slug": "probability-and-statistics"
            }
        ],
        "companyNames": [
            "adobe",
            "google",
            "amazon"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/implement-rand10-using-rand7/description"
    },
    "979": {
        "difficulty": "EASY",
        "id": 979,
        "questionFrontendId": "942",
        "title": "DI String Match",
        "titleSlug": "di-string-match",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Two Pointers",
                "slug": "two-pointers"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            }
        ],
        "companyNames": [
            "adobe",
            "google"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/di-string-match/description"
    },
    "1026": {
        "difficulty": "MEDIUM",
        "id": 1026,
        "questionFrontendId": "984",
        "title": "String Without AAA or BBB",
        "titleSlug": "string-without-aaa-or-bbb",
        "topicTags": [
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            }
        ],
        "companyNames": [
            "adobe"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/string-without-aaa-or-bbb/description"
    },
    "1027": {
        "difficulty": "MEDIUM",
        "id": 1027,
        "questionFrontendId": "985",
        "title": "Sum of Even Numbers After Queries",
        "titleSlug": "sum-of-even-numbers-after-queries",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Simulation",
                "slug": "simulation"
            }
        ],
        "companyNames": [
            "adobe"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/sum-of-even-numbers-after-queries/description"
    },
    "1045": {
        "difficulty": "MEDIUM",
        "id": 1045,
        "questionFrontendId": "1003",
        "title": "Check If Word Is Valid After Substitutions",
        "titleSlug": "check-if-word-is-valid-after-substitutions",
        "topicTags": [
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Stack",
                "slug": "stack"
            }
        ],
        "companyNames": [
            "adobe",
            "amazon"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/check-if-word-is-valid-after-substitutions/description"
    },
    "1058": {
        "difficulty": "MEDIUM",
        "id": 1058,
        "questionFrontendId": "1061",
        "title": "Lexicographically Smallest Equivalent String",
        "titleSlug": "lexicographically-smallest-equivalent-string",
        "topicTags": [
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Union Find",
                "slug": "union-find"
            }
        ],
        "companyNames": [
            "adobe",
            "amazon"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/lexicographically-smallest-equivalent-string/description"
    },
    "1096": {
        "difficulty": "MEDIUM",
        "id": 1096,
        "questionFrontendId": "1031",
        "title": "Maximum Sum of Two Non-Overlapping Subarrays",
        "titleSlug": "maximum-sum-of-two-non-overlapping-subarrays",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Sliding Window",
                "slug": "sliding-window"
            }
        ],
        "companyNames": [
            "adobe"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/maximum-sum-of-two-non-overlapping-subarrays/description"
    },
    "1210": {
        "difficulty": "EASY",
        "id": 1210,
        "questionFrontendId": "1619",
        "title": "Mean of Array After Removing Some Elements",
        "titleSlug": "mean-of-array-after-removing-some-elements",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ],
        "companyNames": [
            "adobe",
            "google"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/mean-of-array-after-removing-some-elements/description"
    },
    "1229": {
        "difficulty": "MEDIUM",
        "id": 1229,
        "questionFrontendId": "1129",
        "title": "Shortest Path with Alternating Colors",
        "titleSlug": "shortest-path-with-alternating-colors",
        "topicTags": [
            {
                "name": "Breadth-First Search",
                "slug": "breadth-first-search"
            },
            {
                "name": "Graph",
                "slug": "graph"
            }
        ],
        "companyNames": [
            "adobe",
            "google",
            "amazon"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/shortest-path-with-alternating-colors/description"
    },
    "1231": {
        "difficulty": "EASY",
        "id": 1231,
        "questionFrontendId": "1299",
        "title": "Replace Elements with Greatest Element on Right Side",
        "titleSlug": "replace-elements-with-greatest-element-on-right-side",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            }
        ],
        "companyNames": [
            "adobe",
            "google",
            "amazon"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/replace-elements-with-greatest-element-on-right-side/description"
    },
    "1243": {
        "difficulty": "MEDIUM",
        "id": 1243,
        "questionFrontendId": "1315",
        "title": "Sum of Nodes with Even-Valued Grandparent",
        "titleSlug": "sum-of-nodes-with-even-valued-grandparent",
        "topicTags": [
            {
                "name": "Tree",
                "slug": "tree"
            },
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Breadth-First Search",
                "slug": "breadth-first-search"
            },
            {
                "name": "Binary Tree",
                "slug": "binary-tree"
            }
        ],
        "companyNames": [
            "adobe",
            "amazon"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/sum-of-nodes-with-even-valued-grandparent/description"
    },
    "1500": {
        "difficulty": "EASY",
        "id": 1500,
        "questionFrontendId": "1399",
        "title": "Count Largest Group",
        "titleSlug": "count-largest-group",
        "topicTags": [
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Math",
                "slug": "math"
            }
        ],
        "companyNames": [
            "adobe"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/count-largest-group/description"
    },
    "1535": {
        "difficulty": "HARD",
        "id": 1535,
        "questionFrontendId": "1420",
        "title": "Build Array Where You Can Find The Maximum Exactly K Comparisons",
        "titleSlug": "build-array-where-you-can-find-the-maximum-exactly-k-comparisons",
        "topicTags": [
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Prefix Sum",
                "slug": "prefix-sum"
            }
        ],
        "companyNames": [
            "adobe",
            "google",
            "amazon"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/build-array-where-you-can-find-the-maximum-exactly-k-comparisons/description"
    },
    "1573": {
        "difficulty": "MEDIUM",
        "id": 1573,
        "questionFrontendId": "1477",
        "title": "Find Two Non-overlapping Sub-arrays Each With Target Sum",
        "titleSlug": "find-two-non-overlapping-sub-arrays-each-with-target-sum",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Binary Search",
                "slug": "binary-search"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Sliding Window",
                "slug": "sliding-window"
            }
        ],
        "companyNames": [
            "adobe",
            "google"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/find-two-non-overlapping-sub-arrays-each-with-target-sum/description"
    },
    "1723": {
        "difficulty": "HARD",
        "id": 1723,
        "questionFrontendId": "1601",
        "title": "Maximum Number of Achievable Transfer Requests",
        "titleSlug": "maximum-number-of-achievable-transfer-requests",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Backtracking",
                "slug": "backtracking"
            },
            {
                "name": "Bit Manipulation",
                "slug": "bit-manipulation"
            },
            {
                "name": "Enumeration",
                "slug": "enumeration"
            }
        ],
        "companyNames": [
            "adobe",
            "google",
            "amazon"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/maximum-number-of-achievable-transfer-requests/description"
    },
    "1771": {
        "difficulty": "MEDIUM",
        "id": 1771,
        "questionFrontendId": "1648",
        "title": "Sell Diminishing-Valued Colored Balls",
        "titleSlug": "sell-diminishing-valued-colored-balls",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Binary Search",
                "slug": "binary-search"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            },
            {
                "name": "Heap (Priority Queue)",
                "slug": "heap-priority-queue"
            }
        ],
        "companyNames": [
            "adobe",
            "amazon"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/sell-diminishing-valued-colored-balls/description"
    },
    "1782": {
        "difficulty": "MEDIUM",
        "id": 1782,
        "questionFrontendId": "1663",
        "title": "Smallest String With A Given Numeric Value",
        "titleSlug": "smallest-string-with-a-given-numeric-value",
        "topicTags": [
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            }
        ],
        "companyNames": [
            "adobe"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/smallest-string-with-a-given-numeric-value/description"
    },
    "1788": {
        "difficulty": "MEDIUM",
        "id": 1788,
        "questionFrontendId": "1686",
        "title": "Stone Game VI",
        "titleSlug": "stone-game-vi",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            },
            {
                "name": "Heap (Priority Queue)",
                "slug": "heap-priority-queue"
            },
            {
                "name": "Game Theory",
                "slug": "game-theory"
            }
        ],
        "companyNames": [
            "adobe"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/stone-game-vi/description"
    },
    "1892": {
        "difficulty": "EASY",
        "id": 1892,
        "questionFrontendId": "1741",
        "title": "Find Total Time Spent by Each Employee",
        "titleSlug": "find-total-time-spent-by-each-employee",
        "topicTags": [
            {
                "name": "Database",
                "slug": "database"
            }
        ],
        "companyNames": [
            "adobe",
            "google",
            "amazon"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/find-total-time-spent-by-each-employee/description"
    },
    "1987": {
        "difficulty": "EASY",
        "id": 1987,
        "questionFrontendId": "1876",
        "title": "Substrings of Size Three with Distinct Characters",
        "titleSlug": "substrings-of-size-three-with-distinct-characters",
        "topicTags": [
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Sliding Window",
                "slug": "sliding-window"
            },
            {
                "name": "Counting",
                "slug": "counting"
            }
        ],
        "companyNames": [
            "adobe",
            "accenture",
            "amazon"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/substrings-of-size-three-with-distinct-characters/description"
    },
    "2000": {
        "difficulty": "MEDIUM",
        "id": 2000,
        "questionFrontendId": "1870",
        "title": "Minimum Speed to Arrive on Time",
        "titleSlug": "minimum-speed-to-arrive-on-time",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Binary Search",
                "slug": "binary-search"
            }
        ],
        "companyNames": [
            "adobe",
            "google",
            "amazon"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/minimum-speed-to-arrive-on-time/description"
    },
    "2089": {
        "difficulty": "MEDIUM",
        "id": 2089,
        "questionFrontendId": "1975",
        "title": "Maximum Matrix Sum",
        "titleSlug": "maximum-matrix-sum",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            },
            {
                "name": "Matrix",
                "slug": "matrix"
            }
        ],
        "companyNames": [
            "adobe"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/maximum-matrix-sum/description"
    },
    "2144": {
        "difficulty": "EASY",
        "id": 2144,
        "questionFrontendId": "2016",
        "title": "Maximum Difference Between Increasing Elements",
        "titleSlug": "maximum-difference-between-increasing-elements",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            }
        ],
        "companyNames": [
            "adobe",
            "cisco",
            "google"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/maximum-difference-between-increasing-elements/description"
    },
    "2304": {
        "difficulty": "EASY",
        "id": 2304,
        "questionFrontendId": "2194",
        "title": "Cells in a Range on an Excel Sheet",
        "titleSlug": "cells-in-a-range-on-an-excel-sheet",
        "topicTags": [
            {
                "name": "String",
                "slug": "string"
            }
        ],
        "companyNames": [
            "adobe",
            "amazon"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/cells-in-a-range-on-an-excel-sheet/description"
    },
    "2374": {
        "difficulty": "MEDIUM",
        "id": 2374,
        "questionFrontendId": "2289",
        "title": "Steps to Make Array Non-decreasing",
        "titleSlug": "steps-to-make-array-non-decreasing",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Linked List",
                "slug": "linked-list"
            },
            {
                "name": "Stack",
                "slug": "stack"
            },
            {
                "name": "Monotonic Stack",
                "slug": "monotonic-stack"
            }
        ],
        "companyNames": [
            "adobe",
            "amazon"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/steps-to-make-array-non-decreasing/description"
    },
    "2401": {
        "difficulty": "EASY",
        "id": 2401,
        "questionFrontendId": "2315",
        "title": "Count Asterisks",
        "titleSlug": "count-asterisks",
        "topicTags": [
            {
                "name": "String",
                "slug": "string"
            }
        ],
        "companyNames": [
            "adobe",
            "google"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/count-asterisks/description"
    },
    "2687": {
        "difficulty": "HARD",
        "id": 2687,
        "questionFrontendId": "2663",
        "title": "Lexicographically Smallest Beautiful String",
        "titleSlug": "lexicographically-smallest-beautiful-string",
        "topicTags": [
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            }
        ],
        "companyNames": [
            "adobe",
            "google"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/lexicographically-smallest-beautiful-string/description"
    },
    "2723": {
        "difficulty": "EASY",
        "id": 2723,
        "questionFrontendId": "2609",
        "title": "Find the Longest Balanced Substring of a Binary String",
        "titleSlug": "find-the-longest-balanced-substring-of-a-binary-string",
        "topicTags": [
            {
                "name": "String",
                "slug": "string"
            }
        ],
        "companyNames": [
            "adobe"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/find-the-longest-balanced-substring-of-a-binary-string/description"
    },
    "2764": {
        "difficulty": "MEDIUM",
        "id": 2764,
        "questionFrontendId": "2658",
        "title": "Maximum Number of Fish in a Grid",
        "titleSlug": "maximum-number-of-fish-in-a-grid",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Breadth-First Search",
                "slug": "breadth-first-search"
            },
            {
                "name": "Union Find",
                "slug": "union-find"
            },
            {
                "name": "Matrix",
                "slug": "matrix"
            }
        ],
        "companyNames": [
            "adobe"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/maximum-number-of-fish-in-a-grid/description"
    },
    "2821": {
        "difficulty": "EASY",
        "id": 2821,
        "questionFrontendId": "2715",
        "title": "Timeout Cancellation",
        "titleSlug": "timeout-cancellation",
        "topicTags": [],
        "companyNames": [
            "adobe"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/timeout-cancellation/description"
    },
    "2849": {
        "difficulty": "HARD",
        "id": 2849,
        "questionFrontendId": "2763",
        "title": "Sum of Imbalance Numbers of All Subarrays",
        "titleSlug": "sum-of-imbalance-numbers-of-all-subarrays",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Ordered Set",
                "slug": "ordered-set"
            }
        ],
        "companyNames": [
            "adobe",
            "google"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/sum-of-imbalance-numbers-of-all-subarrays/description"
    },
    "2878": {
        "difficulty": "MEDIUM",
        "id": 2878,
        "questionFrontendId": "2772",
        "title": "Apply Operations to Make All Array Elements Equal to Zero",
        "titleSlug": "apply-operations-to-make-all-array-elements-equal-to-zero",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Prefix Sum",
                "slug": "prefix-sum"
            }
        ],
        "companyNames": [
            "adobe"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/apply-operations-to-make-all-array-elements-equal-to-zero/description"
    },
    "2892": {
        "difficulty": "EASY",
        "id": 2892,
        "questionFrontendId": "2784",
        "title": "Check if Array is Good",
        "titleSlug": "check-if-array-is-good",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ],
        "companyNames": [
            "adobe",
            "amazon"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/check-if-array-is-good/description"
    },
    "3093": {
        "difficulty": "EASY",
        "id": 3093,
        "questionFrontendId": "2859",
        "title": "Sum of Values at Indices With K Set Bits",
        "titleSlug": "sum-of-values-at-indices-with-k-set-bits",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Bit Manipulation",
                "slug": "bit-manipulation"
            }
        ],
        "companyNames": [
            "adobe",
            "accenture",
            "amazon"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/sum-of-values-at-indices-with-k-set-bits/description"
    },
    "3242": {
        "difficulty": "EASY",
        "id": 3242,
        "questionFrontendId": "3005",
        "title": "Count Elements With Maximum Frequency",
        "titleSlug": "count-elements-with-maximum-frequency",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Counting",
                "slug": "counting"
            }
        ],
        "companyNames": [
            "adobe",
            "walmart_labs",
            "amazon"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/count-elements-with-maximum-frequency/description"
    },
    "3251": {
        "difficulty": "EASY",
        "id": 3251,
        "questionFrontendId": "3000",
        "title": "Maximum Area of Longest Diagonal Rectangle",
        "titleSlug": "maximum-area-of-longest-diagonal-rectangle",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            }
        ],
        "companyNames": [
            "adobe",
            "accenture"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/maximum-area-of-longest-diagonal-rectangle/description"
    },
    "2177": {
        "difficulty": "EASY",
        "id": 2177,
        "questionFrontendId": "2068",
        "title": "Check Whether Two Strings are Almost Equivalent",
        "titleSlug": "check-whether-two-strings-are-almost-equivalent",
        "topicTags": [
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Counting",
                "slug": "counting"
            }
        ],
        "companyNames": [
            "walmart_labs"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/check-whether-two-strings-are-almost-equivalent/description"
    },
    "1359": {
        "difficulty": "MEDIUM",
        "id": 1359,
        "questionFrontendId": "1238",
        "title": "Circular Permutation in Binary Representation",
        "titleSlug": "circular-permutation-in-binary-representation",
        "topicTags": [
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Backtracking",
                "slug": "backtracking"
            },
            {
                "name": "Bit Manipulation",
                "slug": "bit-manipulation"
            }
        ],
        "companyNames": [
            "walmart_labs"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/circular-permutation-in-binary-representation/description"
    },
    "2091": {
        "difficulty": "HARD",
        "id": 2091,
        "questionFrontendId": "1977",
        "title": "Number of Ways to Separate Numbers",
        "titleSlug": "number-of-ways-to-separate-numbers",
        "topicTags": [
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Suffix Array",
                "slug": "suffix-array"
            }
        ],
        "companyNames": [
            "walmart_labs",
            "amazon"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/number-of-ways-to-separate-numbers/description"
    },
    "2180": {
        "difficulty": "HARD",
        "id": 2180,
        "questionFrontendId": "2071",
        "title": "Maximum Number of Tasks You Can Assign",
        "titleSlug": "maximum-number-of-tasks-you-can-assign",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Binary Search",
                "slug": "binary-search"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            },
            {
                "name": "Queue",
                "slug": "queue"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            },
            {
                "name": "Monotonic Queue",
                "slug": "monotonic-queue"
            }
        ],
        "companyNames": [
            "walmart_labs"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/maximum-number-of-tasks-you-can-assign/description"
    },
    "2214": {
        "difficulty": "EASY",
        "id": 2214,
        "questionFrontendId": "2072",
        "title": "The Winner University",
        "titleSlug": "the-winner-university",
        "topicTags": [
            {
                "name": "Database",
                "slug": "database"
            }
        ],
        "companyNames": [
            "walmart_labs"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/the-winner-university/description"
    },
    "2280": {
        "difficulty": "HARD",
        "id": 2280,
        "questionFrontendId": "2179",
        "title": "Count Good Triplets in an Array",
        "titleSlug": "count-good-triplets-in-an-array",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Binary Search",
                "slug": "binary-search"
            },
            {
                "name": "Divide and Conquer",
                "slug": "divide-and-conquer"
            },
            {
                "name": "Binary Indexed Tree",
                "slug": "binary-indexed-tree"
            },
            {
                "name": "Segment Tree",
                "slug": "segment-tree"
            },
            {
                "name": "Merge Sort",
                "slug": "merge-sort"
            },
            {
                "name": "Ordered Set",
                "slug": "ordered-set"
            }
        ],
        "companyNames": [
            "walmart_labs"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/count-good-triplets-in-an-array/description"
    },
    "2539": {
        "difficulty": "HARD",
        "id": 2539,
        "questionFrontendId": "2449",
        "title": "Minimum Number of Operations to Make Arrays Similar",
        "titleSlug": "minimum-number-of-operations-to-make-arrays-similar",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ],
        "companyNames": [
            "walmart_labs",
            "amazon"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/minimum-number-of-operations-to-make-arrays-similar/description"
    },
    "2604": {
        "difficulty": "MEDIUM",
        "id": 2604,
        "questionFrontendId": "2541",
        "title": "Minimum Operations to Make Array Equal II",
        "titleSlug": "minimum-operations-to-make-array-equal-ii",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            }
        ],
        "companyNames": [
            "walmart_labs"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/minimum-operations-to-make-array-equal-ii/description"
    },
    "3349": {
        "difficulty": "EASY",
        "id": 3349,
        "questionFrontendId": "3090",
        "title": "Maximum Length Substring With Two Occurrences",
        "titleSlug": "maximum-length-substring-with-two-occurrences",
        "topicTags": [
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Sliding Window",
                "slug": "sliding-window"
            }
        ],
        "companyNames": [
            "walmart_labs"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/maximum-length-substring-with-two-occurrences/description"
    },
    "3422": {
        "difficulty": "MEDIUM",
        "id": 3422,
        "questionFrontendId": "3179",
        "title": "Find the N-th Value After K Seconds",
        "titleSlug": "find-the-n-th-value-after-k-seconds",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Simulation",
                "slug": "simulation"
            },
            {
                "name": "Combinatorics",
                "slug": "combinatorics"
            },
            {
                "name": "Prefix Sum",
                "slug": "prefix-sum"
            }
        ],
        "companyNames": [
            "walmart_labs"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/find-the-n-th-value-after-k-seconds/description"
    },
    "2426": {
        "difficulty": "MEDIUM",
        "id": 2426,
        "questionFrontendId": "2291",
        "title": "Maximum Profit From Trading Stocks",
        "titleSlug": "maximum-profit-from-trading-stocks",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            }
        ],
        "companyNames": [
            "walmart_labs",
            "amazon"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/maximum-profit-from-trading-stocks/description"
    },
    "298": {
        "difficulty": "MEDIUM",
        "id": 298,
        "questionFrontendId": "298",
        "title": "Binary Tree Longest Consecutive Sequence",
        "titleSlug": "binary-tree-longest-consecutive-sequence",
        "topicTags": [
            {
                "name": "Tree",
                "slug": "tree"
            },
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Binary Tree",
                "slug": "binary-tree"
            }
        ],
        "companyNames": [
            "walmart_labs",
            "google"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/binary-tree-longest-consecutive-sequence/description"
    },
    "829": {
        "difficulty": "MEDIUM",
        "id": 829,
        "questionFrontendId": "811",
        "title": "Subdomain Visit Count",
        "titleSlug": "subdomain-visit-count",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Counting",
                "slug": "counting"
            }
        ],
        "companyNames": [
            "walmart_labs"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/subdomain-visit-count/description"
    },
    "2710": {
        "difficulty": "MEDIUM",
        "id": 2710,
        "questionFrontendId": "2571",
        "title": "Minimum Operations to Reduce an Integer to 0",
        "titleSlug": "minimum-operations-to-reduce-an-integer-to-0",
        "topicTags": [
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            },
            {
                "name": "Bit Manipulation",
                "slug": "bit-manipulation"
            }
        ],
        "companyNames": [
            "nvidia"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/minimum-operations-to-reduce-an-integer-to-0/description"
    },
    "1733": {
        "difficulty": "HARD",
        "id": 1733,
        "questionFrontendId": "1610",
        "title": "Maximum Number of Visible Points",
        "titleSlug": "maximum-number-of-visible-points",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Geometry",
                "slug": "geometry"
            },
            {
                "name": "Sliding Window",
                "slug": "sliding-window"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ],
        "companyNames": [
            "nvidia",
            "google",
            "amazon"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/maximum-number-of-visible-points/description"
    },
    "255": {
        "difficulty": "MEDIUM",
        "id": 255,
        "questionFrontendId": "255",
        "title": "Verify Preorder Sequence in Binary Search Tree",
        "titleSlug": "verify-preorder-sequence-in-binary-search-tree",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Stack",
                "slug": "stack"
            },
            {
                "name": "Tree",
                "slug": "tree"
            },
            {
                "name": "Binary Search Tree",
                "slug": "binary-search-tree"
            },
            {
                "name": "Recursion",
                "slug": "recursion"
            },
            {
                "name": "Monotonic Stack",
                "slug": "monotonic-stack"
            },
            {
                "name": "Binary Tree",
                "slug": "binary-tree"
            }
        ],
        "companyNames": [
            "nvidia"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/verify-preorder-sequence-in-binary-search-tree/description"
    },
    "382": {
        "difficulty": "MEDIUM",
        "id": 382,
        "questionFrontendId": "382",
        "title": "Linked List Random Node",
        "titleSlug": "linked-list-random-node",
        "topicTags": [
            {
                "name": "Linked List",
                "slug": "linked-list"
            },
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Reservoir Sampling",
                "slug": "reservoir-sampling"
            },
            {
                "name": "Randomized",
                "slug": "randomized"
            }
        ],
        "companyNames": [
            "nvidia",
            "google",
            "amazon"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/linked-list-random-node/description"
    },
    "1783": {
        "difficulty": "MEDIUM",
        "id": 1783,
        "questionFrontendId": "1664",
        "title": "Ways to Make a Fair Array",
        "titleSlug": "ways-to-make-a-fair-array",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Prefix Sum",
                "slug": "prefix-sum"
            }
        ],
        "companyNames": [
            "nvidia"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/ways-to-make-a-fair-array/description"
    },
    "251": {
        "difficulty": "MEDIUM",
        "id": 251,
        "questionFrontendId": "251",
        "title": "Flatten 2D Vector",
        "titleSlug": "flatten-2d-vector",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Two Pointers",
                "slug": "two-pointers"
            },
            {
                "name": "Design",
                "slug": "design"
            },
            {
                "name": "Iterator",
                "slug": "iterator"
            }
        ],
        "companyNames": [
            "airbnb",
            "google",
            "amazon"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/flatten-2d-vector/description"
    },
    "756": {
        "difficulty": "MEDIUM",
        "id": 756,
        "questionFrontendId": "755",
        "title": "Pour Water",
        "titleSlug": "pour-water",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Simulation",
                "slug": "simulation"
            }
        ],
        "companyNames": [
            "airbnb",
            "amazon"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/pour-water/description"
    },
    "752": {
        "difficulty": "MEDIUM",
        "id": 752,
        "questionFrontendId": "751",
        "title": "IP to CIDR",
        "titleSlug": "ip-to-cidr",
        "topicTags": [
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Bit Manipulation",
                "slug": "bit-manipulation"
            }
        ],
        "companyNames": [
            "airbnb"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/ip-to-cidr/description"
    },
    "761": {
        "difficulty": "HARD",
        "id": 761,
        "questionFrontendId": "759",
        "title": "Employee Free Time",
        "titleSlug": "employee-free-time",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            },
            {
                "name": "Heap (Priority Queue)",
                "slug": "heap-priority-queue"
            }
        ],
        "companyNames": [
            "airbnb",
            "google",
            "amazon"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/employee-free-time/description"
    },
    "757": {
        "difficulty": "MEDIUM",
        "id": 757,
        "questionFrontendId": "756",
        "title": "Pyramid Transition Matrix",
        "titleSlug": "pyramid-transition-matrix",
        "topicTags": [
            {
                "name": "Bit Manipulation",
                "slug": "bit-manipulation"
            },
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Breadth-First Search",
                "slug": "breadth-first-search"
            }
        ],
        "companyNames": [
            "airbnb",
            "google"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/pyramid-transition-matrix/description"
    },
    "385": {
        "difficulty": "MEDIUM",
        "id": 385,
        "questionFrontendId": "385",
        "title": "Mini Parser",
        "titleSlug": "mini-parser",
        "topicTags": [
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Stack",
                "slug": "stack"
            },
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            }
        ],
        "companyNames": [
            "airbnb",
            "amazon"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/mini-parser/description"
    },
    "1053": {
        "difficulty": "MEDIUM",
        "id": 1053,
        "questionFrontendId": "1058",
        "title": "Minimize Rounding Error to Meet Target",
        "titleSlug": "minimize-rounding-error-to-meet-target",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ],
        "companyNames": [
            "airbnb"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/minimize-rounding-error-to-meet-target/description"
    },
    "1070": {
        "difficulty": "MEDIUM",
        "id": 1070,
        "questionFrontendId": "1017",
        "title": "Convert to Base -2",
        "titleSlug": "convert-to-base-2",
        "topicTags": [
            {
                "name": "Math",
                "slug": "math"
            }
        ],
        "companyNames": [
            "airbnb"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/convert-to-base-2/description"
    },
    "1385": {
        "difficulty": "MEDIUM",
        "id": 1385,
        "questionFrontendId": "2189",
        "title": "Number of Ways to Build House of Cards",
        "titleSlug": "number-of-ways-to-build-house-of-cards",
        "topicTags": [
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            }
        ],
        "companyNames": [
            "airbnb"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/number-of-ways-to-build-house-of-cards/description"
    },
    "1409": {
        "difficulty": "HARD",
        "id": 1409,
        "questionFrontendId": "1284",
        "title": "Minimum Number of Flips to Convert Binary Matrix to Zero Matrix",
        "titleSlug": "minimum-number-of-flips-to-convert-binary-matrix-to-zero-matrix",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Bit Manipulation",
                "slug": "bit-manipulation"
            },
            {
                "name": "Breadth-First Search",
                "slug": "breadth-first-search"
            },
            {
                "name": "Matrix",
                "slug": "matrix"
            }
        ],
        "companyNames": [
            "airbnb",
            "google"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/minimum-number-of-flips-to-convert-binary-matrix-to-zero-matrix/description"
    },
    "1424": {
        "difficulty": "HARD",
        "id": 1424,
        "questionFrontendId": "1298",
        "title": "Maximum Candies You Can Get from Boxes",
        "titleSlug": "maximum-candies-you-can-get-from-boxes",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Breadth-First Search",
                "slug": "breadth-first-search"
            },
            {
                "name": "Graph",
                "slug": "graph"
            }
        ],
        "companyNames": [
            "airbnb"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/maximum-candies-you-can-get-from-boxes/description"
    },
    "1697": {
        "difficulty": "MEDIUM",
        "id": 1697,
        "questionFrontendId": "1554",
        "title": "Strings Differ by One Character",
        "titleSlug": "strings-differ-by-one-character",
        "topicTags": [
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Rolling Hash",
                "slug": "rolling-hash"
            },
            {
                "name": "Hash Function",
                "slug": "hash-function"
            }
        ],
        "companyNames": [
            "airbnb",
            "google"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/strings-differ-by-one-character/description"
    },
    "3356": {
        "difficulty": "MEDIUM",
        "id": 3356,
        "questionFrontendId": "3076",
        "title": "Shortest Uncommon Substring in an Array",
        "titleSlug": "shortest-uncommon-substring-in-an-array",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Trie",
                "slug": "trie"
            }
        ],
        "companyNames": [
            "airbnb"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/shortest-uncommon-substring-in-an-array/description"
    },
    "1927": {
        "difficulty": "EASY",
        "id": 1927,
        "questionFrontendId": "1800",
        "title": "Maximum Ascending Subarray Sum",
        "titleSlug": "maximum-ascending-subarray-sum",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            }
        ],
        "companyNames": [
            "tcs"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/maximum-ascending-subarray-sum/description"
    },
    "2608": {
        "difficulty": "EASY",
        "id": 2608,
        "questionFrontendId": "2520",
        "title": "Count the Digits That Divide a Number",
        "titleSlug": "count-the-digits-that-divide-a-number",
        "topicTags": [
            {
                "name": "Math",
                "slug": "math"
            }
        ],
        "companyNames": [
            "tcs",
            "google",
            "amazon"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/count-the-digits-that-divide-a-number/description"
    },
    "1871": {
        "difficulty": "HARD",
        "id": 1871,
        "questionFrontendId": "1745",
        "title": "Palindrome Partitioning IV",
        "titleSlug": "palindrome-partitioning-iv",
        "topicTags": [
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            }
        ],
        "companyNames": [
            "tcs"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/palindrome-partitioning-iv/description"
    },
    "2575": {
        "difficulty": "EASY",
        "id": 2575,
        "questionFrontendId": "2481",
        "title": "Minimum Cuts to Divide a Circle",
        "titleSlug": "minimum-cuts-to-divide-a-circle",
        "topicTags": [
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Geometry",
                "slug": "geometry"
            }
        ],
        "companyNames": [
            "tcs"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/minimum-cuts-to-divide-a-circle/description"
    },
    "3331": {
        "difficulty": "EASY",
        "id": 3331,
        "questionFrontendId": "3065",
        "title": "Minimum Operations to Exceed Threshold Value I",
        "titleSlug": "minimum-operations-to-exceed-threshold-value-i",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            }
        ],
        "companyNames": [
            "tcs"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/minimum-operations-to-exceed-threshold-value-i/description"
    },
    "3332": {
        "difficulty": "MEDIUM",
        "id": 3332,
        "questionFrontendId": "3066",
        "title": "Minimum Operations to Exceed Threshold Value II",
        "titleSlug": "minimum-operations-to-exceed-threshold-value-ii",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Heap (Priority Queue)",
                "slug": "heap-priority-queue"
            },
            {
                "name": "Simulation",
                "slug": "simulation"
            }
        ],
        "companyNames": [
            "tcs"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/minimum-operations-to-exceed-threshold-value-ii/description"
    },
    "934": {
        "difficulty": "MEDIUM",
        "id": 934,
        "questionFrontendId": "898",
        "title": "Bitwise ORs of Subarrays",
        "titleSlug": "bitwise-ors-of-subarrays",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Bit Manipulation",
                "slug": "bit-manipulation"
            }
        ],
        "companyNames": [
            "tcs"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/bitwise-ors-of-subarrays/description"
    },
    "2454": {
        "difficulty": "EASY",
        "id": 2454,
        "questionFrontendId": "2373",
        "title": "Largest Local Values in a Matrix",
        "titleSlug": "largest-local-values-in-a-matrix",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Matrix",
                "slug": "matrix"
            }
        ],
        "companyNames": [
            "tcs",
            "google",
            "amazon"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/largest-local-values-in-a-matrix/description"
    },
    "1325": {
        "difficulty": "MEDIUM",
        "id": 1325,
        "questionFrontendId": "1514",
        "title": "Path with Maximum Probability",
        "titleSlug": "path-with-maximum-probability",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Graph",
                "slug": "graph"
            },
            {
                "name": "Heap (Priority Queue)",
                "slug": "heap-priority-queue"
            },
            {
                "name": "Shortest Path",
                "slug": "shortest-path"
            }
        ],
        "companyNames": [
            "tcs",
            "google",
            "amazon"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/path-with-maximum-probability/description"
    },
    "3476": {
        "difficulty": "EASY",
        "id": 3476,
        "questionFrontendId": "3190",
        "title": "Find Minimum Operations to Make All Elements Divisible by Three",
        "titleSlug": "find-minimum-operations-to-make-all-elements-divisible-by-three",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Math",
                "slug": "math"
            }
        ],
        "companyNames": [
            "tcs"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/find-minimum-operations-to-make-all-elements-divisible-by-three/description"
    },
    "3220": {
        "difficulty": "EASY",
        "id": 3220,
        "questionFrontendId": "2960",
        "title": "Count Tested Devices After Test Operations",
        "titleSlug": "count-tested-devices-after-test-operations",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Simulation",
                "slug": "simulation"
            }
        ],
        "companyNames": [
            "accenture"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/count-tested-devices-after-test-operations/description"
    },
    "3311": {
        "difficulty": "EASY",
        "id": 3311,
        "questionFrontendId": "3028",
        "title": "Ant on the Boundary",
        "titleSlug": "ant-on-the-boundary",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Simulation",
                "slug": "simulation"
            },
            {
                "name": "Prefix Sum",
                "slug": "prefix-sum"
            }
        ],
        "companyNames": [
            "accenture"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/ant-on-the-boundary/description"
    },
    "2288": {
        "difficulty": "EASY",
        "id": 2288,
        "questionFrontendId": "2169",
        "title": "Count Operations to Obtain Zero",
        "titleSlug": "count-operations-to-obtain-zero",
        "topicTags": [
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Simulation",
                "slug": "simulation"
            }
        ],
        "companyNames": [
            "accenture"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/count-operations-to-obtain-zero/description"
    },
    "2391": {
        "difficulty": "EASY",
        "id": 2391,
        "questionFrontendId": "2299",
        "title": "Strong Password Checker II",
        "titleSlug": "strong-password-checker-ii",
        "topicTags": [
            {
                "name": "String",
                "slug": "string"
            }
        ],
        "companyNames": [
            "accenture"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/strong-password-checker-ii/description"
    },
    "1915": {
        "difficulty": "EASY",
        "id": 1915,
        "questionFrontendId": "1790",
        "title": "Check if One String Swap Can Make Strings Equal",
        "titleSlug": "check-if-one-string-swap-can-make-strings-equal",
        "topicTags": [
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Counting",
                "slug": "counting"
            }
        ],
        "companyNames": [
            "doordash",
            "amazon"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/check-if-one-string-swap-can-make-strings-equal/description"
    },
    "1888": {
        "difficulty": "EASY",
        "id": 1888,
        "questionFrontendId": "1779",
        "title": "Find Nearest Point That Has the Same X or Y Coordinate",
        "titleSlug": "find-nearest-point-that-has-the-same-x-or-y-coordinate",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            }
        ],
        "companyNames": [
            "doordash",
            "amazon"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/find-nearest-point-that-has-the-same-x-or-y-coordinate/description"
    },
    "1291": {
        "difficulty": "EASY",
        "id": 1291,
        "questionFrontendId": "1173",
        "title": "Immediate Food Delivery I",
        "titleSlug": "immediate-food-delivery-i",
        "topicTags": [
            {
                "name": "Database",
                "slug": "database"
            }
        ],
        "companyNames": [
            "doordash"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/immediate-food-delivery-i/description"
    },
    "296": {
        "difficulty": "HARD",
        "id": 296,
        "questionFrontendId": "296",
        "title": "Best Meeting Point",
        "titleSlug": "best-meeting-point",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            },
            {
                "name": "Matrix",
                "slug": "matrix"
            }
        ],
        "companyNames": [
            "doordash",
            "amazon"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/best-meeting-point/description"
    },
    "2175": {
        "difficulty": "MEDIUM",
        "id": 2175,
        "questionFrontendId": "2049",
        "title": "Count Nodes With the Highest Score",
        "titleSlug": "count-nodes-with-the-highest-score",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Tree",
                "slug": "tree"
            },
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Binary Tree",
                "slug": "binary-tree"
            }
        ],
        "companyNames": [
            "doordash"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/count-nodes-with-the-highest-score/description"
    },
    "2189": {
        "difficulty": "HARD",
        "id": 2189,
        "questionFrontendId": "2065",
        "title": "Maximum Path Quality of a Graph",
        "titleSlug": "maximum-path-quality-of-a-graph",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Backtracking",
                "slug": "backtracking"
            },
            {
                "name": "Graph",
                "slug": "graph"
            }
        ],
        "companyNames": [
            "doordash",
            "amazon"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/maximum-path-quality-of-a-graph/description"
    },
    "1499": {
        "difficulty": "HARD",
        "id": 1499,
        "questionFrontendId": "1383",
        "title": "Maximum Performance of a Team",
        "titleSlug": "maximum-performance-of-a-team",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            },
            {
                "name": "Heap (Priority Queue)",
                "slug": "heap-priority-queue"
            }
        ],
        "companyNames": [
            "doordash",
            "google",
            "amazon"
        ],
        "frequencyCount": 3,
        "url": "https://leetcode.com/problems/maximum-performance-of-a-team/description"
    },
    "1665": {
        "difficulty": "MEDIUM",
        "id": 1665,
        "questionFrontendId": "1522",
        "title": "Diameter of N-Ary Tree",
        "titleSlug": "diameter-of-n-ary-tree",
        "topicTags": [
            {
                "name": "Tree",
                "slug": "tree"
            },
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            }
        ],
        "companyNames": [
            "doordash"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/diameter-of-n-ary-tree/description"
    },
    "2292": {
        "difficulty": "EASY",
        "id": 2292,
        "questionFrontendId": "2185",
        "title": "Counting Words With a Given Prefix",
        "titleSlug": "counting-words-with-a-given-prefix",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "String Matching",
                "slug": "string-matching"
            }
        ],
        "companyNames": [
            "doordash",
            "google"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/counting-words-with-a-given-prefix/description"
    },
    "2173": {
        "difficulty": "EASY",
        "id": 2173,
        "questionFrontendId": "2047",
        "title": "Number of Valid Words in a Sentence",
        "titleSlug": "number-of-valid-words-in-a-sentence",
        "topicTags": [
            {
                "name": "String",
                "slug": "string"
            }
        ],
        "companyNames": [
            "cisco"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/number-of-valid-words-in-a-sentence/description"
    },
    "1910": {
        "difficulty": "EASY",
        "id": 1910,
        "questionFrontendId": "1784",
        "title": "Check if Binary String Has at Most One Segment of Ones",
        "titleSlug": "check-if-binary-string-has-at-most-one-segment-of-ones",
        "topicTags": [
            {
                "name": "String",
                "slug": "string"
            }
        ],
        "companyNames": [
            "cisco"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/check-if-binary-string-has-at-most-one-segment-of-ones/description"
    },
    "2202": {
        "difficulty": "HARD",
        "id": 2202,
        "questionFrontendId": "2081",
        "title": "Sum of k-Mirror Numbers",
        "titleSlug": "sum-of-k-mirror-numbers",
        "topicTags": [
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Enumeration",
                "slug": "enumeration"
            }
        ],
        "companyNames": [
            "cisco"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/sum-of-k-mirror-numbers/description"
    },
    "2209": {
        "difficulty": "MEDIUM",
        "id": 2209,
        "questionFrontendId": "2067",
        "title": "Number of Equal Count Substrings",
        "titleSlug": "number-of-equal-count-substrings",
        "topicTags": [
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Counting",
                "slug": "counting"
            },
            {
                "name": "Prefix Sum",
                "slug": "prefix-sum"
            }
        ],
        "companyNames": [
            "cisco"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/number-of-equal-count-substrings/description"
    },
    "3325": {
        "difficulty": "MEDIUM",
        "id": 3325,
        "questionFrontendId": "3047",
        "title": "Find the Largest Area of Square Inside Two Rectangles",
        "titleSlug": "find-the-largest-area-of-square-inside-two-rectangles",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Geometry",
                "slug": "geometry"
            }
        ],
        "companyNames": [
            "cisco",
            "google"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/find-the-largest-area-of-square-inside-two-rectangles/description"
    },
    "2545": {
        "difficulty": "HARD",
        "id": 2545,
        "questionFrontendId": "2458",
        "title": "Height of Binary Tree After Subtree Removal Queries",
        "titleSlug": "height-of-binary-tree-after-subtree-removal-queries",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Tree",
                "slug": "tree"
            },
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Breadth-First Search",
                "slug": "breadth-first-search"
            },
            {
                "name": "Binary Tree",
                "slug": "binary-tree"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/height-of-binary-tree-after-subtree-removal-queries/description"
    },
    "1953": {
        "difficulty": "HARD",
        "id": 1953,
        "questionFrontendId": "1825",
        "title": "Finding MK Average",
        "titleSlug": "finding-mk-average",
        "topicTags": [
            {
                "name": "Design",
                "slug": "design"
            },
            {
                "name": "Queue",
                "slug": "queue"
            },
            {
                "name": "Heap (Priority Queue)",
                "slug": "heap-priority-queue"
            },
            {
                "name": "Data Stream",
                "slug": "data-stream"
            },
            {
                "name": "Ordered Set",
                "slug": "ordered-set"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/finding-mk-average/description"
    },
    "1085": {
        "difficulty": "MEDIUM",
        "id": 1085,
        "questionFrontendId": "1101",
        "title": "The Earliest Moment When Everyone Become Friends",
        "titleSlug": "the-earliest-moment-when-everyone-become-friends",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Union Find",
                "slug": "union-find"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ],
        "companyNames": [
            "google",
            "amazon"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/the-earliest-moment-when-everyone-become-friends/description"
    },
    "2139": {
        "difficulty": "MEDIUM",
        "id": 2139,
        "questionFrontendId": "2013",
        "title": "Detect Squares",
        "titleSlug": "detect-squares",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Design",
                "slug": "design"
            },
            {
                "name": "Counting",
                "slug": "counting"
            }
        ],
        "companyNames": [
            "google",
            "amazon"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/detect-squares/description"
    },
    "1017": {
        "difficulty": "HARD",
        "id": 1017,
        "questionFrontendId": "975",
        "title": "Odd Even Jump",
        "titleSlug": "odd-even-jump",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Stack",
                "slug": "stack"
            },
            {
                "name": "Monotonic Stack",
                "slug": "monotonic-stack"
            },
            {
                "name": "Ordered Set",
                "slug": "ordered-set"
            }
        ],
        "companyNames": [
            "google",
            "amazon"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/odd-even-jump/description"
    },
    "346": {
        "difficulty": "EASY",
        "id": 346,
        "questionFrontendId": "346",
        "title": "Moving Average from Data Stream",
        "titleSlug": "moving-average-from-data-stream",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Design",
                "slug": "design"
            },
            {
                "name": "Queue",
                "slug": "queue"
            },
            {
                "name": "Data Stream",
                "slug": "data-stream"
            }
        ],
        "companyNames": [
            "google",
            "amazon"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/moving-average-from-data-stream/description"
    },
    "2161": {
        "difficulty": "MEDIUM",
        "id": 2161,
        "questionFrontendId": "2034",
        "title": "Stock Price Fluctuation ",
        "titleSlug": "stock-price-fluctuation",
        "topicTags": [
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Design",
                "slug": "design"
            },
            {
                "name": "Heap (Priority Queue)",
                "slug": "heap-priority-queue"
            },
            {
                "name": "Data Stream",
                "slug": "data-stream"
            },
            {
                "name": "Ordered Set",
                "slug": "ordered-set"
            }
        ],
        "companyNames": [
            "google",
            "amazon"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/stock-price-fluctuation/description"
    },
    "2818": {
        "difficulty": "HARD",
        "id": 2818,
        "questionFrontendId": "2713",
        "title": "Maximum Strictly Increasing Cells in a Matrix",
        "titleSlug": "maximum-strictly-increasing-cells-in-a-matrix",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Binary Search",
                "slug": "binary-search"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Memoization",
                "slug": "memoization"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            },
            {
                "name": "Matrix",
                "slug": "matrix"
            },
            {
                "name": "Ordered Set",
                "slug": "ordered-set"
            }
        ],
        "companyNames": [
            "google",
            "amazon"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/maximum-strictly-increasing-cells-in-a-matrix/description"
    },
    "1003": {
        "difficulty": "MEDIUM",
        "id": 1003,
        "questionFrontendId": "963",
        "title": "Minimum Area Rectangle II",
        "titleSlug": "minimum-area-rectangle-ii",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Geometry",
                "slug": "geometry"
            }
        ],
        "companyNames": [
            "google",
            "amazon"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/minimum-area-rectangle-ii/description"
    },
    "2528": {
        "difficulty": "EASY",
        "id": 2528,
        "questionFrontendId": "2437",
        "title": "Number of Valid Clock Times",
        "titleSlug": "number-of-valid-clock-times",
        "topicTags": [
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Enumeration",
                "slug": "enumeration"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/number-of-valid-clock-times/description"
    },
    "936": {
        "difficulty": "MEDIUM",
        "id": 936,
        "questionFrontendId": "900",
        "title": "RLE Iterator",
        "titleSlug": "rle-iterator",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Design",
                "slug": "design"
            },
            {
                "name": "Counting",
                "slug": "counting"
            },
            {
                "name": "Iterator",
                "slug": "iterator"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/rle-iterator/description"
    },
    "2135": {
        "difficulty": "HARD",
        "id": 2135,
        "questionFrontendId": "2025",
        "title": "Maximum Number of Ways to Partition an Array",
        "titleSlug": "maximum-number-of-ways-to-partition-an-array",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Counting",
                "slug": "counting"
            },
            {
                "name": "Enumeration",
                "slug": "enumeration"
            },
            {
                "name": "Prefix Sum",
                "slug": "prefix-sum"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/maximum-number-of-ways-to-partition-an-array/description"
    },
    "2403": {
        "difficulty": "MEDIUM",
        "id": 2403,
        "questionFrontendId": "2316",
        "title": "Count Unreachable Pairs of Nodes in an Undirected Graph",
        "titleSlug": "count-unreachable-pairs-of-nodes-in-an-undirected-graph",
        "topicTags": [
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Breadth-First Search",
                "slug": "breadth-first-search"
            },
            {
                "name": "Union Find",
                "slug": "union-find"
            },
            {
                "name": "Graph",
                "slug": "graph"
            }
        ],
        "companyNames": [
            "google",
            "amazon"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/count-unreachable-pairs-of-nodes-in-an-undirected-graph/description"
    },
    "1633": {
        "difficulty": "HARD",
        "id": 1633,
        "questionFrontendId": "1526",
        "title": "Minimum Number of Increments on Subarrays to Form a Target Array",
        "titleSlug": "minimum-number-of-increments-on-subarrays-to-form-a-target-array",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Stack",
                "slug": "stack"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            },
            {
                "name": "Monotonic Stack",
                "slug": "monotonic-stack"
            }
        ],
        "companyNames": [
            "google",
            "amazon"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/minimum-number-of-increments-on-subarrays-to-form-a-target-array/description"
    },
    "2146": {
        "difficulty": "MEDIUM",
        "id": 2146,
        "questionFrontendId": "2018",
        "title": "Check if Word Can Be Placed In Crossword",
        "titleSlug": "check-if-word-can-be-placed-in-crossword",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Matrix",
                "slug": "matrix"
            },
            {
                "name": "Enumeration",
                "slug": "enumeration"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/check-if-word-can-be-placed-in-crossword/description"
    },
    "1485": {
        "difficulty": "HARD",
        "id": 1485,
        "questionFrontendId": "1368",
        "title": "Minimum Cost to Make at Least One Valid Path in a Grid",
        "titleSlug": "minimum-cost-to-make-at-least-one-valid-path-in-a-grid",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Breadth-First Search",
                "slug": "breadth-first-search"
            },
            {
                "name": "Graph",
                "slug": "graph"
            },
            {
                "name": "Heap (Priority Queue)",
                "slug": "heap-priority-queue"
            },
            {
                "name": "Matrix",
                "slug": "matrix"
            },
            {
                "name": "Shortest Path",
                "slug": "shortest-path"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/minimum-cost-to-make-at-least-one-valid-path-in-a-grid/description"
    },
    "3057": {
        "difficulty": "HARD",
        "id": 3057,
        "questionFrontendId": "2842",
        "title": "Count K-Subsequences of a String With Maximum Beauty",
        "titleSlug": "count-k-subsequences-of-a-string-with-maximum-beauty",
        "topicTags": [
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            },
            {
                "name": "Combinatorics",
                "slug": "combinatorics"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/count-k-subsequences-of-a-string-with-maximum-beauty/description"
    },
    "685": {
        "difficulty": "HARD",
        "id": 685,
        "questionFrontendId": "685",
        "title": "Redundant Connection II",
        "titleSlug": "redundant-connection-ii",
        "topicTags": [
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Breadth-First Search",
                "slug": "breadth-first-search"
            },
            {
                "name": "Union Find",
                "slug": "union-find"
            },
            {
                "name": "Graph",
                "slug": "graph"
            }
        ],
        "companyNames": [
            "google",
            "amazon"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/redundant-connection-ii/description"
    },
    "1331": {
        "difficulty": "MEDIUM",
        "id": 1331,
        "questionFrontendId": "1219",
        "title": "Path with Maximum Gold",
        "titleSlug": "path-with-maximum-gold",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Backtracking",
                "slug": "backtracking"
            },
            {
                "name": "Matrix",
                "slug": "matrix"
            }
        ],
        "companyNames": [
            "google",
            "amazon"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/path-with-maximum-gold/description"
    },
    "1493": {
        "difficulty": "HARD",
        "id": 1493,
        "questionFrontendId": "1377",
        "title": "Frog Position After T Seconds",
        "titleSlug": "frog-position-after-t-seconds",
        "topicTags": [
            {
                "name": "Tree",
                "slug": "tree"
            },
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Breadth-First Search",
                "slug": "breadth-first-search"
            },
            {
                "name": "Graph",
                "slug": "graph"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/frog-position-after-t-seconds/description"
    },
    "1977": {
        "difficulty": "HARD",
        "id": 1977,
        "questionFrontendId": "1851",
        "title": "Minimum Interval to Include Each Query",
        "titleSlug": "minimum-interval-to-include-each-query",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Binary Search",
                "slug": "binary-search"
            },
            {
                "name": "Line Sweep",
                "slug": "line-sweep"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            },
            {
                "name": "Heap (Priority Queue)",
                "slug": "heap-priority-queue"
            }
        ],
        "companyNames": [
            "google",
            "amazon"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/minimum-interval-to-include-each-query/description"
    },
    "2521": {
        "difficulty": "HARD",
        "id": 2521,
        "questionFrontendId": "2435",
        "title": "Paths in Matrix Whose Sum Is Divisible by K",
        "titleSlug": "paths-in-matrix-whose-sum-is-divisible-by-k",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Matrix",
                "slug": "matrix"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/paths-in-matrix-whose-sum-is-divisible-by-k/description"
    },
    "1587": {
        "difficulty": "HARD",
        "id": 1587,
        "questionFrontendId": "1494",
        "title": "Parallel Courses II",
        "titleSlug": "parallel-courses-ii",
        "topicTags": [
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Bit Manipulation",
                "slug": "bit-manipulation"
            },
            {
                "name": "Graph",
                "slug": "graph"
            },
            {
                "name": "Bitmask",
                "slug": "bitmask"
            }
        ],
        "companyNames": [
            "google",
            "amazon"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/parallel-courses-ii/description"
    },
    "2291": {
        "difficulty": "HARD",
        "id": 2291,
        "questionFrontendId": "2172",
        "title": "Maximum AND Sum of Array",
        "titleSlug": "maximum-and-sum-of-array",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Bit Manipulation",
                "slug": "bit-manipulation"
            },
            {
                "name": "Bitmask",
                "slug": "bitmask"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/maximum-and-sum-of-array/description"
    },
    "2494": {
        "difficulty": "HARD",
        "id": 2494,
        "questionFrontendId": "2416",
        "title": "Sum of Prefix Scores of Strings",
        "titleSlug": "sum-of-prefix-scores-of-strings",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Trie",
                "slug": "trie"
            },
            {
                "name": "Counting",
                "slug": "counting"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/sum-of-prefix-scores-of-strings/description"
    },
    "552": {
        "difficulty": "HARD",
        "id": 552,
        "questionFrontendId": "552",
        "title": "Student Attendance Record II",
        "titleSlug": "student-attendance-record-ii",
        "topicTags": [
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/student-attendance-record-ii/description"
    },
    "681": {
        "difficulty": "MEDIUM",
        "id": 681,
        "questionFrontendId": "681",
        "title": "Next Closest Time",
        "titleSlug": "next-closest-time",
        "topicTags": [
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Backtracking",
                "slug": "backtracking"
            },
            {
                "name": "Enumeration",
                "slug": "enumeration"
            }
        ],
        "companyNames": [
            "google",
            "amazon"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/next-closest-time/description"
    },
    "1076": {
        "difficulty": "MEDIUM",
        "id": 1076,
        "questionFrontendId": "1087",
        "title": "Brace Expansion",
        "titleSlug": "brace-expansion",
        "topicTags": [
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Backtracking",
                "slug": "backtracking"
            },
            {
                "name": "Breadth-First Search",
                "slug": "breadth-first-search"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/brace-expansion/description"
    },
    "1144": {
        "difficulty": "HARD",
        "id": 1144,
        "questionFrontendId": "1168",
        "title": "Optimize Water Distribution in a Village",
        "titleSlug": "optimize-water-distribution-in-a-village",
        "topicTags": [
            {
                "name": "Union Find",
                "slug": "union-find"
            },
            {
                "name": "Graph",
                "slug": "graph"
            },
            {
                "name": "Heap (Priority Queue)",
                "slug": "heap-priority-queue"
            },
            {
                "name": "Minimum Spanning Tree",
                "slug": "minimum-spanning-tree"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/optimize-water-distribution-in-a-village/description"
    },
    "1714": {
        "difficulty": "EASY",
        "id": 1714,
        "questionFrontendId": "1592",
        "title": "Rearrange Spaces Between Words",
        "titleSlug": "rearrange-spaces-between-words",
        "topicTags": [
            {
                "name": "String",
                "slug": "string"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/rearrange-spaces-between-words/description"
    },
    "2193": {
        "difficulty": "HARD",
        "id": 2193,
        "questionFrontendId": "2088",
        "title": "Count Fertile Pyramids in a Land",
        "titleSlug": "count-fertile-pyramids-in-a-land",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Matrix",
                "slug": "matrix"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/count-fertile-pyramids-in-a-land/description"
    },
    "375": {
        "difficulty": "MEDIUM",
        "id": 375,
        "questionFrontendId": "375",
        "title": "Guess Number Higher or Lower II",
        "titleSlug": "guess-number-higher-or-lower-ii",
        "topicTags": [
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Game Theory",
                "slug": "game-theory"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/guess-number-higher-or-lower-ii/description"
    },
    "393": {
        "difficulty": "MEDIUM",
        "id": 393,
        "questionFrontendId": "393",
        "title": "UTF-8 Validation",
        "titleSlug": "utf-8-validation",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Bit Manipulation",
                "slug": "bit-manipulation"
            }
        ],
        "companyNames": [
            "google",
            "amazon"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/utf-8-validation/description"
    },
    "482": {
        "difficulty": "EASY",
        "id": 482,
        "questionFrontendId": "482",
        "title": "License Key Formatting",
        "titleSlug": "license-key-formatting",
        "topicTags": [
            {
                "name": "String",
                "slug": "string"
            }
        ],
        "companyNames": [
            "google",
            "amazon"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/license-key-formatting/description"
    },
    "754": {
        "difficulty": "HARD",
        "id": 754,
        "questionFrontendId": "753",
        "title": "Cracking the Safe",
        "titleSlug": "cracking-the-safe",
        "topicTags": [
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Graph",
                "slug": "graph"
            },
            {
                "name": "Eulerian Circuit",
                "slug": "eulerian-circuit"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/cracking-the-safe/description"
    },
    "2322": {
        "difficulty": "MEDIUM",
        "id": 2322,
        "questionFrontendId": "2184",
        "title": "Number of Ways to Build Sturdy Brick Wall",
        "titleSlug": "number-of-ways-to-build-sturdy-brick-wall",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Bit Manipulation",
                "slug": "bit-manipulation"
            },
            {
                "name": "Bitmask",
                "slug": "bitmask"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/number-of-ways-to-build-sturdy-brick-wall/description"
    },
    "3266": {
        "difficulty": "MEDIUM",
        "id": 3266,
        "questionFrontendId": "2982",
        "title": "Find Longest Special Substring That Occurs Thrice II",
        "titleSlug": "find-longest-special-substring-that-occurs-thrice-ii",
        "topicTags": [
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Binary Search",
                "slug": "binary-search"
            },
            {
                "name": "Sliding Window",
                "slug": "sliding-window"
            },
            {
                "name": "Counting",
                "slug": "counting"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/find-longest-special-substring-that-occurs-thrice-ii/description"
    },
    "3464": {
        "difficulty": "MEDIUM",
        "id": 3464,
        "questionFrontendId": "3196",
        "title": "Maximize Total Cost of Alternating Subarrays",
        "titleSlug": "maximize-total-cost-of-alternating-subarrays",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/maximize-total-cost-of-alternating-subarrays/description"
    },
    "3478": {
        "difficulty": "HARD",
        "id": 3478,
        "questionFrontendId": "3235",
        "title": "Check if the Rectangle Corner Is Reachable",
        "titleSlug": "check-if-the-rectangle-corner-is-reachable",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Breadth-First Search",
                "slug": "breadth-first-search"
            },
            {
                "name": "Union Find",
                "slug": "union-find"
            },
            {
                "name": "Geometry",
                "slug": "geometry"
            }
        ],
        "companyNames": [
            "google",
            "amazon"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/check-if-the-rectangle-corner-is-reachable/description"
    },
    "302": {
        "difficulty": "HARD",
        "id": 302,
        "questionFrontendId": "302",
        "title": "Smallest Rectangle Enclosing Black Pixels",
        "titleSlug": "smallest-rectangle-enclosing-black-pixels",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Binary Search",
                "slug": "binary-search"
            },
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Breadth-First Search",
                "slug": "breadth-first-search"
            },
            {
                "name": "Matrix",
                "slug": "matrix"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/smallest-rectangle-enclosing-black-pixels/description"
    },
    "914": {
        "difficulty": "MEDIUM",
        "id": 914,
        "questionFrontendId": "497",
        "title": "Random Point in Non-overlapping Rectangles",
        "titleSlug": "random-point-in-non-overlapping-rectangles",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Binary Search",
                "slug": "binary-search"
            },
            {
                "name": "Reservoir Sampling",
                "slug": "reservoir-sampling"
            },
            {
                "name": "Prefix Sum",
                "slug": "prefix-sum"
            },
            {
                "name": "Ordered Set",
                "slug": "ordered-set"
            },
            {
                "name": "Randomized",
                "slug": "randomized"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/random-point-in-non-overlapping-rectangles/description"
    },
    "981": {
        "difficulty": "EASY",
        "id": 981,
        "questionFrontendId": "944",
        "title": "Delete Columns to Make Sorted",
        "titleSlug": "delete-columns-to-make-sorted",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "String",
                "slug": "string"
            }
        ],
        "companyNames": [
            "google",
            "amazon"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/delete-columns-to-make-sorted/description"
    },
    "1030": {
        "difficulty": "MEDIUM",
        "id": 1030,
        "questionFrontendId": "988",
        "title": "Smallest String Starting From Leaf",
        "titleSlug": "smallest-string-starting-from-leaf",
        "topicTags": [
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Backtracking",
                "slug": "backtracking"
            },
            {
                "name": "Tree",
                "slug": "tree"
            },
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Binary Tree",
                "slug": "binary-tree"
            }
        ],
        "companyNames": [
            "google",
            "amazon"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/smallest-string-starting-from-leaf/description"
    },
    "1097": {
        "difficulty": "HARD",
        "id": 1097,
        "questionFrontendId": "1032",
        "title": "Stream of Characters",
        "titleSlug": "stream-of-characters",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Design",
                "slug": "design"
            },
            {
                "name": "Trie",
                "slug": "trie"
            },
            {
                "name": "Data Stream",
                "slug": "data-stream"
            }
        ],
        "companyNames": [
            "google",
            "amazon"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/stream-of-characters/description"
    },
    "1254": {
        "difficulty": "MEDIUM",
        "id": 1254,
        "questionFrontendId": "1302",
        "title": "Deepest Leaves Sum",
        "titleSlug": "deepest-leaves-sum",
        "topicTags": [
            {
                "name": "Tree",
                "slug": "tree"
            },
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Breadth-First Search",
                "slug": "breadth-first-search"
            },
            {
                "name": "Binary Tree",
                "slug": "binary-tree"
            }
        ],
        "companyNames": [
            "google",
            "amazon"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/deepest-leaves-sum/description"
    },
    "1632": {
        "difficulty": "MEDIUM",
        "id": 1632,
        "questionFrontendId": "1525",
        "title": "Number of Good Ways to Split a String",
        "titleSlug": "number-of-good-ways-to-split-a-string",
        "topicTags": [
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Bit Manipulation",
                "slug": "bit-manipulation"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/number-of-good-ways-to-split-a-string/description"
    },
    "1711": {
        "difficulty": "MEDIUM",
        "id": 1711,
        "questionFrontendId": "1605",
        "title": "Find Valid Matrix Given Row and Column Sums",
        "titleSlug": "find-valid-matrix-given-row-and-column-sums",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            },
            {
                "name": "Matrix",
                "slug": "matrix"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/find-valid-matrix-given-row-and-column-sums/description"
    },
    "2266": {
        "difficulty": "MEDIUM",
        "id": 2266,
        "questionFrontendId": "2162",
        "title": "Minimum Cost to Set Cooking Time",
        "titleSlug": "minimum-cost-to-set-cooking-time",
        "topicTags": [
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Enumeration",
                "slug": "enumeration"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/minimum-cost-to-set-cooking-time/description"
    },
    "2279": {
        "difficulty": "MEDIUM",
        "id": 2279,
        "questionFrontendId": "2178",
        "title": "Maximum Split of Positive Even Integers",
        "titleSlug": "maximum-split-of-positive-even-integers",
        "topicTags": [
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Backtracking",
                "slug": "backtracking"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/maximum-split-of-positive-even-integers/description"
    },
    "2295": {
        "difficulty": "HARD",
        "id": 2295,
        "questionFrontendId": "2188",
        "title": "Minimum Time to Finish the Race",
        "titleSlug": "minimum-time-to-finish-the-race",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            }
        ],
        "companyNames": [
            "google",
            "amazon"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/minimum-time-to-finish-the-race/description"
    },
    "2399": {
        "difficulty": "HARD",
        "id": 2399,
        "questionFrontendId": "2313",
        "title": "Minimum Flips in Binary Tree to Get Result",
        "titleSlug": "minimum-flips-in-binary-tree-to-get-result",
        "topicTags": [
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Tree",
                "slug": "tree"
            },
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Binary Tree",
                "slug": "binary-tree"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/minimum-flips-in-binary-tree-to-get-result/description"
    },
    "2450": {
        "difficulty": "HARD",
        "id": 2450,
        "questionFrontendId": "2366",
        "title": "Minimum Replacements to Sort the Array",
        "titleSlug": "minimum-replacements-to-sort-the-array",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            }
        ],
        "companyNames": [
            "google",
            "amazon"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/minimum-replacements-to-sort-the-array/description"
    },
    "2485": {
        "difficulty": "MEDIUM",
        "id": 2485,
        "questionFrontendId": "2345",
        "title": "Finding the Number of Visible Mountains",
        "titleSlug": "finding-the-number-of-visible-mountains",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Stack",
                "slug": "stack"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            },
            {
                "name": "Monotonic Stack",
                "slug": "monotonic-stack"
            }
        ],
        "companyNames": [
            "google",
            "amazon"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/finding-the-number-of-visible-mountains/description"
    },
    "2513": {
        "difficulty": "HARD",
        "id": 2513,
        "questionFrontendId": "2426",
        "title": "Number of Pairs Satisfying Inequality",
        "titleSlug": "number-of-pairs-satisfying-inequality",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Binary Search",
                "slug": "binary-search"
            },
            {
                "name": "Divide and Conquer",
                "slug": "divide-and-conquer"
            },
            {
                "name": "Binary Indexed Tree",
                "slug": "binary-indexed-tree"
            },
            {
                "name": "Segment Tree",
                "slug": "segment-tree"
            },
            {
                "name": "Merge Sort",
                "slug": "merge-sort"
            },
            {
                "name": "Ordered Set",
                "slug": "ordered-set"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/number-of-pairs-satisfying-inequality/description"
    },
    "2574": {
        "difficulty": "HARD",
        "id": 2574,
        "questionFrontendId": "2488",
        "title": "Count Subarrays With Median K",
        "titleSlug": "count-subarrays-with-median-k",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Prefix Sum",
                "slug": "prefix-sum"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/count-subarrays-with-median-k/description"
    },
    "293": {
        "difficulty": "EASY",
        "id": 293,
        "questionFrontendId": "293",
        "title": "Flip Game",
        "titleSlug": "flip-game",
        "topicTags": [
            {
                "name": "String",
                "slug": "string"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/flip-game/description"
    },
    "321": {
        "difficulty": "HARD",
        "id": 321,
        "questionFrontendId": "321",
        "title": "Create Maximum Number",
        "titleSlug": "create-maximum-number",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Two Pointers",
                "slug": "two-pointers"
            },
            {
                "name": "Stack",
                "slug": "stack"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            },
            {
                "name": "Monotonic Stack",
                "slug": "monotonic-stack"
            }
        ],
        "companyNames": [
            "google",
            "amazon"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/create-maximum-number/description"
    },
    "351": {
        "difficulty": "MEDIUM",
        "id": 351,
        "questionFrontendId": "351",
        "title": "Android Unlock Patterns",
        "titleSlug": "android-unlock-patterns",
        "topicTags": [
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Backtracking",
                "slug": "backtracking"
            },
            {
                "name": "Bit Manipulation",
                "slug": "bit-manipulation"
            },
            {
                "name": "Bitmask",
                "slug": "bitmask"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/android-unlock-patterns/description"
    },
    "379": {
        "difficulty": "MEDIUM",
        "id": 379,
        "questionFrontendId": "379",
        "title": "Design Phone Directory",
        "titleSlug": "design-phone-directory",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Linked List",
                "slug": "linked-list"
            },
            {
                "name": "Design",
                "slug": "design"
            },
            {
                "name": "Queue",
                "slug": "queue"
            }
        ],
        "companyNames": [
            "google",
            "amazon"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/design-phone-directory/description"
    },
    "444": {
        "difficulty": "MEDIUM",
        "id": 444,
        "questionFrontendId": "444",
        "title": "Sequence Reconstruction",
        "titleSlug": "sequence-reconstruction",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Graph",
                "slug": "graph"
            },
            {
                "name": "Topological Sort",
                "slug": "topological-sort"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/sequence-reconstruction/description"
    },
    "487": {
        "difficulty": "MEDIUM",
        "id": 487,
        "questionFrontendId": "487",
        "title": "Max Consecutive Ones II",
        "titleSlug": "max-consecutive-ones-ii",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Sliding Window",
                "slug": "sliding-window"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/max-consecutive-ones-ii/description"
    },
    "522": {
        "difficulty": "MEDIUM",
        "id": 522,
        "questionFrontendId": "522",
        "title": "Longest Uncommon Subsequence II",
        "titleSlug": "longest-uncommon-subsequence-ii",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Two Pointers",
                "slug": "two-pointers"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/longest-uncommon-subsequence-ii/description"
    },
    "549": {
        "difficulty": "MEDIUM",
        "id": 549,
        "questionFrontendId": "549",
        "title": "Binary Tree Longest Consecutive Sequence II",
        "titleSlug": "binary-tree-longest-consecutive-sequence-ii",
        "topicTags": [
            {
                "name": "Tree",
                "slug": "tree"
            },
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Binary Tree",
                "slug": "binary-tree"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/binary-tree-longest-consecutive-sequence-ii/description"
    },
    "604": {
        "difficulty": "EASY",
        "id": 604,
        "questionFrontendId": "604",
        "title": "Design Compressed String Iterator",
        "titleSlug": "design-compressed-string-iterator",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Design",
                "slug": "design"
            },
            {
                "name": "Iterator",
                "slug": "iterator"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/design-compressed-string-iterator/description"
    },
    "659": {
        "difficulty": "MEDIUM",
        "id": 659,
        "questionFrontendId": "659",
        "title": "Split Array into Consecutive Subsequences",
        "titleSlug": "split-array-into-consecutive-subsequences",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            },
            {
                "name": "Heap (Priority Queue)",
                "slug": "heap-priority-queue"
            }
        ],
        "companyNames": [
            "google",
            "amazon"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/split-array-into-consecutive-subsequences/description"
    },
    "667": {
        "difficulty": "MEDIUM",
        "id": 667,
        "questionFrontendId": "667",
        "title": "Beautiful Arrangement II",
        "titleSlug": "beautiful-arrangement-ii",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Math",
                "slug": "math"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/beautiful-arrangement-ii/description"
    },
    "770": {
        "difficulty": "HARD",
        "id": 770,
        "questionFrontendId": "765",
        "title": "Couples Holding Hands",
        "titleSlug": "couples-holding-hands",
        "topicTags": [
            {
                "name": "Greedy",
                "slug": "greedy"
            },
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Breadth-First Search",
                "slug": "breadth-first-search"
            },
            {
                "name": "Union Find",
                "slug": "union-find"
            },
            {
                "name": "Graph",
                "slug": "graph"
            }
        ],
        "companyNames": [
            "google",
            "amazon"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/couples-holding-hands/description"
    },
    "799": {
        "difficulty": "EASY",
        "id": 799,
        "questionFrontendId": "783",
        "title": "Minimum Distance Between BST Nodes",
        "titleSlug": "minimum-distance-between-bst-nodes",
        "topicTags": [
            {
                "name": "Tree",
                "slug": "tree"
            },
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Breadth-First Search",
                "slug": "breadth-first-search"
            },
            {
                "name": "Binary Search Tree",
                "slug": "binary-search-tree"
            },
            {
                "name": "Binary Tree",
                "slug": "binary-tree"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/minimum-distance-between-bst-nodes/description"
    },
    "989": {
        "difficulty": "HARD",
        "id": 989,
        "questionFrontendId": "952",
        "title": "Largest Component Size by Common Factor",
        "titleSlug": "largest-component-size-by-common-factor",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Union Find",
                "slug": "union-find"
            },
            {
                "name": "Number Theory",
                "slug": "number-theory"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/largest-component-size-by-common-factor/description"
    },
    "1042": {
        "difficulty": "HARD",
        "id": 1042,
        "questionFrontendId": "1000",
        "title": "Minimum Cost to Merge Stones",
        "titleSlug": "minimum-cost-to-merge-stones",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Prefix Sum",
                "slug": "prefix-sum"
            }
        ],
        "companyNames": [
            "google",
            "amazon"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/minimum-cost-to-merge-stones/description"
    },
    "1069": {
        "difficulty": "EASY",
        "id": 1069,
        "questionFrontendId": "1056",
        "title": "Confusing Number",
        "titleSlug": "confusing-number",
        "topicTags": [
            {
                "name": "Math",
                "slug": "math"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/confusing-number/description"
    },
    "1248": {
        "difficulty": "MEDIUM",
        "id": 1248,
        "questionFrontendId": "1145",
        "title": "Binary Tree Coloring Game",
        "titleSlug": "binary-tree-coloring-game",
        "topicTags": [
            {
                "name": "Tree",
                "slug": "tree"
            },
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Binary Tree",
                "slug": "binary-tree"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/binary-tree-coloring-game/description"
    },
    "1251": {
        "difficulty": "HARD",
        "id": 1251,
        "questionFrontendId": "1147",
        "title": "Longest Chunked Palindrome Decomposition",
        "titleSlug": "longest-chunked-palindrome-decomposition",
        "topicTags": [
            {
                "name": "Two Pointers",
                "slug": "two-pointers"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            },
            {
                "name": "Rolling Hash",
                "slug": "rolling-hash"
            },
            {
                "name": "Hash Function",
                "slug": "hash-function"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/longest-chunked-palindrome-decomposition/description"
    },
    "1350": {
        "difficulty": "MEDIUM",
        "id": 1350,
        "questionFrontendId": "1233",
        "title": "Remove Sub-Folders from the Filesystem",
        "titleSlug": "remove-sub-folders-from-the-filesystem",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Trie",
                "slug": "trie"
            }
        ],
        "companyNames": [
            "google",
            "amazon"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/remove-sub-folders-from-the-filesystem/description"
    },
    "1358": {
        "difficulty": "MEDIUM",
        "id": 1358,
        "questionFrontendId": "1237",
        "title": "Find Positive Integer Solution for a Given Equation",
        "titleSlug": "find-positive-integer-solution-for-a-given-equation",
        "topicTags": [
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Two Pointers",
                "slug": "two-pointers"
            },
            {
                "name": "Binary Search",
                "slug": "binary-search"
            },
            {
                "name": "Interactive",
                "slug": "interactive"
            }
        ],
        "companyNames": [
            "google",
            "amazon"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/find-positive-integer-solution-for-a-given-equation/description"
    },
    "1361": {
        "difficulty": "HARD",
        "id": 1361,
        "questionFrontendId": "1240",
        "title": "Tiling a Rectangle with the Fewest Squares",
        "titleSlug": "tiling-a-rectangle-with-the-fewest-squares",
        "topicTags": [
            {
                "name": "Backtracking",
                "slug": "backtracking"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/tiling-a-rectangle-with-the-fewest-squares/description"
    },
    "1501": {
        "difficulty": "MEDIUM",
        "id": 1501,
        "questionFrontendId": "1401",
        "title": "Circle and Rectangle Overlapping",
        "titleSlug": "circle-and-rectangle-overlapping",
        "topicTags": [
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Geometry",
                "slug": "geometry"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/circle-and-rectangle-overlapping/description"
    },
    "1612": {
        "difficulty": "MEDIUM",
        "id": 1612,
        "questionFrontendId": "1488",
        "title": "Avoid Flood in The City",
        "titleSlug": "avoid-flood-in-the-city",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Binary Search",
                "slug": "binary-search"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            },
            {
                "name": "Heap (Priority Queue)",
                "slug": "heap-priority-queue"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/avoid-flood-in-the-city/description"
    },
    "1622": {
        "difficulty": "HARD",
        "id": 1622,
        "questionFrontendId": "1499",
        "title": "Max Value of Equation",
        "titleSlug": "max-value-of-equation",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Queue",
                "slug": "queue"
            },
            {
                "name": "Sliding Window",
                "slug": "sliding-window"
            },
            {
                "name": "Heap (Priority Queue)",
                "slug": "heap-priority-queue"
            },
            {
                "name": "Monotonic Queue",
                "slug": "monotonic-queue"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/max-value-of-equation/description"
    },
    "1627": {
        "difficulty": "MEDIUM",
        "id": 1627,
        "questionFrontendId": "1503",
        "title": "Last Moment Before All Ants Fall Out of a Plank",
        "titleSlug": "last-moment-before-all-ants-fall-out-of-a-plank",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Brainteaser",
                "slug": "brainteaser"
            },
            {
                "name": "Simulation",
                "slug": "simulation"
            }
        ],
        "companyNames": [
            "google",
            "amazon"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/last-moment-before-all-ants-fall-out-of-a-plank/description"
    },
    "1692": {
        "difficulty": "HARD",
        "id": 1692,
        "questionFrontendId": "1569",
        "title": "Number of Ways to Reorder Array to Get Same BST",
        "titleSlug": "number-of-ways-to-reorder-array-to-get-same-bst",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Divide and Conquer",
                "slug": "divide-and-conquer"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Tree",
                "slug": "tree"
            },
            {
                "name": "Union Find",
                "slug": "union-find"
            },
            {
                "name": "Binary Search Tree",
                "slug": "binary-search-tree"
            },
            {
                "name": "Memoization",
                "slug": "memoization"
            },
            {
                "name": "Combinatorics",
                "slug": "combinatorics"
            },
            {
                "name": "Binary Tree",
                "slug": "binary-tree"
            }
        ],
        "companyNames": [
            "google",
            "amazon"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/number-of-ways-to-reorder-array-to-get-same-bst/description"
    },
    "1739": {
        "difficulty": "MEDIUM",
        "id": 1739,
        "questionFrontendId": "1616",
        "title": "Split Two Strings to Make Palindrome",
        "titleSlug": "split-two-strings-to-make-palindrome",
        "topicTags": [
            {
                "name": "Two Pointers",
                "slug": "two-pointers"
            },
            {
                "name": "String",
                "slug": "string"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/split-two-strings-to-make-palindrome/description"
    },
    "1826": {
        "difficulty": "HARD",
        "id": 1826,
        "questionFrontendId": "1707",
        "title": "Maximum XOR With an Element From Array",
        "titleSlug": "maximum-xor-with-an-element-from-array",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Bit Manipulation",
                "slug": "bit-manipulation"
            },
            {
                "name": "Trie",
                "slug": "trie"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/maximum-xor-with-an-element-from-array/description"
    },
    "1902": {
        "difficulty": "HARD",
        "id": 1902,
        "questionFrontendId": "1776",
        "title": "Car Fleet II",
        "titleSlug": "car-fleet-ii",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Stack",
                "slug": "stack"
            },
            {
                "name": "Heap (Priority Queue)",
                "slug": "heap-priority-queue"
            },
            {
                "name": "Monotonic Stack",
                "slug": "monotonic-stack"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/car-fleet-ii/description"
    },
    "1954": {
        "difficulty": "EASY",
        "id": 1954,
        "questionFrontendId": "1844",
        "title": "Replace All Digits with Characters",
        "titleSlug": "replace-all-digits-with-characters",
        "topicTags": [
            {
                "name": "String",
                "slug": "string"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/replace-all-digits-with-characters/description"
    },
    "2181": {
        "difficulty": "EASY",
        "id": 2181,
        "questionFrontendId": "2057",
        "title": "Smallest Index With Equal Value",
        "titleSlug": "smallest-index-with-equal-value",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/smallest-index-with-equal-value/description"
    },
    "2353": {
        "difficulty": "HARD",
        "id": 2353,
        "questionFrontendId": "2242",
        "title": "Maximum Score of a Node Sequence",
        "titleSlug": "maximum-score-of-a-node-sequence",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Graph",
                "slug": "graph"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            },
            {
                "name": "Enumeration",
                "slug": "enumeration"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/maximum-score-of-a-node-sequence/description"
    },
    "2378": {
        "difficulty": "MEDIUM",
        "id": 2378,
        "questionFrontendId": "2284",
        "title": "Sender With Largest Word Count",
        "titleSlug": "sender-with-largest-word-count",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Counting",
                "slug": "counting"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/sender-with-largest-word-count/description"
    },
    "2394": {
        "difficulty": "HARD",
        "id": 2394,
        "questionFrontendId": "2302",
        "title": "Count Subarrays With Score Less Than K",
        "titleSlug": "count-subarrays-with-score-less-than-k",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Binary Search",
                "slug": "binary-search"
            },
            {
                "name": "Sliding Window",
                "slug": "sliding-window"
            },
            {
                "name": "Prefix Sum",
                "slug": "prefix-sum"
            }
        ],
        "companyNames": [
            "google",
            "amazon"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/count-subarrays-with-score-less-than-k/description"
    },
    "2434": {
        "difficulty": "MEDIUM",
        "id": 2434,
        "questionFrontendId": "2349",
        "title": "Design a Number Container System",
        "titleSlug": "design-a-number-container-system",
        "topicTags": [
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Design",
                "slug": "design"
            },
            {
                "name": "Heap (Priority Queue)",
                "slug": "heap-priority-queue"
            },
            {
                "name": "Ordered Set",
                "slug": "ordered-set"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/design-a-number-container-system/description"
    },
    "3212": {
        "difficulty": "HARD",
        "id": 3212,
        "questionFrontendId": "2963",
        "title": "Count the Number of Good Partitions",
        "titleSlug": "count-the-number-of-good-partitions",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Combinatorics",
                "slug": "combinatorics"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/count-the-number-of-good-partitions/description"
    },
    "3229": {
        "difficulty": "MEDIUM",
        "id": 3229,
        "questionFrontendId": "2967",
        "title": "Minimum Cost to Make Array Equalindromic",
        "titleSlug": "minimum-cost-to-make-array-equalindromic",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/minimum-cost-to-make-array-equalindromic/description"
    },
    "3298": {
        "difficulty": "HARD",
        "id": 3298,
        "questionFrontendId": "3041",
        "title": "Maximize Consecutive Elements in an Array After Modification",
        "titleSlug": "maximize-consecutive-elements-in-an-array-after-modification",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/maximize-consecutive-elements-in-an-array-after-modification/description"
    },
    "3314": {
        "difficulty": "MEDIUM",
        "id": 3314,
        "questionFrontendId": "3044",
        "title": "Most Frequent Prime",
        "titleSlug": "most-frequent-prime",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Matrix",
                "slug": "matrix"
            },
            {
                "name": "Counting",
                "slug": "counting"
            },
            {
                "name": "Enumeration",
                "slug": "enumeration"
            },
            {
                "name": "Number Theory",
                "slug": "number-theory"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/most-frequent-prime/description"
    },
    "3490": {
        "difficulty": "MEDIUM",
        "id": 3490,
        "questionFrontendId": "3201",
        "title": "Find the Maximum Length of Valid Subsequence I",
        "titleSlug": "find-the-maximum-length-of-valid-subsequence-i",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/find-the-maximum-length-of-valid-subsequence-i/description"
    },
    "3491": {
        "difficulty": "MEDIUM",
        "id": 3491,
        "questionFrontendId": "3202",
        "title": "Find the Maximum Length of Valid Subsequence II",
        "titleSlug": "find-the-maximum-length-of-valid-subsequence-ii",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            }
        ],
        "companyNames": [
            "google",
            "amazon"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/find-the-maximum-length-of-valid-subsequence-ii/description"
    },
    "280": {
        "difficulty": "MEDIUM",
        "id": 280,
        "questionFrontendId": "280",
        "title": "Wiggle Sort",
        "titleSlug": "wiggle-sort",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/wiggle-sort/description"
    },
    "281": {
        "difficulty": "MEDIUM",
        "id": 281,
        "questionFrontendId": "281",
        "title": "Zigzag Iterator",
        "titleSlug": "zigzag-iterator",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Design",
                "slug": "design"
            },
            {
                "name": "Queue",
                "slug": "queue"
            },
            {
                "name": "Iterator",
                "slug": "iterator"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/zigzag-iterator/description"
    },
    "469": {
        "difficulty": "MEDIUM",
        "id": 469,
        "questionFrontendId": "469",
        "title": "Convex Polygon",
        "titleSlug": "convex-polygon",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Geometry",
                "slug": "geometry"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/convex-polygon/description"
    },
    "505": {
        "difficulty": "MEDIUM",
        "id": 505,
        "questionFrontendId": "505",
        "title": "The Maze II",
        "titleSlug": "the-maze-ii",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Breadth-First Search",
                "slug": "breadth-first-search"
            },
            {
                "name": "Graph",
                "slug": "graph"
            },
            {
                "name": "Heap (Priority Queue)",
                "slug": "heap-priority-queue"
            },
            {
                "name": "Matrix",
                "slug": "matrix"
            },
            {
                "name": "Shortest Path",
                "slug": "shortest-path"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/the-maze-ii/description"
    },
    "520": {
        "difficulty": "EASY",
        "id": 520,
        "questionFrontendId": "520",
        "title": "Detect Capital",
        "titleSlug": "detect-capital",
        "topicTags": [
            {
                "name": "String",
                "slug": "string"
            }
        ],
        "companyNames": [
            "google",
            "amazon"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/detect-capital/description"
    },
    "544": {
        "difficulty": "MEDIUM",
        "id": 544,
        "questionFrontendId": "544",
        "title": "Output Contest Matches",
        "titleSlug": "output-contest-matches",
        "topicTags": [
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Recursion",
                "slug": "recursion"
            },
            {
                "name": "Simulation",
                "slug": "simulation"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/output-contest-matches/description"
    },
    "551": {
        "difficulty": "EASY",
        "id": 551,
        "questionFrontendId": "551",
        "title": "Student Attendance Record I",
        "titleSlug": "student-attendance-record-i",
        "topicTags": [
            {
                "name": "String",
                "slug": "string"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/student-attendance-record-i/description"
    },
    "569": {
        "difficulty": "HARD",
        "id": 569,
        "questionFrontendId": "569",
        "title": "Median Employee Salary",
        "titleSlug": "median-employee-salary",
        "topicTags": [
            {
                "name": "Database",
                "slug": "database"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/median-employee-salary/description"
    },
    "727": {
        "difficulty": "HARD",
        "id": 727,
        "questionFrontendId": "727",
        "title": "Minimum Window Subsequence",
        "titleSlug": "minimum-window-subsequence",
        "topicTags": [
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Sliding Window",
                "slug": "sliding-window"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/minimum-window-subsequence/description"
    },
    "732": {
        "difficulty": "HARD",
        "id": 732,
        "questionFrontendId": "732",
        "title": "My Calendar III",
        "titleSlug": "my-calendar-iii",
        "topicTags": [
            {
                "name": "Binary Search",
                "slug": "binary-search"
            },
            {
                "name": "Design",
                "slug": "design"
            },
            {
                "name": "Segment Tree",
                "slug": "segment-tree"
            },
            {
                "name": "Prefix Sum",
                "slug": "prefix-sum"
            },
            {
                "name": "Ordered Set",
                "slug": "ordered-set"
            }
        ],
        "companyNames": [
            "google",
            "amazon"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/my-calendar-iii/description"
    },
    "734": {
        "difficulty": "EASY",
        "id": 734,
        "questionFrontendId": "734",
        "title": "Sentence Similarity",
        "titleSlug": "sentence-similarity",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "String",
                "slug": "string"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/sentence-similarity/description"
    },
    "821": {
        "difficulty": "HARD",
        "id": 821,
        "questionFrontendId": "803",
        "title": "Bricks Falling When Hit",
        "titleSlug": "bricks-falling-when-hit",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Union Find",
                "slug": "union-find"
            },
            {
                "name": "Matrix",
                "slug": "matrix"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/bricks-falling-when-hit/description"
    },
    "830": {
        "difficulty": "EASY",
        "id": 830,
        "questionFrontendId": "812",
        "title": "Largest Triangle Area",
        "titleSlug": "largest-triangle-area",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Geometry",
                "slug": "geometry"
            }
        ],
        "companyNames": [
            "google",
            "amazon"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/largest-triangle-area/description"
    },
    "835": {
        "difficulty": "MEDIUM",
        "id": 835,
        "questionFrontendId": "817",
        "title": "Linked List Components",
        "titleSlug": "linked-list-components",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Linked List",
                "slug": "linked-list"
            }
        ],
        "companyNames": [
            "google",
            "amazon"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/linked-list-components/description"
    },
    "925": {
        "difficulty": "MEDIUM",
        "id": 925,
        "questionFrontendId": "889",
        "title": "Construct Binary Tree from Preorder and Postorder Traversal",
        "titleSlug": "construct-binary-tree-from-preorder-and-postorder-traversal",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Divide and Conquer",
                "slug": "divide-and-conquer"
            },
            {
                "name": "Tree",
                "slug": "tree"
            },
            {
                "name": "Binary Tree",
                "slug": "binary-tree"
            }
        ],
        "companyNames": [
            "google",
            "amazon"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/construct-binary-tree-from-preorder-and-postorder-traversal/description"
    },
    "949": {
        "difficulty": "HARD",
        "id": 949,
        "questionFrontendId": "913",
        "title": "Cat and Mouse",
        "titleSlug": "cat-and-mouse",
        "topicTags": [
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Graph",
                "slug": "graph"
            },
            {
                "name": "Topological Sort",
                "slug": "topological-sort"
            },
            {
                "name": "Memoization",
                "slug": "memoization"
            },
            {
                "name": "Game Theory",
                "slug": "game-theory"
            }
        ],
        "companyNames": [
            "google",
            "amazon"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/cat-and-mouse/description"
    },
    "952": {
        "difficulty": "MEDIUM",
        "id": 952,
        "questionFrontendId": "916",
        "title": "Word Subsets",
        "titleSlug": "word-subsets",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "String",
                "slug": "string"
            }
        ],
        "companyNames": [
            "google",
            "amazon"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/word-subsets/description"
    },
    "1000": {
        "difficulty": "HARD",
        "id": 1000,
        "questionFrontendId": "960",
        "title": "Delete Columns to Make Sorted III",
        "titleSlug": "delete-columns-to-make-sorted-iii",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/delete-columns-to-make-sorted-iii/description"
    },
    "1051": {
        "difficulty": "MEDIUM",
        "id": 1051,
        "questionFrontendId": "1055",
        "title": "Shortest Way to Form String",
        "titleSlug": "shortest-way-to-form-string",
        "topicTags": [
            {
                "name": "Two Pointers",
                "slug": "two-pointers"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            }
        ],
        "companyNames": [
            "google",
            "amazon"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/shortest-way-to-form-string/description"
    },
    "1067": {
        "difficulty": "MEDIUM",
        "id": 1067,
        "questionFrontendId": "1066",
        "title": "Campus Bikes II",
        "titleSlug": "campus-bikes-ii",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Backtracking",
                "slug": "backtracking"
            },
            {
                "name": "Bit Manipulation",
                "slug": "bit-manipulation"
            },
            {
                "name": "Bitmask",
                "slug": "bitmask"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/campus-bikes-ii/description"
    },
    "1077": {
        "difficulty": "HARD",
        "id": 1077,
        "questionFrontendId": "1088",
        "title": "Confusing Number II",
        "titleSlug": "confusing-number-ii",
        "topicTags": [
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Backtracking",
                "slug": "backtracking"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/confusing-number-ii/description"
    },
    "1115": {
        "difficulty": "EASY",
        "id": 1115,
        "questionFrontendId": "1037",
        "title": "Valid Boomerang",
        "titleSlug": "valid-boomerang",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Geometry",
                "slug": "geometry"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/valid-boomerang/description"
    },
    "1126": {
        "difficulty": "MEDIUM",
        "id": 1126,
        "questionFrontendId": "1167",
        "title": "Minimum Cost to Connect Sticks",
        "titleSlug": "minimum-cost-to-connect-sticks",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            },
            {
                "name": "Heap (Priority Queue)",
                "slug": "heap-priority-queue"
            }
        ],
        "companyNames": [
            "google",
            "amazon"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/minimum-cost-to-connect-sticks/description"
    },
    "1156": {
        "difficulty": "EASY",
        "id": 1156,
        "questionFrontendId": "1078",
        "title": "Occurrences After Bigram",
        "titleSlug": "occurrences-after-bigram",
        "topicTags": [
            {
                "name": "String",
                "slug": "string"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/occurrences-after-bigram/description"
    },
    "1192": {
        "difficulty": "HARD",
        "id": 1192,
        "questionFrontendId": "1231",
        "title": "Divide Chocolate",
        "titleSlug": "divide-chocolate",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Binary Search",
                "slug": "binary-search"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/divide-chocolate/description"
    },
    "1242": {
        "difficulty": "MEDIUM",
        "id": 1242,
        "questionFrontendId": "1314",
        "title": "Matrix Block Sum",
        "titleSlug": "matrix-block-sum",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Matrix",
                "slug": "matrix"
            },
            {
                "name": "Prefix Sum",
                "slug": "prefix-sum"
            }
        ],
        "companyNames": [
            "google",
            "amazon"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/matrix-block-sum/description"
    },
    "1257": {
        "difficulty": "HARD",
        "id": 1257,
        "questionFrontendId": "1632",
        "title": "Rank Transform of a Matrix",
        "titleSlug": "rank-transform-of-a-matrix",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Union Find",
                "slug": "union-find"
            },
            {
                "name": "Graph",
                "slug": "graph"
            },
            {
                "name": "Topological Sort",
                "slug": "topological-sort"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            },
            {
                "name": "Matrix",
                "slug": "matrix"
            }
        ],
        "companyNames": [
            "google",
            "amazon"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/rank-transform-of-a-matrix/description"
    },
    "1310": {
        "difficulty": "MEDIUM",
        "id": 1310,
        "questionFrontendId": "2079",
        "title": "Watering Plants",
        "titleSlug": "watering-plants",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Simulation",
                "slug": "simulation"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/watering-plants/description"
    },
    "1396": {
        "difficulty": "MEDIUM",
        "id": 1396,
        "questionFrontendId": "1267",
        "title": "Count Servers that Communicate",
        "titleSlug": "count-servers-that-communicate",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Breadth-First Search",
                "slug": "breadth-first-search"
            },
            {
                "name": "Union Find",
                "slug": "union-find"
            },
            {
                "name": "Matrix",
                "slug": "matrix"
            },
            {
                "name": "Counting",
                "slug": "counting"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/count-servers-that-communicate/description"
    },
    "1413": {
        "difficulty": "MEDIUM",
        "id": 1413,
        "questionFrontendId": "1292",
        "title": "Maximum Side Length of a Square with Sum Less than or Equal to Threshold",
        "titleSlug": "maximum-side-length-of-a-square-with-sum-less-than-or-equal-to-threshold",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Binary Search",
                "slug": "binary-search"
            },
            {
                "name": "Matrix",
                "slug": "matrix"
            },
            {
                "name": "Prefix Sum",
                "slug": "prefix-sum"
            }
        ],
        "companyNames": [
            "google",
            "amazon"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/maximum-side-length-of-a-square-with-sum-less-than-or-equal-to-threshold/description"
    },
    "1443": {
        "difficulty": "HARD",
        "id": 1443,
        "questionFrontendId": "1320",
        "title": "Minimum Distance to Type a Word Using Two Fingers",
        "titleSlug": "minimum-distance-to-type-a-word-using-two-fingers",
        "topicTags": [
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/minimum-distance-to-type-a-word-using-two-fingers/description"
    },
    "1508": {
        "difficulty": "HARD",
        "id": 1508,
        "questionFrontendId": "1392",
        "title": "Longest Happy Prefix",
        "titleSlug": "longest-happy-prefix",
        "topicTags": [
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Rolling Hash",
                "slug": "rolling-hash"
            },
            {
                "name": "String Matching",
                "slug": "string-matching"
            },
            {
                "name": "Hash Function",
                "slug": "hash-function"
            }
        ],
        "companyNames": [
            "google",
            "amazon"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/longest-happy-prefix/description"
    },
    "1557": {
        "difficulty": "MEDIUM",
        "id": 1557,
        "questionFrontendId": "1461",
        "title": "Check If a String Contains All Binary Codes of Size K",
        "titleSlug": "check-if-a-string-contains-all-binary-codes-of-size-k",
        "topicTags": [
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Bit Manipulation",
                "slug": "bit-manipulation"
            },
            {
                "name": "Rolling Hash",
                "slug": "rolling-hash"
            },
            {
                "name": "Hash Function",
                "slug": "hash-function"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/check-if-a-string-contains-all-binary-codes-of-size-k/description"
    },
    "1628": {
        "difficulty": "MEDIUM",
        "id": 1628,
        "questionFrontendId": "1504",
        "title": "Count Submatrices With All Ones",
        "titleSlug": "count-submatrices-with-all-ones",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Stack",
                "slug": "stack"
            },
            {
                "name": "Matrix",
                "slug": "matrix"
            },
            {
                "name": "Monotonic Stack",
                "slug": "monotonic-stack"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/count-submatrices-with-all-ones/description"
    },
    "1649": {
        "difficulty": "MEDIUM",
        "id": 1649,
        "questionFrontendId": "1546",
        "title": "Maximum Number of Non-Overlapping Subarrays With Sum Equals Target",
        "titleSlug": "maximum-number-of-non-overlapping-subarrays-with-sum-equals-target",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            },
            {
                "name": "Prefix Sum",
                "slug": "prefix-sum"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/maximum-number-of-non-overlapping-subarrays-with-sum-equals-target/description"
    },
    "1655": {
        "difficulty": "HARD",
        "id": 1655,
        "questionFrontendId": "1516",
        "title": "Move Sub-Tree of N-Ary Tree",
        "titleSlug": "move-sub-tree-of-n-ary-tree",
        "topicTags": [
            {
                "name": "Tree",
                "slug": "tree"
            },
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/move-sub-tree-of-n-ary-tree/description"
    },
    "1676": {
        "difficulty": "HARD",
        "id": 1676,
        "questionFrontendId": "1553",
        "title": "Minimum Number of Days to Eat N Oranges",
        "titleSlug": "minimum-number-of-days-to-eat-n-oranges",
        "topicTags": [
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Memoization",
                "slug": "memoization"
            }
        ],
        "companyNames": [
            "google",
            "amazon"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/minimum-number-of-days-to-eat-n-oranges/description"
    },
    "1684": {
        "difficulty": "MEDIUM",
        "id": 1684,
        "questionFrontendId": "1562",
        "title": "Find Latest Group of Size M",
        "titleSlug": "find-latest-group-of-size-m",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Binary Search",
                "slug": "binary-search"
            },
            {
                "name": "Simulation",
                "slug": "simulation"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/find-latest-group-of-size-m/description"
    },
    "1703": {
        "difficulty": "MEDIUM",
        "id": 1703,
        "questionFrontendId": "1564",
        "title": "Put Boxes Into the Warehouse I",
        "titleSlug": "put-boxes-into-the-warehouse-i",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/put-boxes-into-the-warehouse-i/description"
    },
    "1715": {
        "difficulty": "MEDIUM",
        "id": 1715,
        "questionFrontendId": "1593",
        "title": "Split a String Into the Max Number of Unique Substrings",
        "titleSlug": "split-a-string-into-the-max-number-of-unique-substrings",
        "topicTags": [
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Backtracking",
                "slug": "backtracking"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/split-a-string-into-the-max-number-of-unique-substrings/description"
    },
    "1722": {
        "difficulty": "MEDIUM",
        "id": 1722,
        "questionFrontendId": "1600",
        "title": "Throne Inheritance",
        "titleSlug": "throne-inheritance",
        "topicTags": [
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Tree",
                "slug": "tree"
            },
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Design",
                "slug": "design"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/throne-inheritance/description"
    },
    "1728": {
        "difficulty": "HARD",
        "id": 1728,
        "questionFrontendId": "1622",
        "title": "Fancy Sequence",
        "titleSlug": "fancy-sequence",
        "topicTags": [
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Design",
                "slug": "design"
            },
            {
                "name": "Segment Tree",
                "slug": "segment-tree"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/fancy-sequence/description"
    },
    "1828": {
        "difficulty": "HARD",
        "id": 1828,
        "questionFrontendId": "1692",
        "title": "Count Ways to Distribute Candies",
        "titleSlug": "count-ways-to-distribute-candies",
        "topicTags": [
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/count-ways-to-distribute-candies/description"
    },
    "1858": {
        "difficulty": "EASY",
        "id": 1858,
        "questionFrontendId": "1736",
        "title": "Latest Time by Replacing Hidden Digits",
        "titleSlug": "latest-time-by-replacing-hidden-digits",
        "topicTags": [
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/latest-time-by-replacing-hidden-digits/description"
    },
    "1879": {
        "difficulty": "MEDIUM",
        "id": 1879,
        "questionFrontendId": "1753",
        "title": "Maximum Score From Removing Stones",
        "titleSlug": "maximum-score-from-removing-stones",
        "topicTags": [
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            },
            {
                "name": "Heap (Priority Queue)",
                "slug": "heap-priority-queue"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/maximum-score-from-removing-stones/description"
    },
    "1912": {
        "difficulty": "MEDIUM",
        "id": 1912,
        "questionFrontendId": "1786",
        "title": "Number of Restricted Paths From First to Last Node",
        "titleSlug": "number-of-restricted-paths-from-first-to-last-node",
        "topicTags": [
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Graph",
                "slug": "graph"
            },
            {
                "name": "Topological Sort",
                "slug": "topological-sort"
            },
            {
                "name": "Heap (Priority Queue)",
                "slug": "heap-priority-queue"
            },
            {
                "name": "Shortest Path",
                "slug": "shortest-path"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/number-of-restricted-paths-from-first-to-last-node/description"
    },
    "1923": {
        "difficulty": "MEDIUM",
        "id": 1923,
        "questionFrontendId": "1813",
        "title": "Sentence Similarity III",
        "titleSlug": "sentence-similarity-iii",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Two Pointers",
                "slug": "two-pointers"
            },
            {
                "name": "String",
                "slug": "string"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/sentence-similarity-iii/description"
    },
    "1934": {
        "difficulty": "MEDIUM",
        "id": 1934,
        "questionFrontendId": "1807",
        "title": "Evaluate the Bracket Pairs of a String",
        "titleSlug": "evaluate-the-bracket-pairs-of-a-string",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "String",
                "slug": "string"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/evaluate-the-bracket-pairs-of-a-string/description"
    },
    "1939": {
        "difficulty": "MEDIUM",
        "id": 1939,
        "questionFrontendId": "1828",
        "title": "Queries on Number of Points Inside a Circle",
        "titleSlug": "queries-on-number-of-points-inside-a-circle",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Geometry",
                "slug": "geometry"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/queries-on-number-of-points-inside-a-circle/description"
    },
    "1978": {
        "difficulty": "MEDIUM",
        "id": 1978,
        "questionFrontendId": "1850",
        "title": "Minimum Adjacent Swaps to Reach the Kth Smallest Number",
        "titleSlug": "minimum-adjacent-swaps-to-reach-the-kth-smallest-number",
        "topicTags": [
            {
                "name": "Two Pointers",
                "slug": "two-pointers"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/minimum-adjacent-swaps-to-reach-the-kth-smallest-number/description"
    },
    "1996": {
        "difficulty": "HARD",
        "id": 1996,
        "questionFrontendId": "1866",
        "title": "Number of Ways to Rearrange Sticks With K Sticks Visible",
        "titleSlug": "number-of-ways-to-rearrange-sticks-with-k-sticks-visible",
        "topicTags": [
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Combinatorics",
                "slug": "combinatorics"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/number-of-ways-to-rearrange-sticks-with-k-sticks-visible/description"
    },
    "2001": {
        "difficulty": "MEDIUM",
        "id": 2001,
        "questionFrontendId": "1871",
        "title": "Jump Game VII",
        "titleSlug": "jump-game-vii",
        "topicTags": [
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Sliding Window",
                "slug": "sliding-window"
            },
            {
                "name": "Prefix Sum",
                "slug": "prefix-sum"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/jump-game-vii/description"
    },
    "2009": {
        "difficulty": "MEDIUM",
        "id": 2009,
        "questionFrontendId": "1858",
        "title": "Longest Word With All Prefixes",
        "titleSlug": "longest-word-with-all-prefixes",
        "topicTags": [
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Trie",
                "slug": "trie"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/longest-word-with-all-prefixes/description"
    },
    "2013": {
        "difficulty": "HARD",
        "id": 2013,
        "questionFrontendId": "1883",
        "title": "Minimum Skips to Arrive at Meeting On Time",
        "titleSlug": "minimum-skips-to-arrive-at-meeting-on-time",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            }
        ],
        "companyNames": [
            "google",
            "amazon"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/minimum-skips-to-arrive-at-meeting-on-time/description"
    },
    "2034": {
        "difficulty": "MEDIUM",
        "id": 2034,
        "questionFrontendId": "1906",
        "title": "Minimum Absolute Difference Queries",
        "titleSlug": "minimum-absolute-difference-queries",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/minimum-absolute-difference-queries/description"
    },
    "2045": {
        "difficulty": "MEDIUM",
        "id": 2045,
        "questionFrontendId": "1891",
        "title": "Cutting Ribbons",
        "titleSlug": "cutting-ribbons",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Binary Search",
                "slug": "binary-search"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/cutting-ribbons/description"
    },
    "2071": {
        "difficulty": "MEDIUM",
        "id": 2071,
        "questionFrontendId": "1940",
        "title": "Longest Common Subsequence Between Sorted Arrays",
        "titleSlug": "longest-common-subsequence-between-sorted-arrays",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Counting",
                "slug": "counting"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/longest-common-subsequence-between-sorted-arrays/description"
    },
    "2111": {
        "difficulty": "MEDIUM",
        "id": 2111,
        "questionFrontendId": "1966",
        "title": "Binary Searchable Numbers in an Unsorted Array",
        "titleSlug": "binary-searchable-numbers-in-an-unsorted-array",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Binary Search",
                "slug": "binary-search"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/binary-searchable-numbers-in-an-unsorted-array/description"
    },
    "2245": {
        "difficulty": "MEDIUM",
        "id": 2245,
        "questionFrontendId": "2126",
        "title": "Destroying Asteroids",
        "titleSlug": "destroying-asteroids",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ],
        "companyNames": [
            "google",
            "amazon"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/destroying-asteroids/description"
    },
    "2268": {
        "difficulty": "MEDIUM",
        "id": 2268,
        "questionFrontendId": "2128",
        "title": "Remove All Ones With Row and Column Flips",
        "titleSlug": "remove-all-ones-with-row-and-column-flips",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Bit Manipulation",
                "slug": "bit-manipulation"
            },
            {
                "name": "Matrix",
                "slug": "matrix"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/remove-all-ones-with-row-and-column-flips/description"
    },
    "2312": {
        "difficulty": "EASY",
        "id": 2312,
        "questionFrontendId": "2190",
        "title": "Most Frequent Number Following Key In an Array",
        "titleSlug": "most-frequent-number-following-key-in-an-array",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Counting",
                "slug": "counting"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/most-frequent-number-following-key-in-an-array/description"
    },
    "2341": {
        "difficulty": "EASY",
        "id": 2341,
        "questionFrontendId": "2255",
        "title": "Count Prefixes of a Given String",
        "titleSlug": "count-prefixes-of-a-given-string",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "String",
                "slug": "string"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/count-prefixes-of-a-given-string/description"
    },
    "2345": {
        "difficulty": "EASY",
        "id": 2345,
        "questionFrontendId": "2224",
        "title": "Minimum Number of Operations to Convert Time",
        "titleSlug": "minimum-number-of-operations-to-convert-time",
        "topicTags": [
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/minimum-number-of-operations-to-convert-time/description"
    },
    "2380": {
        "difficulty": "HARD",
        "id": 2380,
        "questionFrontendId": "2286",
        "title": "Booking Concert Tickets in Groups",
        "titleSlug": "booking-concert-tickets-in-groups",
        "topicTags": [
            {
                "name": "Binary Search",
                "slug": "binary-search"
            },
            {
                "name": "Design",
                "slug": "design"
            },
            {
                "name": "Binary Indexed Tree",
                "slug": "binary-indexed-tree"
            },
            {
                "name": "Segment Tree",
                "slug": "segment-tree"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/booking-concert-tickets-in-groups/description"
    },
    "2395": {
        "difficulty": "MEDIUM",
        "id": 2395,
        "questionFrontendId": "2311",
        "title": "Longest Binary Subsequence Less Than or Equal to K",
        "titleSlug": "longest-binary-subsequence-less-than-or-equal-to-k",
        "topicTags": [
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            },
            {
                "name": "Memoization",
                "slug": "memoization"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/longest-binary-subsequence-less-than-or-equal-to-k/description"
    },
    "2396": {
        "difficulty": "HARD",
        "id": 2396,
        "questionFrontendId": "2254",
        "title": "Design Video Sharing Platform",
        "titleSlug": "design-video-sharing-platform",
        "topicTags": [
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Stack",
                "slug": "stack"
            },
            {
                "name": "Design",
                "slug": "design"
            },
            {
                "name": "Ordered Set",
                "slug": "ordered-set"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/design-video-sharing-platform/description"
    },
    "2432": {
        "difficulty": "MEDIUM",
        "id": 2432,
        "questionFrontendId": "2348",
        "title": "Number of Zero-Filled Subarrays",
        "titleSlug": "number-of-zero-filled-subarrays",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Math",
                "slug": "math"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/number-of-zero-filled-subarrays/description"
    },
    "2512": {
        "difficulty": "MEDIUM",
        "id": 2512,
        "questionFrontendId": "2424",
        "title": "Longest Uploaded Prefix",
        "titleSlug": "longest-uploaded-prefix",
        "topicTags": [
            {
                "name": "Binary Search",
                "slug": "binary-search"
            },
            {
                "name": "Union Find",
                "slug": "union-find"
            },
            {
                "name": "Design",
                "slug": "design"
            },
            {
                "name": "Binary Indexed Tree",
                "slug": "binary-indexed-tree"
            },
            {
                "name": "Segment Tree",
                "slug": "segment-tree"
            },
            {
                "name": "Heap (Priority Queue)",
                "slug": "heap-priority-queue"
            },
            {
                "name": "Ordered Set",
                "slug": "ordered-set"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/longest-uploaded-prefix/description"
    },
    "2525": {
        "difficulty": "MEDIUM",
        "id": 2525,
        "questionFrontendId": "2442",
        "title": "Count Number of Distinct Integers After Reverse Operations",
        "titleSlug": "count-number-of-distinct-integers-after-reverse-operations",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Math",
                "slug": "math"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/count-number-of-distinct-integers-after-reverse-operations/description"
    },
    "2569": {
        "difficulty": "HARD",
        "id": 2569,
        "questionFrontendId": "2478",
        "title": "Number of Beautiful Partitions",
        "titleSlug": "number-of-beautiful-partitions",
        "topicTags": [
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/number-of-beautiful-partitions/description"
    },
    "2615": {
        "difficulty": "MEDIUM",
        "id": 2615,
        "questionFrontendId": "2531",
        "title": "Make Number of Distinct Characters Equal",
        "titleSlug": "make-number-of-distinct-characters-equal",
        "topicTags": [
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Counting",
                "slug": "counting"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/make-number-of-distinct-characters-equal/description"
    },
    "2641": {
        "difficulty": "MEDIUM",
        "id": 2641,
        "questionFrontendId": "2556",
        "title": "Disconnect Path in a Binary Matrix by at Most One Flip",
        "titleSlug": "disconnect-path-in-a-binary-matrix-by-at-most-one-flip",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Breadth-First Search",
                "slug": "breadth-first-search"
            },
            {
                "name": "Matrix",
                "slug": "matrix"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/disconnect-path-in-a-binary-matrix-by-at-most-one-flip/description"
    },
    "2891": {
        "difficulty": "MEDIUM",
        "id": 2891,
        "questionFrontendId": "2779",
        "title": "Maximum Beauty of an Array After Applying Operation",
        "titleSlug": "maximum-beauty-of-an-array-after-applying-operation",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Binary Search",
                "slug": "binary-search"
            },
            {
                "name": "Sliding Window",
                "slug": "sliding-window"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/maximum-beauty-of-an-array-after-applying-operation/description"
    },
    "2953": {
        "difficulty": "MEDIUM",
        "id": 2953,
        "questionFrontendId": "2857",
        "title": "Count Pairs of Points With Distance k",
        "titleSlug": "count-pairs-of-points-with-distance-k",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Bit Manipulation",
                "slug": "bit-manipulation"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/count-pairs-of-points-with-distance-k/description"
    },
    "3024": {
        "difficulty": "HARD",
        "id": 3024,
        "questionFrontendId": "2851",
        "title": "String Transformation",
        "titleSlug": "string-transformation",
        "topicTags": [
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "String Matching",
                "slug": "string-matching"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/string-transformation/description"
    },
    "3058": {
        "difficulty": "HARD",
        "id": 3058,
        "questionFrontendId": "2872",
        "title": "Maximum Number of K-Divisible Components",
        "titleSlug": "maximum-number-of-k-divisible-components",
        "topicTags": [
            {
                "name": "Tree",
                "slug": "tree"
            },
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/maximum-number-of-k-divisible-components/description"
    },
    "3222": {
        "difficulty": "MEDIUM",
        "id": 3222,
        "questionFrontendId": "2936",
        "title": "Number of Equal Numbers Blocks",
        "titleSlug": "number-of-equal-numbers-blocks",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Binary Search",
                "slug": "binary-search"
            },
            {
                "name": "Interactive",
                "slug": "interactive"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/number-of-equal-numbers-blocks/description"
    },
    "3241": {
        "difficulty": "MEDIUM",
        "id": 3241,
        "questionFrontendId": "2966",
        "title": "Divide Array Into Arrays With Max Difference",
        "titleSlug": "divide-array-into-arrays-with-max-difference",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ],
        "companyNames": [
            "google",
            "amazon"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/divide-array-into-arrays-with-max-difference/description"
    },
    "3267": {
        "difficulty": "MEDIUM",
        "id": 3267,
        "questionFrontendId": "2981",
        "title": "Find Longest Special Substring That Occurs Thrice I",
        "titleSlug": "find-longest-special-substring-that-occurs-thrice-i",
        "topicTags": [
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Binary Search",
                "slug": "binary-search"
            },
            {
                "name": "Sliding Window",
                "slug": "sliding-window"
            },
            {
                "name": "Counting",
                "slug": "counting"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/find-longest-special-substring-that-occurs-thrice-i/description"
    },
    "3277": {
        "difficulty": "HARD",
        "id": 3277,
        "questionFrontendId": "3027",
        "title": "Find the Number of Ways to Place People II",
        "titleSlug": "find-the-number-of-ways-to-place-people-ii",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Geometry",
                "slug": "geometry"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            },
            {
                "name": "Enumeration",
                "slug": "enumeration"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/find-the-number-of-ways-to-place-people-ii/description"
    },
    "3384": {
        "difficulty": "MEDIUM",
        "id": 3384,
        "questionFrontendId": "3137",
        "title": "Minimum Number of Operations to Make Word K-Periodic",
        "titleSlug": "minimum-number-of-operations-to-make-word-k-periodic",
        "topicTags": [
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Counting",
                "slug": "counting"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/minimum-number-of-operations-to-make-word-k-periodic/description"
    },
    "3416": {
        "difficulty": "MEDIUM",
        "id": 3416,
        "questionFrontendId": "3153",
        "title": "Sum of Digit Differences of All Pairs",
        "titleSlug": "sum-of-digit-differences-of-all-pairs",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Counting",
                "slug": "counting"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/sum-of-digit-differences-of-all-pairs/description"
    },
    "3430": {
        "difficulty": "MEDIUM",
        "id": 3430,
        "questionFrontendId": "3169",
        "title": "Count Days Without Meetings",
        "titleSlug": "count-days-without-meetings",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/count-days-without-meetings/description"
    },
    "3501": {
        "difficulty": "MEDIUM",
        "id": 3501,
        "questionFrontendId": "3217",
        "title": "Delete Nodes From Linked List Present in Array",
        "titleSlug": "delete-nodes-from-linked-list-present-in-array",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Linked List",
                "slug": "linked-list"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/delete-nodes-from-linked-list-present-in-array/description"
    },
    "276": {
        "difficulty": "MEDIUM",
        "id": 276,
        "questionFrontendId": "276",
        "title": "Paint Fence",
        "titleSlug": "paint-fence",
        "topicTags": [
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/paint-fence/description"
    },
    "288": {
        "difficulty": "MEDIUM",
        "id": 288,
        "questionFrontendId": "288",
        "title": "Unique Word Abbreviation",
        "titleSlug": "unique-word-abbreviation",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Design",
                "slug": "design"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/unique-word-abbreviation/description"
    },
    "294": {
        "difficulty": "MEDIUM",
        "id": 294,
        "questionFrontendId": "294",
        "title": "Flip Game II",
        "titleSlug": "flip-game-ii",
        "topicTags": [
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Backtracking",
                "slug": "backtracking"
            },
            {
                "name": "Memoization",
                "slug": "memoization"
            },
            {
                "name": "Game Theory",
                "slug": "game-theory"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/flip-game-ii/description"
    },
    "320": {
        "difficulty": "MEDIUM",
        "id": 320,
        "questionFrontendId": "320",
        "title": "Generalized Abbreviation",
        "titleSlug": "generalized-abbreviation",
        "topicTags": [
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Backtracking",
                "slug": "backtracking"
            },
            {
                "name": "Bit Manipulation",
                "slug": "bit-manipulation"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/generalized-abbreviation/description"
    },
    "331": {
        "difficulty": "MEDIUM",
        "id": 331,
        "questionFrontendId": "331",
        "title": "Verify Preorder Serialization of a Binary Tree",
        "titleSlug": "verify-preorder-serialization-of-a-binary-tree",
        "topicTags": [
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Stack",
                "slug": "stack"
            },
            {
                "name": "Tree",
                "slug": "tree"
            },
            {
                "name": "Binary Tree",
                "slug": "binary-tree"
            }
        ],
        "companyNames": [
            "google",
            "amazon"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/verify-preorder-serialization-of-a-binary-tree/description"
    },
    "369": {
        "difficulty": "MEDIUM",
        "id": 369,
        "questionFrontendId": "369",
        "title": "Plus One Linked List",
        "titleSlug": "plus-one-linked-list",
        "topicTags": [
            {
                "name": "Linked List",
                "slug": "linked-list"
            },
            {
                "name": "Math",
                "slug": "math"
            }
        ],
        "companyNames": [
            "google",
            "amazon"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/plus-one-linked-list/description"
    },
    "391": {
        "difficulty": "HARD",
        "id": 391,
        "questionFrontendId": "391",
        "title": "Perfect Rectangle",
        "titleSlug": "perfect-rectangle",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Line Sweep",
                "slug": "line-sweep"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/perfect-rectangle/description"
    },
    "411": {
        "difficulty": "HARD",
        "id": 411,
        "questionFrontendId": "411",
        "title": "Minimum Unique Word Abbreviation",
        "titleSlug": "minimum-unique-word-abbreviation",
        "topicTags": [
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Backtracking",
                "slug": "backtracking"
            },
            {
                "name": "Bit Manipulation",
                "slug": "bit-manipulation"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/minimum-unique-word-abbreviation/description"
    },
    "425": {
        "difficulty": "HARD",
        "id": 425,
        "questionFrontendId": "425",
        "title": "Word Squares",
        "titleSlug": "word-squares",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Backtracking",
                "slug": "backtracking"
            },
            {
                "name": "Trie",
                "slug": "trie"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/word-squares/description"
    },
    "471": {
        "difficulty": "HARD",
        "id": 471,
        "questionFrontendId": "471",
        "title": "Encode String with Shortest Length",
        "titleSlug": "encode-string-with-shortest-length",
        "topicTags": [
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/encode-string-with-shortest-length/description"
    },
    "481": {
        "difficulty": "MEDIUM",
        "id": 481,
        "questionFrontendId": "481",
        "title": "Magical String",
        "titleSlug": "magical-string",
        "topicTags": [
            {
                "name": "Two Pointers",
                "slug": "two-pointers"
            },
            {
                "name": "String",
                "slug": "string"
            }
        ],
        "companyNames": [
            "google",
            "amazon"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/magical-string/description"
    },
    "483": {
        "difficulty": "HARD",
        "id": 483,
        "questionFrontendId": "483",
        "title": "Smallest Good Base",
        "titleSlug": "smallest-good-base",
        "topicTags": [
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Binary Search",
                "slug": "binary-search"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/smallest-good-base/description"
    },
    "484": {
        "difficulty": "MEDIUM",
        "id": 484,
        "questionFrontendId": "484",
        "title": "Find Permutation",
        "titleSlug": "find-permutation",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Stack",
                "slug": "stack"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/find-permutation/description"
    },
    "510": {
        "difficulty": "MEDIUM",
        "id": 510,
        "questionFrontendId": "2031",
        "title": "Count Subarrays With More Ones Than Zeros",
        "titleSlug": "count-subarrays-with-more-ones-than-zeros",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Binary Search",
                "slug": "binary-search"
            },
            {
                "name": "Divide and Conquer",
                "slug": "divide-and-conquer"
            },
            {
                "name": "Binary Indexed Tree",
                "slug": "binary-indexed-tree"
            },
            {
                "name": "Segment Tree",
                "slug": "segment-tree"
            },
            {
                "name": "Merge Sort",
                "slug": "merge-sort"
            },
            {
                "name": "Ordered Set",
                "slug": "ordered-set"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/count-subarrays-with-more-ones-than-zeros/description"
    },
    "511": {
        "difficulty": "MEDIUM",
        "id": 511,
        "questionFrontendId": "1059",
        "title": "All Paths from Source Lead to Destination",
        "titleSlug": "all-paths-from-source-lead-to-destination",
        "topicTags": [
            {
                "name": "Graph",
                "slug": "graph"
            },
            {
                "name": "Topological Sort",
                "slug": "topological-sort"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/all-paths-from-source-lead-to-destination/description"
    },
    "521": {
        "difficulty": "EASY",
        "id": 521,
        "questionFrontendId": "521",
        "title": "Longest Uncommon Subsequence I",
        "titleSlug": "longest-uncommon-subsequence-i",
        "topicTags": [
            {
                "name": "String",
                "slug": "string"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/longest-uncommon-subsequence-i/description"
    },
    "527": {
        "difficulty": "HARD",
        "id": 527,
        "questionFrontendId": "527",
        "title": "Word Abbreviation",
        "titleSlug": "word-abbreviation",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            },
            {
                "name": "Trie",
                "slug": "trie"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ],
        "companyNames": [
            "google",
            "amazon"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/word-abbreviation/description"
    },
    "531": {
        "difficulty": "MEDIUM",
        "id": 531,
        "questionFrontendId": "531",
        "title": "Lonely Pixel I",
        "titleSlug": "lonely-pixel-i",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Matrix",
                "slug": "matrix"
            }
        ],
        "companyNames": [
            "google",
            "amazon"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/lonely-pixel-i/description"
    },
    "533": {
        "difficulty": "MEDIUM",
        "id": 533,
        "questionFrontendId": "533",
        "title": "Lonely Pixel II",
        "titleSlug": "lonely-pixel-ii",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Matrix",
                "slug": "matrix"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/lonely-pixel-ii/description"
    },
    "568": {
        "difficulty": "HARD",
        "id": 568,
        "questionFrontendId": "568",
        "title": "Maximum Vacation Days",
        "titleSlug": "maximum-vacation-days",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Matrix",
                "slug": "matrix"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/maximum-vacation-days/description"
    },
    "638": {
        "difficulty": "MEDIUM",
        "id": 638,
        "questionFrontendId": "638",
        "title": "Shopping Offers",
        "titleSlug": "shopping-offers",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Backtracking",
                "slug": "backtracking"
            },
            {
                "name": "Bit Manipulation",
                "slug": "bit-manipulation"
            },
            {
                "name": "Memoization",
                "slug": "memoization"
            },
            {
                "name": "Bitmask",
                "slug": "bitmask"
            }
        ],
        "companyNames": [
            "google",
            "amazon"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/shopping-offers/description"
    },
    "644": {
        "difficulty": "HARD",
        "id": 644,
        "questionFrontendId": "644",
        "title": "Maximum Average Subarray II",
        "titleSlug": "maximum-average-subarray-ii",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Binary Search",
                "slug": "binary-search"
            },
            {
                "name": "Prefix Sum",
                "slug": "prefix-sum"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/maximum-average-subarray-ii/description"
    },
    "656": {
        "difficulty": "HARD",
        "id": 656,
        "questionFrontendId": "656",
        "title": "Coin Path",
        "titleSlug": "coin-path",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/coin-path/description"
    },
    "668": {
        "difficulty": "HARD",
        "id": 668,
        "questionFrontendId": "668",
        "title": "Kth Smallest Number in Multiplication Table",
        "titleSlug": "kth-smallest-number-in-multiplication-table",
        "topicTags": [
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Binary Search",
                "slug": "binary-search"
            }
        ],
        "companyNames": [
            "google",
            "amazon"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/kth-smallest-number-in-multiplication-table/description"
    },
    "683": {
        "difficulty": "HARD",
        "id": 683,
        "questionFrontendId": "683",
        "title": "K Empty Slots",
        "titleSlug": "k-empty-slots",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Binary Indexed Tree",
                "slug": "binary-indexed-tree"
            },
            {
                "name": "Segment Tree",
                "slug": "segment-tree"
            },
            {
                "name": "Queue",
                "slug": "queue"
            },
            {
                "name": "Sliding Window",
                "slug": "sliding-window"
            },
            {
                "name": "Heap (Priority Queue)",
                "slug": "heap-priority-queue"
            },
            {
                "name": "Ordered Set",
                "slug": "ordered-set"
            },
            {
                "name": "Monotonic Queue",
                "slug": "monotonic-queue"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/k-empty-slots/description"
    },
    "687": {
        "difficulty": "MEDIUM",
        "id": 687,
        "questionFrontendId": "687",
        "title": "Longest Univalue Path",
        "titleSlug": "longest-univalue-path",
        "topicTags": [
            {
                "name": "Tree",
                "slug": "tree"
            },
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Binary Tree",
                "slug": "binary-tree"
            }
        ],
        "companyNames": [
            "google",
            "amazon"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/longest-univalue-path/description"
    },
    "689": {
        "difficulty": "HARD",
        "id": 689,
        "questionFrontendId": "689",
        "title": "Maximum Sum of 3 Non-Overlapping Subarrays",
        "titleSlug": "maximum-sum-of-3-non-overlapping-subarrays",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/maximum-sum-of-3-non-overlapping-subarrays/description"
    },
    "749": {
        "difficulty": "EASY",
        "id": 749,
        "questionFrontendId": "748",
        "title": "Shortest Completing Word",
        "titleSlug": "shortest-completing-word",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "String",
                "slug": "string"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/shortest-completing-word/description"
    },
    "760": {
        "difficulty": "MEDIUM",
        "id": 760,
        "questionFrontendId": "758",
        "title": "Bold Words in String",
        "titleSlug": "bold-words-in-string",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Trie",
                "slug": "trie"
            },
            {
                "name": "String Matching",
                "slug": "string-matching"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/bold-words-in-string/description"
    },
    "762": {
        "difficulty": "EASY",
        "id": 762,
        "questionFrontendId": "760",
        "title": "Find Anagram Mappings",
        "titleSlug": "find-anagram-mappings",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/find-anagram-mappings/description"
    },
    "786": {
        "difficulty": "MEDIUM",
        "id": 786,
        "questionFrontendId": "702",
        "title": "Search in a Sorted Array of Unknown Size",
        "titleSlug": "search-in-a-sorted-array-of-unknown-size",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Binary Search",
                "slug": "binary-search"
            },
            {
                "name": "Interactive",
                "slug": "interactive"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/search-in-a-sorted-array-of-unknown-size/description"
    },
    "788": {
        "difficulty": "HARD",
        "id": 788,
        "questionFrontendId": "774",
        "title": "Minimize Max Distance to Gas Station",
        "titleSlug": "minimize-max-distance-to-gas-station",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Binary Search",
                "slug": "binary-search"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/minimize-max-distance-to-gas-station/description"
    },
    "805": {
        "difficulty": "MEDIUM",
        "id": 805,
        "questionFrontendId": "789",
        "title": "Escape The Ghosts",
        "titleSlug": "escape-the-ghosts",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Math",
                "slug": "math"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/escape-the-ghosts/description"
    },
    "818": {
        "difficulty": "EASY",
        "id": 818,
        "questionFrontendId": "800",
        "title": "Similar RGB Color",
        "titleSlug": "similar-rgb-color",
        "topicTags": [
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Enumeration",
                "slug": "enumeration"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/similar-rgb-color/description"
    },
    "834": {
        "difficulty": "MEDIUM",
        "id": 834,
        "questionFrontendId": "816",
        "title": "Ambiguous Coordinates",
        "titleSlug": "ambiguous-coordinates",
        "topicTags": [
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Backtracking",
                "slug": "backtracking"
            },
            {
                "name": "Enumeration",
                "slug": "enumeration"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/ambiguous-coordinates/description"
    },
    "850": {
        "difficulty": "MEDIUM",
        "id": 850,
        "questionFrontendId": "708",
        "title": "Insert into a Sorted Circular Linked List",
        "titleSlug": "insert-into-a-sorted-circular-linked-list",
        "topicTags": [
            {
                "name": "Linked List",
                "slug": "linked-list"
            }
        ],
        "companyNames": [
            "google",
            "amazon"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/insert-into-a-sorted-circular-linked-list/description"
    },
    "857": {
        "difficulty": "EASY",
        "id": 857,
        "questionFrontendId": "830",
        "title": "Positions of Large Groups",
        "titleSlug": "positions-of-large-groups",
        "topicTags": [
            {
                "name": "String",
                "slug": "string"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/positions-of-large-groups/description"
    },
    "884": {
        "difficulty": "HARD",
        "id": 884,
        "questionFrontendId": "854",
        "title": "K-Similar Strings",
        "titleSlug": "k-similar-strings",
        "topicTags": [
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Breadth-First Search",
                "slug": "breadth-first-search"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/k-similar-strings/description"
    },
    "947": {
        "difficulty": "MEDIUM",
        "id": 947,
        "questionFrontendId": "911",
        "title": "Online Election",
        "titleSlug": "online-election",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Binary Search",
                "slug": "binary-search"
            },
            {
                "name": "Design",
                "slug": "design"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/online-election/description"
    },
    "991": {
        "difficulty": "MEDIUM",
        "id": 991,
        "questionFrontendId": "954",
        "title": "Array of Doubled Pairs",
        "titleSlug": "array-of-doubled-pairs",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/array-of-doubled-pairs/description"
    },
    "992": {
        "difficulty": "MEDIUM",
        "id": 992,
        "questionFrontendId": "955",
        "title": "Delete Columns to Make Sorted II",
        "titleSlug": "delete-columns-to-make-sorted-ii",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/delete-columns-to-make-sorted-ii/description"
    },
    "1052": {
        "difficulty": "MEDIUM",
        "id": 1052,
        "questionFrontendId": "1057",
        "title": "Campus Bikes",
        "titleSlug": "campus-bikes",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/campus-bikes/description"
    },
    "1057": {
        "difficulty": "HARD",
        "id": 1057,
        "questionFrontendId": "1012",
        "title": "Numbers With Repeated Digits",
        "titleSlug": "numbers-with-repeated-digits",
        "topicTags": [
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/numbers-with-repeated-digits/description"
    },
    "1064": {
        "difficulty": "MEDIUM",
        "id": 1064,
        "questionFrontendId": "1015",
        "title": "Smallest Integer Divisible by K",
        "titleSlug": "smallest-integer-divisible-by-k",
        "topicTags": [
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Math",
                "slug": "math"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/smallest-integer-divisible-by-k/description"
    },
    "1065": {
        "difficulty": "MEDIUM",
        "id": 1065,
        "questionFrontendId": "1016",
        "title": "Binary String With Substrings Representing 1 To N",
        "titleSlug": "binary-string-with-substrings-representing-1-to-n",
        "topicTags": [
            {
                "name": "String",
                "slug": "string"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/binary-string-with-substrings-representing-1-to-n/description"
    },
    "1118": {
        "difficulty": "HARD",
        "id": 1118,
        "questionFrontendId": "1121",
        "title": "Divide Array Into Increasing Sequences",
        "titleSlug": "divide-array-into-increasing-sequences",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Counting",
                "slug": "counting"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/divide-array-into-increasing-sequences/description"
    },
    "1123": {
        "difficulty": "EASY",
        "id": 1123,
        "questionFrontendId": "1165",
        "title": "Single-Row Keyboard",
        "titleSlug": "single-row-keyboard",
        "topicTags": [
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "String",
                "slug": "string"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/single-row-keyboard/description"
    },
    "1134": {
        "difficulty": "MEDIUM",
        "id": 1134,
        "questionFrontendId": "1182",
        "title": "Shortest Distance to Target Color",
        "titleSlug": "shortest-distance-to-target-color",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Binary Search",
                "slug": "binary-search"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/shortest-distance-to-target-color/description"
    },
    "1160": {
        "difficulty": "MEDIUM",
        "id": 1160,
        "questionFrontendId": "1079",
        "title": "Letter Tile Possibilities",
        "titleSlug": "letter-tile-possibilities",
        "topicTags": [
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Backtracking",
                "slug": "backtracking"
            },
            {
                "name": "Counting",
                "slug": "counting"
            }
        ],
        "companyNames": [
            "google",
            "amazon"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/letter-tile-possibilities/description"
    },
    "1167": {
        "difficulty": "HARD",
        "id": 1167,
        "questionFrontendId": "1199",
        "title": "Minimum Time to Build Blocks",
        "titleSlug": "minimum-time-to-build-blocks",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            },
            {
                "name": "Heap (Priority Queue)",
                "slug": "heap-priority-queue"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/minimum-time-to-build-blocks/description"
    },
    "1169": {
        "difficulty": "MEDIUM",
        "id": 1169,
        "questionFrontendId": "1090",
        "title": "Largest Values From Labels",
        "titleSlug": "largest-values-from-labels",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            },
            {
                "name": "Counting",
                "slug": "counting"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/largest-values-from-labels/description"
    },
    "1188": {
        "difficulty": "HARD",
        "id": 1188,
        "questionFrontendId": "1096",
        "title": "Brace Expansion II",
        "titleSlug": "brace-expansion-ii",
        "topicTags": [
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Backtracking",
                "slug": "backtracking"
            },
            {
                "name": "Stack",
                "slug": "stack"
            },
            {
                "name": "Breadth-First Search",
                "slug": "breadth-first-search"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/brace-expansion-ii/description"
    },
    "1200": {
        "difficulty": "MEDIUM",
        "id": 1200,
        "questionFrontendId": "1272",
        "title": "Remove Interval",
        "titleSlug": "remove-interval",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/remove-interval/description"
    },
    "1211": {
        "difficulty": "MEDIUM",
        "id": 1211,
        "questionFrontendId": "1286",
        "title": "Iterator for Combination",
        "titleSlug": "iterator-for-combination",
        "topicTags": [
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Backtracking",
                "slug": "backtracking"
            },
            {
                "name": "Design",
                "slug": "design"
            },
            {
                "name": "Iterator",
                "slug": "iterator"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/iterator-for-combination/description"
    },
    "1232": {
        "difficulty": "MEDIUM",
        "id": 1232,
        "questionFrontendId": "1300",
        "title": "Sum of Mutated Array Closest to Target",
        "titleSlug": "sum-of-mutated-array-closest-to-target",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Binary Search",
                "slug": "binary-search"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/sum-of-mutated-array-closest-to-target/description"
    },
    "1244": {
        "difficulty": "HARD",
        "id": 1244,
        "questionFrontendId": "1316",
        "title": "Distinct Echo Substrings",
        "titleSlug": "distinct-echo-substrings",
        "topicTags": [
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Trie",
                "slug": "trie"
            },
            {
                "name": "Rolling Hash",
                "slug": "rolling-hash"
            },
            {
                "name": "Hash Function",
                "slug": "hash-function"
            }
        ],
        "companyNames": [
            "google",
            "amazon"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/distinct-echo-substrings/description"
    },
    "1273": {
        "difficulty": "MEDIUM",
        "id": 1273,
        "questionFrontendId": "1170",
        "title": "Compare Strings by Frequency of the Smallest Character",
        "titleSlug": "compare-strings-by-frequency-of-the-smallest-character",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Binary Search",
                "slug": "binary-search"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ],
        "companyNames": [
            "google",
            "amazon"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/compare-strings-by-frequency-of-the-smallest-character/description"
    },
    "1287": {
        "difficulty": "EASY",
        "id": 1287,
        "questionFrontendId": "1184",
        "title": "Distance Between Bus Stops",
        "titleSlug": "distance-between-bus-stops",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/distance-between-bus-stops/description"
    },
    "1335": {
        "difficulty": "MEDIUM",
        "id": 1335,
        "questionFrontendId": "2226",
        "title": "Maximum Candies Allocated to K Children",
        "titleSlug": "maximum-candies-allocated-to-k-children",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Binary Search",
                "slug": "binary-search"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/maximum-candies-allocated-to-k-children/description"
    },
    "1364": {
        "difficulty": "MEDIUM",
        "id": 1364,
        "questionFrontendId": "1726",
        "title": "Tuple with Same Product",
        "titleSlug": "tuple-with-same-product",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Counting",
                "slug": "counting"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/tuple-with-same-product/description"
    },
    "1384": {
        "difficulty": "MEDIUM",
        "id": 1384,
        "questionFrontendId": "1618",
        "title": "Maximum Font to Fit a Sentence in a Screen",
        "titleSlug": "maximum-font-to-fit-a-sentence-in-a-screen",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Binary Search",
                "slug": "binary-search"
            },
            {
                "name": "Interactive",
                "slug": "interactive"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/maximum-font-to-fit-a-sentence-in-a-screen/description"
    },
    "1387": {
        "difficulty": "MEDIUM",
        "id": 1387,
        "questionFrontendId": "1261",
        "title": "Find Elements in a Contaminated Binary Tree",
        "titleSlug": "find-elements-in-a-contaminated-binary-tree",
        "topicTags": [
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Tree",
                "slug": "tree"
            },
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Breadth-First Search",
                "slug": "breadth-first-search"
            },
            {
                "name": "Design",
                "slug": "design"
            },
            {
                "name": "Binary Tree",
                "slug": "binary-tree"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/find-elements-in-a-contaminated-binary-tree/description"
    },
    "1394": {
        "difficulty": "MEDIUM",
        "id": 1394,
        "questionFrontendId": "2304",
        "title": "Minimum Path Cost in a Grid",
        "titleSlug": "minimum-path-cost-in-a-grid",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Matrix",
                "slug": "matrix"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/minimum-path-cost-in-a-grid/description"
    },
    "1405": {
        "difficulty": "MEDIUM",
        "id": 1405,
        "questionFrontendId": "1270",
        "title": "All People Report to the Given Manager",
        "titleSlug": "all-people-report-to-the-given-manager",
        "topicTags": [
            {
                "name": "Database",
                "slug": "database"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/all-people-report-to-the-given-manager/description"
    },
    "1515": {
        "difficulty": "MEDIUM",
        "id": 1515,
        "questionFrontendId": "1414",
        "title": "Find the Minimum Number of Fibonacci Numbers Whose Sum Is K",
        "titleSlug": "find-the-minimum-number-of-fibonacci-numbers-whose-sum-is-k",
        "topicTags": [
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/find-the-minimum-number-of-fibonacci-numbers-whose-sum-is-k/description"
    },
    "1543": {
        "difficulty": "MEDIUM",
        "id": 1543,
        "questionFrontendId": "1447",
        "title": "Simplified Fractions",
        "titleSlug": "simplified-fractions",
        "topicTags": [
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Number Theory",
                "slug": "number-theory"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/simplified-fractions/description"
    },
    "1545": {
        "difficulty": "HARD",
        "id": 1545,
        "questionFrontendId": "1449",
        "title": "Form Largest Integer With Digits That Add up to Target",
        "titleSlug": "form-largest-integer-with-digits-that-add-up-to-target",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/form-largest-integer-with-digits-that-add-up-to-target/description"
    },
    "1562": {
        "difficulty": "MEDIUM",
        "id": 1562,
        "questionFrontendId": "1452",
        "title": "People Whose List of Favorite Companies Is Not a Subset of Another List",
        "titleSlug": "people-whose-list-of-favorite-companies-is-not-a-subset-of-another-list",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "String",
                "slug": "string"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/people-whose-list-of-favorite-companies-is-not-a-subset-of-another-list/description"
    },
    "1581": {
        "difficulty": "MEDIUM",
        "id": 1581,
        "questionFrontendId": "1471",
        "title": "The k Strongest Values in an Array",
        "titleSlug": "the-k-strongest-values-in-an-array",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Two Pointers",
                "slug": "two-pointers"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/the-k-strongest-values-in-an-array/description"
    },
    "1636": {
        "difficulty": "MEDIUM",
        "id": 1636,
        "questionFrontendId": "1513",
        "title": "Number of Substrings With Only 1s",
        "titleSlug": "number-of-substrings-with-only-1s",
        "topicTags": [
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "String",
                "slug": "string"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/number-of-substrings-with-only-1s/description"
    },
    "1681": {
        "difficulty": "MEDIUM",
        "id": 1681,
        "questionFrontendId": "1538",
        "title": "Guess the Majority in a Hidden Array",
        "titleSlug": "guess-the-majority-in-a-hidden-array",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Interactive",
                "slug": "interactive"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/guess-the-majority-in-a-hidden-array/description"
    },
    "1696": {
        "difficulty": "HARD",
        "id": 1696,
        "questionFrontendId": "1591",
        "title": "Strange Printer II",
        "titleSlug": "strange-printer-ii",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Graph",
                "slug": "graph"
            },
            {
                "name": "Topological Sort",
                "slug": "topological-sort"
            },
            {
                "name": "Matrix",
                "slug": "matrix"
            }
        ],
        "companyNames": [
            "google",
            "amazon"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/strange-printer-ii/description"
    },
    "1707": {
        "difficulty": "HARD",
        "id": 1707,
        "questionFrontendId": "1585",
        "title": "Check If String Is Transformable With Substring Sort Operations",
        "titleSlug": "check-if-string-is-transformable-with-substring-sort-operations",
        "topicTags": [
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/check-if-string-is-transformable-with-substring-sort-operations/description"
    },
    "1716": {
        "difficulty": "MEDIUM",
        "id": 1716,
        "questionFrontendId": "1594",
        "title": "Maximum Non Negative Product in a Matrix",
        "titleSlug": "maximum-non-negative-product-in-a-matrix",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Matrix",
                "slug": "matrix"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/maximum-non-negative-product-in-a-matrix/description"
    },
    "1717": {
        "difficulty": "HARD",
        "id": 1717,
        "questionFrontendId": "1595",
        "title": "Minimum Cost to Connect Two Groups of Points",
        "titleSlug": "minimum-cost-to-connect-two-groups-of-points",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Bit Manipulation",
                "slug": "bit-manipulation"
            },
            {
                "name": "Matrix",
                "slug": "matrix"
            },
            {
                "name": "Bitmask",
                "slug": "bitmask"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/minimum-cost-to-connect-two-groups-of-points/description"
    },
    "1719": {
        "difficulty": "MEDIUM",
        "id": 1719,
        "questionFrontendId": "1580",
        "title": "Put Boxes Into the Warehouse II",
        "titleSlug": "put-boxes-into-the-warehouse-ii",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/put-boxes-into-the-warehouse-ii/description"
    },
    "1727": {
        "difficulty": "HARD",
        "id": 1727,
        "questionFrontendId": "1728",
        "title": "Cat and Mouse II",
        "titleSlug": "cat-and-mouse-ii",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Graph",
                "slug": "graph"
            },
            {
                "name": "Topological Sort",
                "slug": "topological-sort"
            },
            {
                "name": "Memoization",
                "slug": "memoization"
            },
            {
                "name": "Matrix",
                "slug": "matrix"
            },
            {
                "name": "Game Theory",
                "slug": "game-theory"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/cat-and-mouse-ii/description"
    },
    "1745": {
        "difficulty": "MEDIUM",
        "id": 1745,
        "questionFrontendId": "1602",
        "title": "Find Nearest Right Node in Binary Tree",
        "titleSlug": "find-nearest-right-node-in-binary-tree",
        "topicTags": [
            {
                "name": "Tree",
                "slug": "tree"
            },
            {
                "name": "Breadth-First Search",
                "slug": "breadth-first-search"
            },
            {
                "name": "Binary Tree",
                "slug": "binary-tree"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/find-nearest-right-node-in-binary-tree/description"
    },
    "1750": {
        "difficulty": "MEDIUM",
        "id": 1750,
        "questionFrontendId": "1612",
        "title": "Check If Two Expression Trees are Equivalent",
        "titleSlug": "check-if-two-expression-trees-are-equivalent",
        "topicTags": [
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Tree",
                "slug": "tree"
            },
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Binary Tree",
                "slug": "binary-tree"
            },
            {
                "name": "Counting",
                "slug": "counting"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/check-if-two-expression-trees-are-equivalent/description"
    },
    "1758": {
        "difficulty": "HARD",
        "id": 1758,
        "questionFrontendId": "1655",
        "title": "Distribute Repeating Integers",
        "titleSlug": "distribute-repeating-integers",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Backtracking",
                "slug": "backtracking"
            },
            {
                "name": "Bit Manipulation",
                "slug": "bit-manipulation"
            },
            {
                "name": "Bitmask",
                "slug": "bitmask"
            }
        ],
        "companyNames": [
            "google",
            "amazon"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/distribute-repeating-integers/description"
    },
    "1792": {
        "difficulty": "MEDIUM",
        "id": 1792,
        "questionFrontendId": "1673",
        "title": "Find the Most Competitive Subsequence",
        "titleSlug": "find-the-most-competitive-subsequence",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Stack",
                "slug": "stack"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            },
            {
                "name": "Monotonic Stack",
                "slug": "monotonic-stack"
            }
        ],
        "companyNames": [
            "google",
            "amazon"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/find-the-most-competitive-subsequence/description"
    },
    "1796": {
        "difficulty": "MEDIUM",
        "id": 1796,
        "questionFrontendId": "1660",
        "title": "Correct a Binary Tree",
        "titleSlug": "correct-a-binary-tree",
        "topicTags": [
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Tree",
                "slug": "tree"
            },
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Breadth-First Search",
                "slug": "breadth-first-search"
            },
            {
                "name": "Binary Tree",
                "slug": "binary-tree"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/correct-a-binary-tree/description"
    },
    "1832": {
        "difficulty": "HARD",
        "id": 1832,
        "questionFrontendId": "1713",
        "title": "Minimum Operations to Make a Subsequence",
        "titleSlug": "minimum-operations-to-make-a-subsequence",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Binary Search",
                "slug": "binary-search"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/minimum-operations-to-make-a-subsequence/description"
    },
    "1840": {
        "difficulty": "MEDIUM",
        "id": 1840,
        "questionFrontendId": "1722",
        "title": "Minimize Hamming Distance After Swap Operations",
        "titleSlug": "minimize-hamming-distance-after-swap-operations",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Union Find",
                "slug": "union-find"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/minimize-hamming-distance-after-swap-operations/description"
    },
    "1847": {
        "difficulty": "EASY",
        "id": 1847,
        "questionFrontendId": "1708",
        "title": "Largest Subarray Length K",
        "titleSlug": "largest-subarray-length-k",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/largest-subarray-length-k/description"
    },
    "1859": {
        "difficulty": "MEDIUM",
        "id": 1859,
        "questionFrontendId": "1737",
        "title": "Change Minimum Characters to Satisfy One of Three Conditions",
        "titleSlug": "change-minimum-characters-to-satisfy-one-of-three-conditions",
        "topicTags": [
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Counting",
                "slug": "counting"
            },
            {
                "name": "Prefix Sum",
                "slug": "prefix-sum"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/change-minimum-characters-to-satisfy-one-of-three-conditions/description"
    },
    "1860": {
        "difficulty": "MEDIUM",
        "id": 1860,
        "questionFrontendId": "1738",
        "title": "Find Kth Largest XOR Coordinate Value",
        "titleSlug": "find-kth-largest-xor-coordinate-value",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Divide and Conquer",
                "slug": "divide-and-conquer"
            },
            {
                "name": "Bit Manipulation",
                "slug": "bit-manipulation"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            },
            {
                "name": "Heap (Priority Queue)",
                "slug": "heap-priority-queue"
            },
            {
                "name": "Matrix",
                "slug": "matrix"
            },
            {
                "name": "Prefix Sum",
                "slug": "prefix-sum"
            },
            {
                "name": "Quickselect",
                "slug": "quickselect"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/find-kth-largest-xor-coordinate-value/description"
    },
    "1865": {
        "difficulty": "HARD",
        "id": 1865,
        "questionFrontendId": "1724",
        "title": "Checking Existence of Edge Length Limited Paths II",
        "titleSlug": "checking-existence-of-edge-length-limited-paths-ii",
        "topicTags": [
            {
                "name": "Union Find",
                "slug": "union-find"
            },
            {
                "name": "Graph",
                "slug": "graph"
            },
            {
                "name": "Minimum Spanning Tree",
                "slug": "minimum-spanning-tree"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/checking-existence-of-edge-length-limited-paths-ii/description"
    },
    "1876": {
        "difficulty": "MEDIUM",
        "id": 1876,
        "questionFrontendId": "1765",
        "title": "Map of Highest Peak",
        "titleSlug": "map-of-highest-peak",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Breadth-First Search",
                "slug": "breadth-first-search"
            },
            {
                "name": "Matrix",
                "slug": "matrix"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/map-of-highest-peak/description"
    },
    "1895": {
        "difficulty": "MEDIUM",
        "id": 1895,
        "questionFrontendId": "1769",
        "title": "Minimum Number of Operations to Move All Balls to Each Box",
        "titleSlug": "minimum-number-of-operations-to-move-all-balls-to-each-box",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "String",
                "slug": "string"
            }
        ],
        "companyNames": [
            "google",
            "amazon"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/minimum-number-of-operations-to-move-all-balls-to-each-box/description"
    },
    "1914": {
        "difficulty": "HARD",
        "id": 1914,
        "questionFrontendId": "1767",
        "title": "Find the Subtasks That Did Not Execute",
        "titleSlug": "find-the-subtasks-that-did-not-execute",
        "topicTags": [
            {
                "name": "Database",
                "slug": "database"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/find-the-subtasks-that-did-not-execute/description"
    },
    "1924": {
        "difficulty": "HARD",
        "id": 1924,
        "questionFrontendId": "1815",
        "title": "Maximum Number of Groups Getting Fresh Donuts",
        "titleSlug": "maximum-number-of-groups-getting-fresh-donuts",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Bit Manipulation",
                "slug": "bit-manipulation"
            },
            {
                "name": "Memoization",
                "slug": "memoization"
            },
            {
                "name": "Bitmask",
                "slug": "bitmask"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/maximum-number-of-groups-getting-fresh-donuts/description"
    },
    "1935": {
        "difficulty": "MEDIUM",
        "id": 1935,
        "questionFrontendId": "1806",
        "title": "Minimum Number of Operations to Reinitialize a Permutation",
        "titleSlug": "minimum-number-of-operations-to-reinitialize-a-permutation",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Simulation",
                "slug": "simulation"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/minimum-number-of-operations-to-reinitialize-a-permutation/description"
    },
    "1943": {
        "difficulty": "MEDIUM",
        "id": 1943,
        "questionFrontendId": "1794",
        "title": "Count Pairs of Equal Substrings With Minimum Difference",
        "titleSlug": "count-pairs-of-equal-substrings-with-minimum-difference",
        "topicTags": [
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/count-pairs-of-equal-substrings-with-minimum-difference/description"
    },
    "1959": {
        "difficulty": "MEDIUM",
        "id": 1959,
        "questionFrontendId": "1810",
        "title": "Minimum Path Cost in a Hidden Grid",
        "titleSlug": "minimum-path-cost-in-a-hidden-grid",
        "topicTags": [
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Breadth-First Search",
                "slug": "breadth-first-search"
            },
            {
                "name": "Graph",
                "slug": "graph"
            },
            {
                "name": "Heap (Priority Queue)",
                "slug": "heap-priority-queue"
            },
            {
                "name": "Interactive",
                "slug": "interactive"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/minimum-path-cost-in-a-hidden-grid/description"
    },
    "1974": {
        "difficulty": "EASY",
        "id": 1974,
        "questionFrontendId": "1821",
        "title": "Find Customers With Positive Revenue this Year",
        "titleSlug": "find-customers-with-positive-revenue-this-year",
        "topicTags": [
            {
                "name": "Database",
                "slug": "database"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/find-customers-with-positive-revenue-this-year/description"
    },
    "2008": {
        "difficulty": "HARD",
        "id": 2008,
        "questionFrontendId": "1896",
        "title": "Minimum Cost to Change the Final Value of Expression",
        "titleSlug": "minimum-cost-to-change-the-final-value-of-expression",
        "topicTags": [
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Stack",
                "slug": "stack"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/minimum-cost-to-change-the-final-value-of-expression/description"
    },
    "2017": {
        "difficulty": "MEDIUM",
        "id": 2017,
        "questionFrontendId": "1888",
        "title": "Minimum Number of Flips to Make the Binary String Alternating",
        "titleSlug": "minimum-number-of-flips-to-make-the-binary-string-alternating",
        "topicTags": [
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            },
            {
                "name": "Sliding Window",
                "slug": "sliding-window"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/minimum-number-of-flips-to-make-the-binary-string-alternating/description"
    },
    "2026": {
        "difficulty": "MEDIUM",
        "id": 2026,
        "questionFrontendId": "1899",
        "title": "Merge Triplets to Form Target Triplet",
        "titleSlug": "merge-triplets-to-form-target-triplet",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/merge-triplets-to-form-target-triplet/description"
    },
    "2028": {
        "difficulty": "HARD",
        "id": 2028,
        "questionFrontendId": "1900",
        "title": "The Earliest and Latest Rounds Where Players Compete",
        "titleSlug": "the-earliest-and-latest-rounds-where-players-compete",
        "topicTags": [
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Memoization",
                "slug": "memoization"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/the-earliest-and-latest-rounds-where-players-compete/description"
    },
    "2029": {
        "difficulty": "MEDIUM",
        "id": 2029,
        "questionFrontendId": "1874",
        "title": "Minimize Product Sum of Two Arrays",
        "titleSlug": "minimize-product-sum-of-two-arrays",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/minimize-product-sum-of-two-arrays/description"
    },
    "2055": {
        "difficulty": "MEDIUM",
        "id": 2055,
        "questionFrontendId": "1943",
        "title": "Describe the Painting",
        "titleSlug": "describe-the-painting",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            },
            {
                "name": "Prefix Sum",
                "slug": "prefix-sum"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/describe-the-painting/description"
    },
    "2061": {
        "difficulty": "HARD",
        "id": 2061,
        "questionFrontendId": "1931",
        "title": "Painting a Grid With Three Different Colors",
        "titleSlug": "painting-a-grid-with-three-different-colors",
        "topicTags": [
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/painting-a-grid-with-three-different-colors/description"
    },
    "2069": {
        "difficulty": "MEDIUM",
        "id": 2069,
        "questionFrontendId": "1918",
        "title": "Kth Smallest Subarray Sum",
        "titleSlug": "kth-smallest-subarray-sum",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Binary Search",
                "slug": "binary-search"
            },
            {
                "name": "Sliding Window",
                "slug": "sliding-window"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/kth-smallest-subarray-sum/description"
    },
    "2074": {
        "difficulty": "HARD",
        "id": 2074,
        "questionFrontendId": "1924",
        "title": "Erect the Fence II",
        "titleSlug": "erect-the-fence-ii",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Geometry",
                "slug": "geometry"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/erect-the-fence-ii/description"
    },
    "2104": {
        "difficulty": "MEDIUM",
        "id": 2104,
        "questionFrontendId": "1993",
        "title": "Operations on Tree",
        "titleSlug": "operations-on-tree",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Tree",
                "slug": "tree"
            },
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Breadth-First Search",
                "slug": "breadth-first-search"
            },
            {
                "name": "Design",
                "slug": "design"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/operations-on-tree/description"
    },
    "2132": {
        "difficulty": "EASY",
        "id": 2132,
        "questionFrontendId": "2022",
        "title": "Convert 1D Array Into 2D Array",
        "titleSlug": "convert-1d-array-into-2d-array",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Matrix",
                "slug": "matrix"
            },
            {
                "name": "Simulation",
                "slug": "simulation"
            }
        ],
        "companyNames": [
            "google",
            "amazon"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/convert-1d-array-into-2d-array/description"
    },
    "2183": {
        "difficulty": "MEDIUM",
        "id": 2183,
        "questionFrontendId": "2059",
        "title": "Minimum Operations to Convert Number",
        "titleSlug": "minimum-operations-to-convert-number",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Breadth-First Search",
                "slug": "breadth-first-search"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/minimum-operations-to-convert-number/description"
    },
    "2198": {
        "difficulty": "HARD",
        "id": 2198,
        "questionFrontendId": "2076",
        "title": "Process Restricted Friend Requests",
        "titleSlug": "process-restricted-friend-requests",
        "topicTags": [
            {
                "name": "Union Find",
                "slug": "union-find"
            },
            {
                "name": "Graph",
                "slug": "graph"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/process-restricted-friend-requests/description"
    },
    "2218": {
        "difficulty": "MEDIUM",
        "id": 2218,
        "questionFrontendId": "2077",
        "title": "Paths in Maze That Lead to Same Room",
        "titleSlug": "paths-in-maze-that-lead-to-same-room",
        "topicTags": [
            {
                "name": "Graph",
                "slug": "graph"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/paths-in-maze-that-lead-to-same-room/description"
    },
    "2228": {
        "difficulty": "MEDIUM",
        "id": 2228,
        "questionFrontendId": "2105",
        "title": "Watering Plants II",
        "titleSlug": "watering-plants-ii",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Two Pointers",
                "slug": "two-pointers"
            },
            {
                "name": "Simulation",
                "slug": "simulation"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/watering-plants-ii/description"
    },
    "2241": {
        "difficulty": "HARD",
        "id": 2241,
        "questionFrontendId": "2122",
        "title": "Recover the Original Array",
        "titleSlug": "recover-the-original-array",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Two Pointers",
                "slug": "two-pointers"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            },
            {
                "name": "Enumeration",
                "slug": "enumeration"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/recover-the-original-array/description"
    },
    "2256": {
        "difficulty": "MEDIUM",
        "id": 2256,
        "questionFrontendId": "2135",
        "title": "Count Words Obtained After Adding a Letter",
        "titleSlug": "count-words-obtained-after-adding-a-letter",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Bit Manipulation",
                "slug": "bit-manipulation"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ],
        "companyNames": [
            "google",
            "amazon"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/count-words-obtained-after-adding-a-letter/description"
    },
    "2261": {
        "difficulty": "MEDIUM",
        "id": 2261,
        "questionFrontendId": "2155",
        "title": "All Divisions With the Highest Score of a Binary Array",
        "titleSlug": "all-divisions-with-the-highest-score-of-a-binary-array",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/all-divisions-with-the-highest-score-of-a-binary-array/description"
    },
    "2286": {
        "difficulty": "HARD",
        "id": 2286,
        "questionFrontendId": "2167",
        "title": "Minimum Time to Remove All Cars Containing Illegal Goods",
        "titleSlug": "minimum-time-to-remove-all-cars-containing-illegal-goods",
        "topicTags": [
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/minimum-time-to-remove-all-cars-containing-illegal-goods/description"
    },
    "2311": {
        "difficulty": "HARD",
        "id": 2311,
        "questionFrontendId": "2209",
        "title": "Minimum White Tiles After Covering With Carpets",
        "titleSlug": "minimum-white-tiles-after-covering-with-carpets",
        "topicTags": [
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Prefix Sum",
                "slug": "prefix-sum"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/minimum-white-tiles-after-covering-with-carpets/description"
    },
    "2314": {
        "difficulty": "MEDIUM",
        "id": 2314,
        "questionFrontendId": "2174",
        "title": "Remove All Ones With Row and Column Flips II",
        "titleSlug": "remove-all-ones-with-row-and-column-flips-ii",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Bit Manipulation",
                "slug": "bit-manipulation"
            },
            {
                "name": "Breadth-First Search",
                "slug": "breadth-first-search"
            },
            {
                "name": "Matrix",
                "slug": "matrix"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/remove-all-ones-with-row-and-column-flips-ii/description"
    },
    "2320": {
        "difficulty": "EASY",
        "id": 2320,
        "questionFrontendId": "2200",
        "title": "Find All K-Distant Indices in an Array",
        "titleSlug": "find-all-k-distant-indices-in-an-array",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Two Pointers",
                "slug": "two-pointers"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/find-all-k-distant-indices-in-an-array/description"
    },
    "2321": {
        "difficulty": "HARD",
        "id": 2321,
        "questionFrontendId": "2203",
        "title": "Minimum Weighted Subgraph With the Required Paths",
        "titleSlug": "minimum-weighted-subgraph-with-the-required-paths",
        "topicTags": [
            {
                "name": "Graph",
                "slug": "graph"
            },
            {
                "name": "Shortest Path",
                "slug": "shortest-path"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/minimum-weighted-subgraph-with-the-required-paths/description"
    },
    "2349": {
        "difficulty": "HARD",
        "id": 2349,
        "questionFrontendId": "2267",
        "title": " Check if There Is a Valid Parentheses String Path",
        "titleSlug": "check-if-there-is-a-valid-parentheses-string-path",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Matrix",
                "slug": "matrix"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/check-if-there-is-a-valid-parentheses-string-path/description"
    },
    "2367": {
        "difficulty": "MEDIUM",
        "id": 2367,
        "questionFrontendId": "2280",
        "title": "Minimum Lines to Represent a Line Chart",
        "titleSlug": "minimum-lines-to-represent-a-line-chart",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Geometry",
                "slug": "geometry"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            },
            {
                "name": "Number Theory",
                "slug": "number-theory"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/minimum-lines-to-represent-a-line-chart/description"
    },
    "2377": {
        "difficulty": "EASY",
        "id": 2377,
        "questionFrontendId": "2283",
        "title": "Check if Number Has Equal Digit Count and Digit Value",
        "titleSlug": "check-if-number-has-equal-digit-count-and-digit-value",
        "topicTags": [
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Counting",
                "slug": "counting"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/check-if-number-has-equal-digit-count-and-digit-value/description"
    },
    "2385": {
        "difficulty": "MEDIUM",
        "id": 2385,
        "questionFrontendId": "2237",
        "title": "Count Positions on Street With Required Brightness",
        "titleSlug": "count-positions-on-street-with-required-brightness",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Prefix Sum",
                "slug": "prefix-sum"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/count-positions-on-street-with-required-brightness/description"
    },
    "2435": {
        "difficulty": "HARD",
        "id": 2435,
        "questionFrontendId": "2350",
        "title": "Shortest Impossible Sequence of Rolls",
        "titleSlug": "shortest-impossible-sequence-of-rolls",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/shortest-impossible-sequence-of-rolls/description"
    },
    "2447": {
        "difficulty": "EASY",
        "id": 2447,
        "questionFrontendId": "2363",
        "title": "Merge Similar Items",
        "titleSlug": "merge-similar-items",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            },
            {
                "name": "Ordered Set",
                "slug": "ordered-set"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/merge-similar-items/description"
    },
    "2489": {
        "difficulty": "HARD",
        "id": 2489,
        "questionFrontendId": "2459",
        "title": "Sort Array by Moving Items to Empty Space",
        "titleSlug": "sort-array-by-moving-items-to-empty-space",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/sort-array-by-moving-items-to-empty-space/description"
    },
    "2506": {
        "difficulty": "HARD",
        "id": 2506,
        "questionFrontendId": "2371",
        "title": "Minimize Maximum Value in a Grid",
        "titleSlug": "minimize-maximum-value-in-a-grid",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Union Find",
                "slug": "union-find"
            },
            {
                "name": "Graph",
                "slug": "graph"
            },
            {
                "name": "Topological Sort",
                "slug": "topological-sort"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            },
            {
                "name": "Matrix",
                "slug": "matrix"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/minimize-maximum-value-in-a-grid/description"
    },
    "2550": {
        "difficulty": "MEDIUM",
        "id": 2550,
        "questionFrontendId": "2452",
        "title": "Words Within Two Edits of Dictionary",
        "titleSlug": "words-within-two-edits-of-dictionary",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "String",
                "slug": "string"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/words-within-two-edits-of-dictionary/description"
    },
    "2567": {
        "difficulty": "MEDIUM",
        "id": 2567,
        "questionFrontendId": "2476",
        "title": "Closest Nodes Queries in a Binary Search Tree",
        "titleSlug": "closest-nodes-queries-in-a-binary-search-tree",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Binary Search",
                "slug": "binary-search"
            },
            {
                "name": "Tree",
                "slug": "tree"
            },
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Binary Search Tree",
                "slug": "binary-search-tree"
            },
            {
                "name": "Binary Tree",
                "slug": "binary-tree"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/closest-nodes-queries-in-a-binary-search-tree/description"
    },
    "2625": {
        "difficulty": "MEDIUM",
        "id": 2625,
        "questionFrontendId": "2536",
        "title": "Increment Submatrices by One",
        "titleSlug": "increment-submatrices-by-one",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Matrix",
                "slug": "matrix"
            },
            {
                "name": "Prefix Sum",
                "slug": "prefix-sum"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/increment-submatrices-by-one/description"
    },
    "2653": {
        "difficulty": "MEDIUM",
        "id": 2653,
        "questionFrontendId": "2510",
        "title": "Check if There is a Path With Equal Number of 0's And 1's",
        "titleSlug": "check-if-there-is-a-path-with-equal-number-of-0s-and-1s",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Matrix",
                "slug": "matrix"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/check-if-there-is-a-path-with-equal-number-of-0s-and-1s/description"
    },
    "2707": {
        "difficulty": "EASY",
        "id": 2707,
        "questionFrontendId": "2570",
        "title": "Merge Two 2D Arrays by Summing Values",
        "titleSlug": "merge-two-2d-arrays-by-summing-values",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Two Pointers",
                "slug": "two-pointers"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/merge-two-2d-arrays-by-summing-values/description"
    },
    "2843": {
        "difficulty": "EASY",
        "id": 2843,
        "questionFrontendId": "2689",
        "title": "Extract Kth Character From The Rope Tree",
        "titleSlug": "extract-kth-character-from-the-rope-tree",
        "topicTags": [
            {
                "name": "Tree",
                "slug": "tree"
            },
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Binary Tree",
                "slug": "binary-tree"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/extract-kth-character-from-the-rope-tree/description"
    },
    "2875": {
        "difficulty": "EASY",
        "id": 2875,
        "questionFrontendId": "2728",
        "title": "Count Houses in a Circular Street",
        "titleSlug": "count-houses-in-a-circular-street",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Interactive",
                "slug": "interactive"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/count-houses-in-a-circular-street/description"
    },
    "3056": {
        "difficulty": "MEDIUM",
        "id": 3056,
        "questionFrontendId": "2849",
        "title": "Determine if a Cell Is Reachable at a Given Time",
        "titleSlug": "determine-if-a-cell-is-reachable-at-a-given-time",
        "topicTags": [
            {
                "name": "Math",
                "slug": "math"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/determine-if-a-cell-is-reachable-at-a-given-time/description"
    },
    "3178": {
        "difficulty": "MEDIUM",
        "id": 3178,
        "questionFrontendId": "2919",
        "title": "Minimum Increment Operations to Make Array Beautiful",
        "titleSlug": "minimum-increment-operations-to-make-array-beautiful",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/minimum-increment-operations-to-make-array-beautiful/description"
    },
    "3188": {
        "difficulty": "EASY",
        "id": 3188,
        "questionFrontendId": "2923",
        "title": "Find Champion I",
        "titleSlug": "find-champion-i",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Matrix",
                "slug": "matrix"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/find-champion-i/description"
    },
    "3189": {
        "difficulty": "MEDIUM",
        "id": 3189,
        "questionFrontendId": "2924",
        "title": "Find Champion II",
        "titleSlug": "find-champion-ii",
        "topicTags": [
            {
                "name": "Graph",
                "slug": "graph"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/find-champion-ii/description"
    },
    "3247": {
        "difficulty": "MEDIUM",
        "id": 3247,
        "questionFrontendId": "2955",
        "title": "Number of Same-End Substrings",
        "titleSlug": "number-of-same-end-substrings",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Counting",
                "slug": "counting"
            },
            {
                "name": "Prefix Sum",
                "slug": "prefix-sum"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/number-of-same-end-substrings/description"
    },
    "3259": {
        "difficulty": "MEDIUM",
        "id": 3259,
        "questionFrontendId": "3054",
        "title": "Binary Tree Nodes",
        "titleSlug": "binary-tree-nodes",
        "topicTags": [
            {
                "name": "Database",
                "slug": "database"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/binary-tree-nodes/description"
    },
    "3278": {
        "difficulty": "MEDIUM",
        "id": 3278,
        "questionFrontendId": "3025",
        "title": "Find the Number of Ways to Place People I",
        "titleSlug": "find-the-number-of-ways-to-place-people-i",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Geometry",
                "slug": "geometry"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            },
            {
                "name": "Enumeration",
                "slug": "enumeration"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/find-the-number-of-ways-to-place-people-i/description"
    },
    "3361": {
        "difficulty": "EASY",
        "id": 3361,
        "questionFrontendId": "3114",
        "title": "Latest Time You Can Obtain After Replacing Characters",
        "titleSlug": "latest-time-you-can-obtain-after-replacing-characters",
        "topicTags": [
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Enumeration",
                "slug": "enumeration"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/latest-time-you-can-obtain-after-replacing-characters/description"
    },
    "3364": {
        "difficulty": "HARD",
        "id": 3364,
        "questionFrontendId": "3117",
        "title": "Minimum Sum of Values by Dividing Array",
        "titleSlug": "minimum-sum-of-values-by-dividing-array",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Binary Search",
                "slug": "binary-search"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Bit Manipulation",
                "slug": "bit-manipulation"
            },
            {
                "name": "Segment Tree",
                "slug": "segment-tree"
            },
            {
                "name": "Queue",
                "slug": "queue"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/minimum-sum-of-values-by-dividing-array/description"
    },
    "2774": {
        "difficulty": "MEDIUM",
        "id": 2774,
        "questionFrontendId": "2700",
        "title": "Differences Between Two Objects",
        "titleSlug": "differences-between-two-objects",
        "topicTags": [],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/differences-between-two-objects/description"
    },
    "1497": {
        "difficulty": "MEDIUM",
        "id": 1497,
        "questionFrontendId": "1381",
        "title": "Design a Stack With Increment Operation",
        "titleSlug": "design-a-stack-with-increment-operation",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Stack",
                "slug": "stack"
            },
            {
                "name": "Design",
                "slug": "design"
            }
        ],
        "companyNames": [
            "google",
            "amazon"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/design-a-stack-with-increment-operation/description"
    },
    "2481": {
        "difficulty": "MEDIUM",
        "id": 2481,
        "questionFrontendId": "2396",
        "title": "Strictly Palindromic Number",
        "titleSlug": "strictly-palindromic-number",
        "topicTags": [
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Two Pointers",
                "slug": "two-pointers"
            },
            {
                "name": "Brainteaser",
                "slug": "brainteaser"
            }
        ],
        "companyNames": [
            "google",
            "amazon"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/strictly-palindromic-number/description"
    },
    "2617": {
        "difficulty": "HARD",
        "id": 2617,
        "questionFrontendId": "2534",
        "title": "Time Taken to Cross the Door",
        "titleSlug": "time-taken-to-cross-the-door",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Queue",
                "slug": "queue"
            },
            {
                "name": "Simulation",
                "slug": "simulation"
            }
        ],
        "companyNames": [
            "google",
            "amazon"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/time-taken-to-cross-the-door/description"
    },
    "2827": {
        "difficulty": "HARD",
        "id": 2827,
        "questionFrontendId": "2709",
        "title": "Greatest Common Divisor Traversal",
        "titleSlug": "greatest-common-divisor-traversal",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Union Find",
                "slug": "union-find"
            },
            {
                "name": "Number Theory",
                "slug": "number-theory"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/greatest-common-divisor-traversal/description"
    },
    "3076": {
        "difficulty": "EASY",
        "id": 3076,
        "questionFrontendId": "2878",
        "title": "Get the Size of a DataFrame",
        "titleSlug": "get-the-size-of-a-dataframe",
        "topicTags": [],
        "companyNames": [
            "google",
            "amazon"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/get-the-size-of-a-dataframe/description"
    },
    "3211": {
        "difficulty": "HARD",
        "id": 3211,
        "questionFrontendId": "2945",
        "title": "Find Maximum Non-decreasing Array Length",
        "titleSlug": "find-maximum-non-decreasing-array-length",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Binary Search",
                "slug": "binary-search"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Stack",
                "slug": "stack"
            },
            {
                "name": "Queue",
                "slug": "queue"
            },
            {
                "name": "Monotonic Stack",
                "slug": "monotonic-stack"
            },
            {
                "name": "Monotonic Queue",
                "slug": "monotonic-queue"
            }
        ],
        "companyNames": [
            "google",
            "amazon"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/find-maximum-non-decreasing-array-length/description"
    },
    "824": {
        "difficulty": "EASY",
        "id": 824,
        "questionFrontendId": "806",
        "title": "Number of Lines To Write String",
        "titleSlug": "number-of-lines-to-write-string",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "String",
                "slug": "string"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/number-of-lines-to-write-string/description"
    },
    "1063": {
        "difficulty": "MEDIUM",
        "id": 1063,
        "questionFrontendId": "1014",
        "title": "Best Sightseeing Pair",
        "titleSlug": "best-sightseeing-pair",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/best-sightseeing-pair/description"
    },
    "1099": {
        "difficulty": "MEDIUM",
        "id": 1099,
        "questionFrontendId": "1102",
        "title": "Path With Maximum Minimum Value",
        "titleSlug": "path-with-maximum-minimum-value",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Binary Search",
                "slug": "binary-search"
            },
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Breadth-First Search",
                "slug": "breadth-first-search"
            },
            {
                "name": "Union Find",
                "slug": "union-find"
            },
            {
                "name": "Heap (Priority Queue)",
                "slug": "heap-priority-queue"
            },
            {
                "name": "Matrix",
                "slug": "matrix"
            }
        ],
        "companyNames": [
            "google",
            "amazon"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/path-with-maximum-minimum-value/description"
    },
    "1220": {
        "difficulty": "HARD",
        "id": 1220,
        "questionFrontendId": "1125",
        "title": "Smallest Sufficient Team",
        "titleSlug": "smallest-sufficient-team",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Bit Manipulation",
                "slug": "bit-manipulation"
            },
            {
                "name": "Bitmask",
                "slug": "bitmask"
            }
        ],
        "companyNames": [
            "google",
            "amazon"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/smallest-sufficient-team/description"
    },
    "1885": {
        "difficulty": "MEDIUM",
        "id": 1885,
        "questionFrontendId": "1759",
        "title": "Count Number of Homogenous Substrings",
        "titleSlug": "count-number-of-homogenous-substrings",
        "topicTags": [
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "String",
                "slug": "string"
            }
        ],
        "companyNames": [
            "google",
            "amazon"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/count-number-of-homogenous-substrings/description"
    },
    "1907": {
        "difficulty": "HARD",
        "id": 1907,
        "questionFrontendId": "1803",
        "title": "Count Pairs With XOR in a Range",
        "titleSlug": "count-pairs-with-xor-in-a-range",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Bit Manipulation",
                "slug": "bit-manipulation"
            },
            {
                "name": "Trie",
                "slug": "trie"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/count-pairs-with-xor-in-a-range/description"
    },
    "1955": {
        "difficulty": "MEDIUM",
        "id": 1955,
        "questionFrontendId": "1845",
        "title": "Seat Reservation Manager",
        "titleSlug": "seat-reservation-manager",
        "topicTags": [
            {
                "name": "Design",
                "slug": "design"
            },
            {
                "name": "Heap (Priority Queue)",
                "slug": "heap-priority-queue"
            }
        ],
        "companyNames": [
            "google",
            "amazon"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/seat-reservation-manager/description"
    },
    "2107": {
        "difficulty": "MEDIUM",
        "id": 2107,
        "questionFrontendId": "1980",
        "title": "Find Unique Binary String",
        "titleSlug": "find-unique-binary-string",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Backtracking",
                "slug": "backtracking"
            }
        ],
        "companyNames": [
            "google",
            "amazon"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/find-unique-binary-string/description"
    },
    "2221": {
        "difficulty": "MEDIUM",
        "id": 2221,
        "questionFrontendId": "2116",
        "title": "Check if a Parentheses String Can Be Valid",
        "titleSlug": "check-if-a-parentheses-string-can-be-valid",
        "topicTags": [
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Stack",
                "slug": "stack"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            }
        ],
        "companyNames": [
            "google",
            "amazon"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/check-if-a-parentheses-string-can-be-valid/description"
    },
    "2507": {
        "difficulty": "EASY",
        "id": 2507,
        "questionFrontendId": "2427",
        "title": "Number of Common Factors",
        "titleSlug": "number-of-common-factors",
        "topicTags": [
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Enumeration",
                "slug": "enumeration"
            },
            {
                "name": "Number Theory",
                "slug": "number-theory"
            }
        ],
        "companyNames": [
            "google",
            "amazon"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/number-of-common-factors/description"
    },
    "3218": {
        "difficulty": "HARD",
        "id": 3218,
        "questionFrontendId": "2973",
        "title": "Find Number of Coins to Place in Tree Nodes",
        "titleSlug": "find-number-of-coins-to-place-in-tree-nodes",
        "topicTags": [
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Tree",
                "slug": "tree"
            },
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            },
            {
                "name": "Heap (Priority Queue)",
                "slug": "heap-priority-queue"
            }
        ],
        "companyNames": [
            "google",
            "amazon"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/find-number-of-coins-to-place-in-tree-nodes/description"
    },
    "157": {
        "difficulty": "EASY",
        "id": 157,
        "questionFrontendId": "157",
        "title": "Read N Characters Given Read4",
        "titleSlug": "read-n-characters-given-read4",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Simulation",
                "slug": "simulation"
            },
            {
                "name": "Interactive",
                "slug": "interactive"
            }
        ],
        "companyNames": [
            "google",
            "amazon"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/read-n-characters-given-read4/description"
    },
    "495": {
        "difficulty": "EASY",
        "id": 495,
        "questionFrontendId": "495",
        "title": "Teemo Attacking",
        "titleSlug": "teemo-attacking",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Simulation",
                "slug": "simulation"
            }
        ],
        "companyNames": [
            "google",
            "amazon"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/teemo-attacking/description"
    },
    "880": {
        "difficulty": "HARD",
        "id": 880,
        "questionFrontendId": "850",
        "title": "Rectangle Area II",
        "titleSlug": "rectangle-area-ii",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Segment Tree",
                "slug": "segment-tree"
            },
            {
                "name": "Line Sweep",
                "slug": "line-sweep"
            },
            {
                "name": "Ordered Set",
                "slug": "ordered-set"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/rectangle-area-ii/description"
    },
    "933": {
        "difficulty": "EASY",
        "id": 933,
        "questionFrontendId": "897",
        "title": "Increasing Order Search Tree",
        "titleSlug": "increasing-order-search-tree",
        "topicTags": [
            {
                "name": "Stack",
                "slug": "stack"
            },
            {
                "name": "Tree",
                "slug": "tree"
            },
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Binary Search Tree",
                "slug": "binary-search-tree"
            },
            {
                "name": "Binary Tree",
                "slug": "binary-tree"
            }
        ],
        "companyNames": [
            "google",
            "amazon"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/increasing-order-search-tree/description"
    },
    "1001": {
        "difficulty": "EASY",
        "id": 1001,
        "questionFrontendId": "961",
        "title": "N-Repeated Element in Size 2N Array",
        "titleSlug": "n-repeated-element-in-size-2n-array",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            }
        ],
        "companyNames": [
            "google",
            "amazon"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/n-repeated-element-in-size-2n-array/description"
    },
    "1093": {
        "difficulty": "HARD",
        "id": 1093,
        "questionFrontendId": "1028",
        "title": "Recover a Tree From Preorder Traversal",
        "titleSlug": "recover-a-tree-from-preorder-traversal",
        "topicTags": [
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Tree",
                "slug": "tree"
            },
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Binary Tree",
                "slug": "binary-tree"
            }
        ],
        "companyNames": [
            "google",
            "amazon"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/recover-a-tree-from-preorder-traversal/description"
    },
    "1145": {
        "difficulty": "HARD",
        "id": 1145,
        "questionFrontendId": "1074",
        "title": "Number of Submatrices That Sum to Target",
        "titleSlug": "number-of-submatrices-that-sum-to-target",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Matrix",
                "slug": "matrix"
            },
            {
                "name": "Prefix Sum",
                "slug": "prefix-sum"
            }
        ],
        "companyNames": [
            "google",
            "amazon"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/number-of-submatrices-that-sum-to-target/description"
    },
    "1389": {
        "difficulty": "HARD",
        "id": 1389,
        "questionFrontendId": "1263",
        "title": "Minimum Moves to Move a Box to Their Target Location",
        "titleSlug": "minimum-moves-to-move-a-box-to-their-target-location",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Breadth-First Search",
                "slug": "breadth-first-search"
            },
            {
                "name": "Heap (Priority Queue)",
                "slug": "heap-priority-queue"
            },
            {
                "name": "Matrix",
                "slug": "matrix"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/minimum-moves-to-move-a-box-to-their-target-location/description"
    },
    "1450": {
        "difficulty": "MEDIUM",
        "id": 1450,
        "questionFrontendId": "1325",
        "title": "Delete Leaves With a Given Value",
        "titleSlug": "delete-leaves-with-a-given-value",
        "topicTags": [
            {
                "name": "Tree",
                "slug": "tree"
            },
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Binary Tree",
                "slug": "binary-tree"
            }
        ],
        "companyNames": [
            "google",
            "amazon"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/delete-leaves-with-a-given-value/description"
    },
    "1513": {
        "difficulty": "HARD",
        "id": 1513,
        "questionFrontendId": "1397",
        "title": "Find All Good Strings",
        "titleSlug": "find-all-good-strings",
        "topicTags": [
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "String Matching",
                "slug": "string-matching"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/find-all-good-strings/description"
    },
    "2096": {
        "difficulty": "HARD",
        "id": 2096,
        "questionFrontendId": "1964",
        "title": "Find the Longest Valid Obstacle Course at Each Position",
        "titleSlug": "find-the-longest-valid-obstacle-course-at-each-position",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Binary Search",
                "slug": "binary-search"
            },
            {
                "name": "Binary Indexed Tree",
                "slug": "binary-indexed-tree"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/find-the-longest-valid-obstacle-course-at-each-position/description"
    },
    "2156": {
        "difficulty": "MEDIUM",
        "id": 2156,
        "questionFrontendId": "2029",
        "title": "Stone Game IX",
        "titleSlug": "stone-game-ix",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            },
            {
                "name": "Counting",
                "slug": "counting"
            },
            {
                "name": "Game Theory",
                "slug": "game-theory"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/stone-game-ix/description"
    },
    "2414": {
        "difficulty": "MEDIUM",
        "id": 2414,
        "questionFrontendId": "2337",
        "title": "Move Pieces to Obtain a String",
        "titleSlug": "move-pieces-to-obtain-a-string",
        "topicTags": [
            {
                "name": "Two Pointers",
                "slug": "two-pointers"
            },
            {
                "name": "String",
                "slug": "string"
            }
        ],
        "companyNames": [
            "google",
            "amazon"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/move-pieces-to-obtain-a-string/description"
    },
    "2444": {
        "difficulty": "MEDIUM",
        "id": 2444,
        "questionFrontendId": "2370",
        "title": "Longest Ideal Subsequence",
        "titleSlug": "longest-ideal-subsequence",
        "topicTags": [
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            }
        ],
        "companyNames": [
            "google",
            "amazon"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/longest-ideal-subsequence/description"
    },
    "2531": {
        "difficulty": "HARD",
        "id": 2531,
        "questionFrontendId": "2440",
        "title": "Create Components With Same Value",
        "titleSlug": "create-components-with-same-value",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Tree",
                "slug": "tree"
            },
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Enumeration",
                "slug": "enumeration"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/create-components-with-same-value/description"
    },
    "2855": {
        "difficulty": "MEDIUM",
        "id": 2855,
        "questionFrontendId": "2770",
        "title": "Maximum Number of Jumps to Reach the Last Index",
        "titleSlug": "maximum-number-of-jumps-to-reach-the-last-index",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/maximum-number-of-jumps-to-reach-the-last-index/description"
    },
    "2916": {
        "difficulty": "MEDIUM",
        "id": 2916,
        "questionFrontendId": "2811",
        "title": "Check if it is Possible to Split Array",
        "titleSlug": "check-if-it-is-possible-to-split-array",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/check-if-it-is-possible-to-split-array/description"
    },
    "2917": {
        "difficulty": "EASY",
        "id": 2917,
        "questionFrontendId": "2824",
        "title": "Count Pairs Whose Sum is Less than Target",
        "titleSlug": "count-pairs-whose-sum-is-less-than-target",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Two Pointers",
                "slug": "two-pointers"
            },
            {
                "name": "Binary Search",
                "slug": "binary-search"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ],
        "companyNames": [
            "google",
            "amazon"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/count-pairs-whose-sum-is-less-than-target/description"
    },
    "3307": {
        "difficulty": "HARD",
        "id": 3307,
        "questionFrontendId": "3068",
        "title": "Find the Maximum Sum of Node Values",
        "titleSlug": "find-the-maximum-sum-of-node-values",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            },
            {
                "name": "Bit Manipulation",
                "slug": "bit-manipulation"
            },
            {
                "name": "Tree",
                "slug": "tree"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/find-the-maximum-sum-of-node-values/description"
    },
    "3453": {
        "difficulty": "MEDIUM",
        "id": 3453,
        "questionFrontendId": "3211",
        "title": "Generate Binary Strings Without Adjacent Zeros",
        "titleSlug": "generate-binary-strings-without-adjacent-zeros",
        "topicTags": [
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Bit Manipulation",
                "slug": "bit-manipulation"
            },
            {
                "name": "Recursion",
                "slug": "recursion"
            }
        ],
        "companyNames": [
            "google",
            "amazon"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/generate-binary-strings-without-adjacent-zeros/description"
    },
    "3493": {
        "difficulty": "MEDIUM",
        "id": 3493,
        "questionFrontendId": "3228",
        "title": "Maximum Number of Operations to Move Ones to the End",
        "titleSlug": "maximum-number-of-operations-to-move-ones-to-the-end",
        "topicTags": [
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            },
            {
                "name": "Counting",
                "slug": "counting"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/maximum-number-of-operations-to-move-ones-to-the-end/description"
    },
    "248": {
        "difficulty": "HARD",
        "id": 248,
        "questionFrontendId": "248",
        "title": "Strobogrammatic Number III",
        "titleSlug": "strobogrammatic-number-iii",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Recursion",
                "slug": "recursion"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/strobogrammatic-number-iii/description"
    },
    "563": {
        "difficulty": "EASY",
        "id": 563,
        "questionFrontendId": "563",
        "title": "Binary Tree Tilt",
        "titleSlug": "binary-tree-tilt",
        "topicTags": [
            {
                "name": "Tree",
                "slug": "tree"
            },
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Binary Tree",
                "slug": "binary-tree"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/binary-tree-tilt/description"
    },
    "755": {
        "difficulty": "MEDIUM",
        "id": 755,
        "questionFrontendId": "754",
        "title": "Reach a Number",
        "titleSlug": "reach-a-number",
        "topicTags": [
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Binary Search",
                "slug": "binary-search"
            }
        ],
        "companyNames": [
            "google",
            "amazon"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/reach-a-number/description"
    },
    "791": {
        "difficulty": "MEDIUM",
        "id": 791,
        "questionFrontendId": "776",
        "title": "Split BST",
        "titleSlug": "split-bst",
        "topicTags": [
            {
                "name": "Tree",
                "slug": "tree"
            },
            {
                "name": "Binary Search Tree",
                "slug": "binary-search-tree"
            },
            {
                "name": "Recursion",
                "slug": "recursion"
            },
            {
                "name": "Binary Tree",
                "slug": "binary-tree"
            }
        ],
        "companyNames": [
            "google",
            "amazon"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/split-bst/description"
    },
    "825": {
        "difficulty": "MEDIUM",
        "id": 825,
        "questionFrontendId": "807",
        "title": "Max Increase to Keep City Skyline",
        "titleSlug": "max-increase-to-keep-city-skyline",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            },
            {
                "name": "Matrix",
                "slug": "matrix"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/max-increase-to-keep-city-skyline/description"
    },
    "928": {
        "difficulty": "EASY",
        "id": 928,
        "questionFrontendId": "892",
        "title": "Surface Area of 3D Shapes",
        "titleSlug": "surface-area-of-3d-shapes",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Geometry",
                "slug": "geometry"
            },
            {
                "name": "Matrix",
                "slug": "matrix"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/surface-area-of-3d-shapes/description"
    },
    "958": {
        "difficulty": "EASY",
        "id": 958,
        "questionFrontendId": "922",
        "title": "Sort Array By Parity II",
        "titleSlug": "sort-array-by-parity-ii",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Two Pointers",
                "slug": "two-pointers"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ],
        "companyNames": [
            "google",
            "amazon"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/sort-array-by-parity-ii/description"
    },
    "974": {
        "difficulty": "MEDIUM",
        "id": 974,
        "questionFrontendId": "937",
        "title": "Reorder Data in Log Files",
        "titleSlug": "reorder-data-in-log-files",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ],
        "companyNames": [
            "google",
            "amazon"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/reorder-data-in-log-files/description"
    },
    "1068": {
        "difficulty": "HARD",
        "id": 1068,
        "questionFrontendId": "1067",
        "title": "Digit Count in Range",
        "titleSlug": "digit-count-in-range",
        "topicTags": [
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            }
        ],
        "companyNames": [
            "google",
            "amazon"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/digit-count-in-range/description"
    },
    "1369": {
        "difficulty": "MEDIUM",
        "id": 1369,
        "questionFrontendId": "1247",
        "title": "Minimum Swaps to Make Strings Equal",
        "titleSlug": "minimum-swaps-to-make-strings-equal",
        "topicTags": [
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/minimum-swaps-to-make-strings-equal/description"
    },
    "1381": {
        "difficulty": "HARD",
        "id": 1381,
        "questionFrontendId": "1255",
        "title": "Maximum Score Words Formed by Letters",
        "titleSlug": "maximum-score-words-formed-by-letters",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Backtracking",
                "slug": "backtracking"
            },
            {
                "name": "Bit Manipulation",
                "slug": "bit-manipulation"
            },
            {
                "name": "Bitmask",
                "slug": "bitmask"
            }
        ],
        "companyNames": [
            "google",
            "amazon"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/maximum-score-words-formed-by-letters/description"
    },
    "1620": {
        "difficulty": "MEDIUM",
        "id": 1620,
        "questionFrontendId": "1497",
        "title": "Check If Array Pairs Are Divisible by k",
        "titleSlug": "check-if-array-pairs-are-divisible-by-k",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Counting",
                "slug": "counting"
            }
        ],
        "companyNames": [
            "google",
            "amazon"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/check-if-array-pairs-are-divisible-by-k/description"
    },
    "1710": {
        "difficulty": "HARD",
        "id": 1710,
        "questionFrontendId": "1606",
        "title": "Find Servers That Handled Most Number of Requests",
        "titleSlug": "find-servers-that-handled-most-number-of-requests",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            },
            {
                "name": "Heap (Priority Queue)",
                "slug": "heap-priority-queue"
            },
            {
                "name": "Ordered Set",
                "slug": "ordered-set"
            }
        ],
        "companyNames": [
            "google",
            "amazon"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/find-servers-that-handled-most-number-of-requests/description"
    },
    "1734": {
        "difficulty": "EASY",
        "id": 1734,
        "questionFrontendId": "1587",
        "title": "Bank Account Summary II",
        "titleSlug": "bank-account-summary-ii",
        "topicTags": [
            {
                "name": "Database",
                "slug": "database"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/bank-account-summary-ii/description"
    },
    "1814": {
        "difficulty": "MEDIUM",
        "id": 1814,
        "questionFrontendId": "1696",
        "title": "Jump Game VI",
        "titleSlug": "jump-game-vi",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Queue",
                "slug": "queue"
            },
            {
                "name": "Heap (Priority Queue)",
                "slug": "heap-priority-queue"
            },
            {
                "name": "Monotonic Queue",
                "slug": "monotonic-queue"
            }
        ],
        "companyNames": [
            "google",
            "amazon"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/jump-game-vi/description"
    },
    "1961": {
        "difficulty": "MEDIUM",
        "id": 1961,
        "questionFrontendId": "1833",
        "title": "Maximum Ice Cream Bars",
        "titleSlug": "maximum-ice-cream-bars",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ],
        "companyNames": [
            "google",
            "amazon"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/maximum-ice-cream-bars/description"
    },
    "2018": {
        "difficulty": "HARD",
        "id": 2018,
        "questionFrontendId": "1889",
        "title": "Minimum Space Wasted From Packaging",
        "titleSlug": "minimum-space-wasted-from-packaging",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Binary Search",
                "slug": "binary-search"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            },
            {
                "name": "Prefix Sum",
                "slug": "prefix-sum"
            }
        ],
        "companyNames": [
            "google",
            "amazon"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/minimum-space-wasted-from-packaging/description"
    },
    "2079": {
        "difficulty": "HARD",
        "id": 2079,
        "questionFrontendId": "1948",
        "title": "Delete Duplicate Folders in System",
        "titleSlug": "delete-duplicate-folders-in-system",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Trie",
                "slug": "trie"
            },
            {
                "name": "Hash Function",
                "slug": "hash-function"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/delete-duplicate-folders-in-system/description"
    },
    "2105": {
        "difficulty": "HARD",
        "id": 2105,
        "questionFrontendId": "1994",
        "title": "The Number of Good Subsets",
        "titleSlug": "the-number-of-good-subsets",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Bit Manipulation",
                "slug": "bit-manipulation"
            },
            {
                "name": "Bitmask",
                "slug": "bitmask"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/the-number-of-good-subsets/description"
    },
    "2112": {
        "difficulty": "EASY",
        "id": 2112,
        "questionFrontendId": "1984",
        "title": "Minimum Difference Between Highest and Lowest of K Scores",
        "titleSlug": "minimum-difference-between-highest-and-lowest-of-k-scores",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Sliding Window",
                "slug": "sliding-window"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ],
        "companyNames": [
            "google",
            "amazon"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/minimum-difference-between-highest-and-lowest-of-k-scores/description"
    },
    "2114": {
        "difficulty": "MEDIUM",
        "id": 2114,
        "questionFrontendId": "1986",
        "title": "Minimum Number of Work Sessions to Finish the Tasks",
        "titleSlug": "minimum-number-of-work-sessions-to-finish-the-tasks",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Backtracking",
                "slug": "backtracking"
            },
            {
                "name": "Bit Manipulation",
                "slug": "bit-manipulation"
            },
            {
                "name": "Bitmask",
                "slug": "bitmask"
            }
        ],
        "companyNames": [
            "google",
            "amazon"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/minimum-number-of-work-sessions-to-finish-the-tasks/description"
    },
    "2138": {
        "difficulty": "MEDIUM",
        "id": 2138,
        "questionFrontendId": "2012",
        "title": "Sum of Beauty in the Array",
        "titleSlug": "sum-of-beauty-in-the-array",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            }
        ],
        "companyNames": [
            "google",
            "amazon"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/sum-of-beauty-in-the-array/description"
    },
    "2151": {
        "difficulty": "MEDIUM",
        "id": 2151,
        "questionFrontendId": "2039",
        "title": "The Time When the Network Becomes Idle",
        "titleSlug": "the-time-when-the-network-becomes-idle",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Breadth-First Search",
                "slug": "breadth-first-search"
            },
            {
                "name": "Graph",
                "slug": "graph"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/the-time-when-the-network-becomes-idle/description"
    },
    "2163": {
        "difficulty": "EASY",
        "id": 2163,
        "questionFrontendId": "2053",
        "title": "Kth Distinct String in an Array",
        "titleSlug": "kth-distinct-string-in-an-array",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Counting",
                "slug": "counting"
            }
        ],
        "companyNames": [
            "google",
            "amazon"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/kth-distinct-string-in-an-array/description"
    },
    "2200": {
        "difficulty": "HARD",
        "id": 2200,
        "questionFrontendId": "2132",
        "title": "Stamping the Grid",
        "titleSlug": "stamping-the-grid",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            },
            {
                "name": "Matrix",
                "slug": "matrix"
            },
            {
                "name": "Prefix Sum",
                "slug": "prefix-sum"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/stamping-the-grid/description"
    },
    "2212": {
        "difficulty": "MEDIUM",
        "id": 2212,
        "questionFrontendId": "2091",
        "title": "Removing Minimum and Maximum From Array",
        "titleSlug": "removing-minimum-and-maximum-from-array",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            }
        ],
        "companyNames": [
            "google",
            "amazon"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/removing-minimum-and-maximum-from-array/description"
    },
    "2240": {
        "difficulty": "MEDIUM",
        "id": 2240,
        "questionFrontendId": "2121",
        "title": "Intervals Between Identical Elements",
        "titleSlug": "intervals-between-identical-elements",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Prefix Sum",
                "slug": "prefix-sum"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/intervals-between-identical-elements/description"
    },
    "2262": {
        "difficulty": "MEDIUM",
        "id": 2262,
        "questionFrontendId": "2140",
        "title": "Solving Questions With Brainpower",
        "titleSlug": "solving-questions-with-brainpower",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            }
        ],
        "companyNames": [
            "google",
            "amazon"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/solving-questions-with-brainpower/description"
    },
    "2346": {
        "difficulty": "EASY",
        "id": 2346,
        "questionFrontendId": "2264",
        "title": "Largest 3-Same-Digit Number in String",
        "titleSlug": "largest-3-same-digit-number-in-string",
        "topicTags": [
            {
                "name": "String",
                "slug": "string"
            }
        ],
        "companyNames": [
            "google",
            "amazon"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/largest-3-same-digit-number-in-string/description"
    },
    "2429": {
        "difficulty": "MEDIUM",
        "id": 2429,
        "questionFrontendId": "2353",
        "title": "Design a Food Rating System",
        "titleSlug": "design-a-food-rating-system",
        "topicTags": [
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Design",
                "slug": "design"
            },
            {
                "name": "Heap (Priority Queue)",
                "slug": "heap-priority-queue"
            },
            {
                "name": "Ordered Set",
                "slug": "ordered-set"
            }
        ],
        "companyNames": [
            "google",
            "amazon"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/design-a-food-rating-system/description"
    },
    "2511": {
        "difficulty": "MEDIUM",
        "id": 2511,
        "questionFrontendId": "2522",
        "title": "Partition String Into Substrings With Values at Most K",
        "titleSlug": "partition-string-into-substrings-with-values-at-most-k",
        "topicTags": [
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/partition-string-into-substrings-with-values-at-most-k/description"
    },
    "2551": {
        "difficulty": "EASY",
        "id": 2551,
        "questionFrontendId": "2460",
        "title": "Apply Operations to an Array",
        "titleSlug": "apply-operations-to-an-array",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Two Pointers",
                "slug": "two-pointers"
            },
            {
                "name": "Simulation",
                "slug": "simulation"
            }
        ],
        "companyNames": [
            "google",
            "amazon"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/apply-operations-to-an-array/description"
    },
    "2564": {
        "difficulty": "MEDIUM",
        "id": 2564,
        "questionFrontendId": "2467",
        "title": "Most Profitable Path in a Tree",
        "titleSlug": "most-profitable-path-in-a-tree",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Tree",
                "slug": "tree"
            },
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Breadth-First Search",
                "slug": "breadth-first-search"
            },
            {
                "name": "Graph",
                "slug": "graph"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/most-profitable-path-in-a-tree/description"
    },
    "2652": {
        "difficulty": "HARD",
        "id": 2652,
        "questionFrontendId": "2581",
        "title": "Count Number of Possible Root Nodes",
        "titleSlug": "count-number-of-possible-root-nodes",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Tree",
                "slug": "tree"
            },
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/count-number-of-possible-root-nodes/description"
    },
    "2696": {
        "difficulty": "MEDIUM",
        "id": 2696,
        "questionFrontendId": "2597",
        "title": "The Number of Beautiful Subsets",
        "titleSlug": "the-number-of-beautiful-subsets",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Backtracking",
                "slug": "backtracking"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            },
            {
                "name": "Combinatorics",
                "slug": "combinatorics"
            }
        ],
        "companyNames": [
            "google",
            "amazon"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/the-number-of-beautiful-subsets/description"
    },
    "2699": {
        "difficulty": "MEDIUM",
        "id": 2699,
        "questionFrontendId": "2563",
        "title": "Count the Number of Fair Pairs",
        "titleSlug": "count-the-number-of-fair-pairs",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Two Pointers",
                "slug": "two-pointers"
            },
            {
                "name": "Binary Search",
                "slug": "binary-search"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ],
        "companyNames": [
            "google",
            "amazon"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/count-the-number-of-fair-pairs/description"
    },
    "2735": {
        "difficulty": "MEDIUM",
        "id": 2735,
        "questionFrontendId": "2628",
        "title": "JSON Deep Equal",
        "titleSlug": "json-deep-equal",
        "topicTags": [],
        "companyNames": [
            "google",
            "amazon"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/json-deep-equal/description"
    },
    "2736": {
        "difficulty": "MEDIUM",
        "id": 2736,
        "questionFrontendId": "2645",
        "title": "Minimum Additions to Make Valid String",
        "titleSlug": "minimum-additions-to-make-valid-string",
        "topicTags": [
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Stack",
                "slug": "stack"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/minimum-additions-to-make-valid-string/description"
    },
    "2745": {
        "difficulty": "MEDIUM",
        "id": 2745,
        "questionFrontendId": "2633",
        "title": "Convert Object to JSON String",
        "titleSlug": "convert-object-to-json-string",
        "topicTags": [],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/convert-object-to-json-string/description"
    },
    "2760": {
        "difficulty": "MEDIUM",
        "id": 2760,
        "questionFrontendId": "2624",
        "title": "Snail Traversal",
        "titleSlug": "snail-traversal",
        "topicTags": [],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/snail-traversal/description"
    },
    "2762": {
        "difficulty": "MEDIUM",
        "id": 2762,
        "questionFrontendId": "2622",
        "title": "Cache With Time Limit",
        "titleSlug": "cache-with-time-limit",
        "topicTags": [],
        "companyNames": [
            "google",
            "amazon"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/cache-with-time-limit/description"
    },
    "2789": {
        "difficulty": "EASY",
        "id": 2789,
        "questionFrontendId": "2665",
        "title": "Counter II",
        "titleSlug": "counter-ii",
        "topicTags": [],
        "companyNames": [
            "google",
            "amazon"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/counter-ii/description"
    },
    "2802": {
        "difficulty": "MEDIUM",
        "id": 2802,
        "questionFrontendId": "2698",
        "title": "Find the Punishment Number of an Integer",
        "titleSlug": "find-the-punishment-number-of-an-integer",
        "topicTags": [
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Backtracking",
                "slug": "backtracking"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/find-the-punishment-number-of-an-integer/description"
    },
    "2846": {
        "difficulty": "HARD",
        "id": 2846,
        "questionFrontendId": "2751",
        "title": "Robot Collisions",
        "titleSlug": "robot-collisions",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Stack",
                "slug": "stack"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            },
            {
                "name": "Simulation",
                "slug": "simulation"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/robot-collisions/description"
    },
    "2870": {
        "difficulty": "EASY",
        "id": 2870,
        "questionFrontendId": "2765",
        "title": "Longest Alternating Subarray",
        "titleSlug": "longest-alternating-subarray",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Enumeration",
                "slug": "enumeration"
            }
        ],
        "companyNames": [
            "google",
            "amazon"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/longest-alternating-subarray/description"
    },
    "2887": {
        "difficulty": "MEDIUM",
        "id": 2887,
        "questionFrontendId": "2785",
        "title": "Sort Vowels in a String",
        "titleSlug": "sort-vowels-in-a-string",
        "topicTags": [
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ],
        "companyNames": [
            "google",
            "amazon"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/sort-vowels-in-a-string/description"
    },
    "2952": {
        "difficulty": "HARD",
        "id": 2952,
        "questionFrontendId": "2809",
        "title": "Minimum Time to Make Array Sum At Most x",
        "titleSlug": "minimum-time-to-make-array-sum-at-most-x",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/minimum-time-to-make-array-sum-at-most-x/description"
    },
    "3025": {
        "difficulty": "HARD",
        "id": 3025,
        "questionFrontendId": "2835",
        "title": "Minimum Operations to Form Subsequence With Target Sum",
        "titleSlug": "minimum-operations-to-form-subsequence-with-target-sum",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            },
            {
                "name": "Bit Manipulation",
                "slug": "bit-manipulation"
            }
        ],
        "companyNames": [
            "google",
            "amazon"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/minimum-operations-to-form-subsequence-with-target-sum/description"
    },
    "3033": {
        "difficulty": "MEDIUM",
        "id": 3033,
        "questionFrontendId": "2896",
        "title": "Apply Operations to Make Two Strings Equal",
        "titleSlug": "apply-operations-to-make-two-strings-equal",
        "topicTags": [
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/apply-operations-to-make-two-strings-equal/description"
    },
    "3071": {
        "difficulty": "EASY",
        "id": 3071,
        "questionFrontendId": "2882",
        "title": "Drop Duplicate Rows",
        "titleSlug": "drop-duplicate-rows",
        "topicTags": [],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/drop-duplicate-rows/description"
    },
    "3276": {
        "difficulty": "MEDIUM",
        "id": 3276,
        "questionFrontendId": "3016",
        "title": "Minimum Number of Pushes to Type Word II",
        "titleSlug": "minimum-number-of-pushes-to-type-word-ii",
        "topicTags": [
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            },
            {
                "name": "Counting",
                "slug": "counting"
            }
        ],
        "companyNames": [
            "google",
            "amazon"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/minimum-number-of-pushes-to-type-word-ii/description"
    },
    "3316": {
        "difficulty": "HARD",
        "id": 3316,
        "questionFrontendId": "3098",
        "title": "Find the Sum of Subsequence Powers",
        "titleSlug": "find-the-sum-of-subsequence-powers",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/find-the-sum-of-subsequence-powers/description"
    },
    "3345": {
        "difficulty": "HARD",
        "id": 3345,
        "questionFrontendId": "3082",
        "title": "Find the Sum of the Power of All Subsequences",
        "titleSlug": "find-the-sum-of-the-power-of-all-subsequences",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/find-the-sum-of-the-power-of-all-subsequences/description"
    },
    "3351": {
        "difficulty": "MEDIUM",
        "id": 3351,
        "questionFrontendId": "3075",
        "title": "Maximize Happiness of Selected Children",
        "titleSlug": "maximize-happiness-of-selected-children",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ],
        "companyNames": [
            "google",
            "amazon"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/maximize-happiness-of-selected-children/description"
    },
    "3388": {
        "difficulty": "MEDIUM",
        "id": 3388,
        "questionFrontendId": "3128",
        "title": "Right Triangles",
        "titleSlug": "right-triangles",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Combinatorics",
                "slug": "combinatorics"
            },
            {
                "name": "Counting",
                "slug": "counting"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/right-triangles/description"
    },
    "3427": {
        "difficulty": "MEDIUM",
        "id": 3427,
        "questionFrontendId": "3152",
        "title": "Special Array II",
        "titleSlug": "special-array-ii",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Binary Search",
                "slug": "binary-search"
            },
            {
                "name": "Prefix Sum",
                "slug": "prefix-sum"
            }
        ],
        "companyNames": [
            "google",
            "amazon"
        ],
        "frequencyCount": 2,
        "url": "https://leetcode.com/problems/special-array-ii/description"
    },
    "3447": {
        "difficulty": "EASY",
        "id": 3447,
        "questionFrontendId": "3174",
        "title": "Clear Digits",
        "titleSlug": "clear-digits",
        "topicTags": [
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Stack",
                "slug": "stack"
            },
            {
                "name": "Simulation",
                "slug": "simulation"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/clear-digits/description"
    },
    "3454": {
        "difficulty": "HARD",
        "id": 3454,
        "questionFrontendId": "3229",
        "title": "Minimum Operations to Make Array Equal to Target",
        "titleSlug": "minimum-operations-to-make-array-equal-to-target",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Stack",
                "slug": "stack"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            },
            {
                "name": "Monotonic Stack",
                "slug": "monotonic-stack"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/minimum-operations-to-make-array-equal-to-target/description"
    },
    "3460": {
        "difficulty": "HARD",
        "id": 3460,
        "questionFrontendId": "3193",
        "title": "Count the Number of Inversions",
        "titleSlug": "count-the-number-of-inversions",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/count-the-number-of-inversions/description"
    },
    "3463": {
        "difficulty": "EASY",
        "id": 3463,
        "questionFrontendId": "3206",
        "title": "Alternating Groups I",
        "titleSlug": "alternating-groups-i",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Sliding Window",
                "slug": "sliding-window"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/alternating-groups-i/description"
    },
    "3507": {
        "difficulty": "MEDIUM",
        "id": 3507,
        "questionFrontendId": "3233",
        "title": "Find the Count of Numbers Which Are Not Special",
        "titleSlug": "find-the-count-of-numbers-which-are-not-special",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Number Theory",
                "slug": "number-theory"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/find-the-count-of-numbers-which-are-not-special/description"
    },
    "3552": {
        "difficulty": "HARD",
        "id": 3552,
        "questionFrontendId": "3260",
        "title": "Find the Largest Palindrome Divisible by K",
        "titleSlug": "find-the-largest-palindrome-divisible-by-k",
        "topicTags": [
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            },
            {
                "name": "Number Theory",
                "slug": "number-theory"
            }
        ],
        "companyNames": [
            "google"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/find-the-largest-palindrome-divisible-by-k/description"
    },
    "2474": {
        "difficulty": "MEDIUM",
        "id": 2474,
        "questionFrontendId": "2340",
        "title": "Minimum Adjacent Swaps to Make a Valid Array",
        "titleSlug": "minimum-adjacent-swaps-to-make-a-valid-array",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/minimum-adjacent-swaps-to-make-a-valid-array/description"
    },
    "2405": {
        "difficulty": "MEDIUM",
        "id": 2405,
        "questionFrontendId": "2268",
        "title": "Minimum Number of Keypresses",
        "titleSlug": "minimum-number-of-keypresses",
        "topicTags": [
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            },
            {
                "name": "Counting",
                "slug": "counting"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/minimum-number-of-keypresses/description"
    },
    "2490": {
        "difficulty": "HARD",
        "id": 2490,
        "questionFrontendId": "2355",
        "title": "Maximum Number of Books You Can Take",
        "titleSlug": "maximum-number-of-books-you-can-take",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Stack",
                "slug": "stack"
            },
            {
                "name": "Monotonic Stack",
                "slug": "monotonic-stack"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/maximum-number-of-books-you-can-take/description"
    },
    "2325": {
        "difficulty": "MEDIUM",
        "id": 2325,
        "questionFrontendId": "2222",
        "title": "Number of Ways to Select Buildings",
        "titleSlug": "number-of-ways-to-select-buildings",
        "topicTags": [
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Prefix Sum",
                "slug": "prefix-sum"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/number-of-ways-to-select-buildings/description"
    },
    "2362": {
        "difficulty": "MEDIUM",
        "id": 2362,
        "questionFrontendId": "2244",
        "title": "Minimum Rounds to Complete All Tasks",
        "titleSlug": "minimum-rounds-to-complete-all-tasks",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            },
            {
                "name": "Counting",
                "slug": "counting"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/minimum-rounds-to-complete-all-tasks/description"
    },
    "2658": {
        "difficulty": "HARD",
        "id": 2658,
        "questionFrontendId": "2519",
        "title": "Count the Number of K-Big Indices",
        "titleSlug": "count-the-number-of-k-big-indices",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Binary Search",
                "slug": "binary-search"
            },
            {
                "name": "Divide and Conquer",
                "slug": "divide-and-conquer"
            },
            {
                "name": "Binary Indexed Tree",
                "slug": "binary-indexed-tree"
            },
            {
                "name": "Segment Tree",
                "slug": "segment-tree"
            },
            {
                "name": "Merge Sort",
                "slug": "merge-sort"
            },
            {
                "name": "Ordered Set",
                "slug": "ordered-set"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/count-the-number-of-k-big-indices/description"
    },
    "2324": {
        "difficulty": "MEDIUM",
        "id": 2324,
        "questionFrontendId": "2221",
        "title": "Find Triangular Sum of an Array",
        "titleSlug": "find-triangular-sum-of-an-array",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Simulation",
                "slug": "simulation"
            },
            {
                "name": "Combinatorics",
                "slug": "combinatorics"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/find-triangular-sum-of-an-array/description"
    },
    "3018": {
        "difficulty": "MEDIUM",
        "id": 3018,
        "questionFrontendId": "2825",
        "title": "Make String a Subsequence Using Cyclic Increments",
        "titleSlug": "make-string-a-subsequence-using-cyclic-increments",
        "topicTags": [
            {
                "name": "Two Pointers",
                "slug": "two-pointers"
            },
            {
                "name": "String",
                "slug": "string"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/make-string-a-subsequence-using-cyclic-increments/description"
    },
    "2342": {
        "difficulty": "MEDIUM",
        "id": 2342,
        "questionFrontendId": "2256",
        "title": "Minimum Average Difference",
        "titleSlug": "minimum-average-difference",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Prefix Sum",
                "slug": "prefix-sum"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/minimum-average-difference/description"
    },
    "2373": {
        "difficulty": "MEDIUM",
        "id": 2373,
        "questionFrontendId": "2288",
        "title": "Apply Discount to Prices",
        "titleSlug": "apply-discount-to-prices",
        "topicTags": [
            {
                "name": "String",
                "slug": "string"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/apply-discount-to-prices/description"
    },
    "1366": {
        "difficulty": "MEDIUM",
        "id": 1366,
        "questionFrontendId": "1429",
        "title": "First Unique Number",
        "titleSlug": "first-unique-number",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Design",
                "slug": "design"
            },
            {
                "name": "Queue",
                "slug": "queue"
            },
            {
                "name": "Data Stream",
                "slug": "data-stream"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/first-unique-number/description"
    },
    "2354": {
        "difficulty": "MEDIUM",
        "id": 2354,
        "questionFrontendId": "2214",
        "title": "Minimum Health to Beat Game",
        "titleSlug": "minimum-health-to-beat-game",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/minimum-health-to-beat-game/description"
    },
    "2387": {
        "difficulty": "MEDIUM",
        "id": 2387,
        "questionFrontendId": "2294",
        "title": "Partition Array Such That Maximum Difference Is K",
        "titleSlug": "partition-array-such-that-maximum-difference-is-k",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/partition-array-such-that-maximum-difference-is-k/description"
    },
    "738": {
        "difficulty": "MEDIUM",
        "id": 738,
        "questionFrontendId": "738",
        "title": "Monotone Increasing Digits",
        "titleSlug": "monotone-increasing-digits",
        "topicTags": [
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/monotone-increasing-digits/description"
    },
    "994": {
        "difficulty": "MEDIUM",
        "id": 994,
        "questionFrontendId": "957",
        "title": "Prison Cells After N Days",
        "titleSlug": "prison-cells-after-n-days",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Bit Manipulation",
                "slug": "bit-manipulation"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/prison-cells-after-n-days/description"
    },
    "1172": {
        "difficulty": "EASY",
        "id": 1172,
        "questionFrontendId": "1082",
        "title": "Sales Analysis I",
        "titleSlug": "sales-analysis-i",
        "topicTags": [
            {
                "name": "Database",
                "slug": "database"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/sales-analysis-i/description"
    },
    "1694": {
        "difficulty": "MEDIUM",
        "id": 1694,
        "questionFrontendId": "1590",
        "title": "Make Sum Divisible by P",
        "titleSlug": "make-sum-divisible-by-p",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Prefix Sum",
                "slug": "prefix-sum"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/make-sum-divisible-by-p/description"
    },
    "2372": {
        "difficulty": "EASY",
        "id": 2372,
        "questionFrontendId": "2287",
        "title": "Rearrange Characters to Make Target String",
        "titleSlug": "rearrange-characters-to-make-target-string",
        "topicTags": [
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Counting",
                "slug": "counting"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/rearrange-characters-to-make-target-string/description"
    },
    "3275": {
        "difficulty": "EASY",
        "id": 3275,
        "questionFrontendId": "3014",
        "title": "Minimum Number of Pushes to Type Word I",
        "titleSlug": "minimum-number-of-pushes-to-type-word-i",
        "topicTags": [
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/minimum-number-of-pushes-to-type-word-i/description"
    },
    "1059": {
        "difficulty": "MEDIUM",
        "id": 1059,
        "questionFrontendId": "1060",
        "title": "Missing Element in Sorted Array",
        "titleSlug": "missing-element-in-sorted-array",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Binary Search",
                "slug": "binary-search"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/missing-element-in-sorted-array/description"
    },
    "1100": {
        "difficulty": "MEDIUM",
        "id": 1100,
        "questionFrontendId": "1135",
        "title": "Connecting Cities With Minimum Cost",
        "titleSlug": "connecting-cities-with-minimum-cost",
        "topicTags": [
            {
                "name": "Union Find",
                "slug": "union-find"
            },
            {
                "name": "Graph",
                "slug": "graph"
            },
            {
                "name": "Heap (Priority Queue)",
                "slug": "heap-priority-queue"
            },
            {
                "name": "Minimum Spanning Tree",
                "slug": "minimum-spanning-tree"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/connecting-cities-with-minimum-cost/description"
    },
    "1524": {
        "difficulty": "EASY",
        "id": 1524,
        "questionFrontendId": "1408",
        "title": "String Matching in an Array",
        "titleSlug": "string-matching-in-an-array",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "String Matching",
                "slug": "string-matching"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/string-matching-in-an-array/description"
    },
    "1624": {
        "difficulty": "MEDIUM",
        "id": 1624,
        "questionFrontendId": "1485",
        "title": "Clone Binary Tree With Random Pointer",
        "titleSlug": "clone-binary-tree-with-random-pointer",
        "topicTags": [
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Tree",
                "slug": "tree"
            },
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Breadth-First Search",
                "slug": "breadth-first-search"
            },
            {
                "name": "Binary Tree",
                "slug": "binary-tree"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/clone-binary-tree-with-random-pointer/description"
    },
    "1644": {
        "difficulty": "HARD",
        "id": 1644,
        "questionFrontendId": "1520",
        "title": "Maximum Number of Non-Overlapping Substrings",
        "titleSlug": "maximum-number-of-non-overlapping-substrings",
        "topicTags": [
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/maximum-number-of-non-overlapping-substrings/description"
    },
    "1679": {
        "difficulty": "MEDIUM",
        "id": 1679,
        "questionFrontendId": "1574",
        "title": "Shortest Subarray to be Removed to Make Array Sorted",
        "titleSlug": "shortest-subarray-to-be-removed-to-make-array-sorted",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Two Pointers",
                "slug": "two-pointers"
            },
            {
                "name": "Binary Search",
                "slug": "binary-search"
            },
            {
                "name": "Stack",
                "slug": "stack"
            },
            {
                "name": "Monotonic Stack",
                "slug": "monotonic-stack"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/shortest-subarray-to-be-removed-to-make-array-sorted/description"
    },
    "2205": {
        "difficulty": "MEDIUM",
        "id": 2205,
        "questionFrontendId": "2100",
        "title": "Find Good Days to Rob the Bank",
        "titleSlug": "find-good-days-to-rob-the-bank",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Prefix Sum",
                "slug": "prefix-sum"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/find-good-days-to-rob-the-bank/description"
    },
    "2207": {
        "difficulty": "HARD",
        "id": 2207,
        "questionFrontendId": "2102",
        "title": "Sequentially Ordinal Rank Tracker",
        "titleSlug": "sequentially-ordinal-rank-tracker",
        "topicTags": [
            {
                "name": "Design",
                "slug": "design"
            },
            {
                "name": "Heap (Priority Queue)",
                "slug": "heap-priority-queue"
            },
            {
                "name": "Data Stream",
                "slug": "data-stream"
            },
            {
                "name": "Ordered Set",
                "slug": "ordered-set"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/sequentially-ordinal-rank-tracker/description"
    },
    "2326": {
        "difficulty": "HARD",
        "id": 2326,
        "questionFrontendId": "2223",
        "title": "Sum of Scores of Built Strings",
        "titleSlug": "sum-of-scores-of-built-strings",
        "topicTags": [
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Binary Search",
                "slug": "binary-search"
            },
            {
                "name": "Rolling Hash",
                "slug": "rolling-hash"
            },
            {
                "name": "Suffix Array",
                "slug": "suffix-array"
            },
            {
                "name": "String Matching",
                "slug": "string-matching"
            },
            {
                "name": "Hash Function",
                "slug": "hash-function"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/sum-of-scores-of-built-strings/description"
    },
    "2355": {
        "difficulty": "MEDIUM",
        "id": 2355,
        "questionFrontendId": "2274",
        "title": "Maximum Consecutive Floors Without Special Floors",
        "titleSlug": "maximum-consecutive-floors-without-special-floors",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/maximum-consecutive-floors-without-special-floors/description"
    },
    "2433": {
        "difficulty": "EASY",
        "id": 2433,
        "questionFrontendId": "2347",
        "title": "Best Poker Hand",
        "titleSlug": "best-poker-hand",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Counting",
                "slug": "counting"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/best-poker-hand/description"
    },
    "2458": {
        "difficulty": "MEDIUM",
        "id": 2458,
        "questionFrontendId": "2323",
        "title": "Find Minimum Time to Finish All Jobs II",
        "titleSlug": "find-minimum-time-to-finish-all-jobs-ii",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/find-minimum-time-to-finish-all-jobs-ii/description"
    },
    "2462": {
        "difficulty": "HARD",
        "id": 2462,
        "questionFrontendId": "2386",
        "title": "Find the K-Sum of an Array",
        "titleSlug": "find-the-k-sum-of-an-array",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            },
            {
                "name": "Heap (Priority Queue)",
                "slug": "heap-priority-queue"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/find-the-k-sum-of-an-array/description"
    },
    "2834": {
        "difficulty": "MEDIUM",
        "id": 2834,
        "questionFrontendId": "2766",
        "title": "Relocate Marbles",
        "titleSlug": "relocate-marbles",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            },
            {
                "name": "Simulation",
                "slug": "simulation"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/relocate-marbles/description"
    },
    "2921": {
        "difficulty": "HARD",
        "id": 2921,
        "questionFrontendId": "2801",
        "title": "Count Stepping Numbers in Range",
        "titleSlug": "count-stepping-numbers-in-range",
        "topicTags": [
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/count-stepping-numbers-in-range/description"
    },
    "517": {
        "difficulty": "HARD",
        "id": 517,
        "questionFrontendId": "517",
        "title": "Super Washing Machines",
        "titleSlug": "super-washing-machines",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/super-washing-machines/description"
    },
    "537": {
        "difficulty": "MEDIUM",
        "id": 537,
        "questionFrontendId": "537",
        "title": "Complex Number Multiplication",
        "titleSlug": "complex-number-multiplication",
        "topicTags": [
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Simulation",
                "slug": "simulation"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/complex-number-multiplication/description"
    },
    "767": {
        "difficulty": "EASY",
        "id": 767,
        "questionFrontendId": "762",
        "title": "Prime Number of Set Bits in Binary Representation",
        "titleSlug": "prime-number-of-set-bits-in-binary-representation",
        "topicTags": [
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Bit Manipulation",
                "slug": "bit-manipulation"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/prime-number-of-set-bits-in-binary-representation/description"
    },
    "1089": {
        "difficulty": "EASY",
        "id": 1089,
        "questionFrontendId": "1119",
        "title": "Remove Vowels from a String",
        "titleSlug": "remove-vowels-from-a-string",
        "topicTags": [
            {
                "name": "String",
                "slug": "string"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/remove-vowels-from-a-string/description"
    },
    "1173": {
        "difficulty": "EASY",
        "id": 1173,
        "questionFrontendId": "1083",
        "title": "Sales Analysis II",
        "titleSlug": "sales-analysis-ii",
        "topicTags": [
            {
                "name": "Database",
                "slug": "database"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/sales-analysis-ii/description"
    },
    "1174": {
        "difficulty": "EASY",
        "id": 1174,
        "questionFrontendId": "1084",
        "title": "Sales Analysis III",
        "titleSlug": "sales-analysis-iii",
        "topicTags": [
            {
                "name": "Database",
                "slug": "database"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/sales-analysis-iii/description"
    },
    "1222": {
        "difficulty": "MEDIUM",
        "id": 1222,
        "questionFrontendId": "1288",
        "title": "Remove Covered Intervals",
        "titleSlug": "remove-covered-intervals",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/remove-covered-intervals/description"
    },
    "1462": {
        "difficulty": "EASY",
        "id": 1462,
        "questionFrontendId": "1327",
        "title": "List the Products Ordered in a Period",
        "titleSlug": "list-the-products-ordered-in-a-period",
        "topicTags": [
            {
                "name": "Database",
                "slug": "database"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/list-the-products-ordered-in-a-period/description"
    },
    "1718": {
        "difficulty": "EASY",
        "id": 1718,
        "questionFrontendId": "1571",
        "title": "Warehouse Manager",
        "titleSlug": "warehouse-manager",
        "topicTags": [
            {
                "name": "Database",
                "slug": "database"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/warehouse-manager/description"
    },
    "1768": {
        "difficulty": "MEDIUM",
        "id": 1768,
        "questionFrontendId": "1628",
        "title": "Design an Expression Tree With Evaluate Function",
        "titleSlug": "design-an-expression-tree-with-evaluate-function",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Stack",
                "slug": "stack"
            },
            {
                "name": "Tree",
                "slug": "tree"
            },
            {
                "name": "Design",
                "slug": "design"
            },
            {
                "name": "Binary Tree",
                "slug": "binary-tree"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/design-an-expression-tree-with-evaluate-function/description"
    },
    "1800": {
        "difficulty": "MEDIUM",
        "id": 1800,
        "questionFrontendId": "1680",
        "title": "Concatenation of Consecutive Binary Numbers",
        "titleSlug": "concatenation-of-consecutive-binary-numbers",
        "topicTags": [
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Bit Manipulation",
                "slug": "bit-manipulation"
            },
            {
                "name": "Simulation",
                "slug": "simulation"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/concatenation-of-consecutive-binary-numbers/description"
    },
    "1816": {
        "difficulty": "MEDIUM",
        "id": 1816,
        "questionFrontendId": "1676",
        "title": "Lowest Common Ancestor of a Binary Tree IV",
        "titleSlug": "lowest-common-ancestor-of-a-binary-tree-iv",
        "topicTags": [
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Tree",
                "slug": "tree"
            },
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Binary Tree",
                "slug": "binary-tree"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/lowest-common-ancestor-of-a-binary-tree-iv/description"
    },
    "1887": {
        "difficulty": "HARD",
        "id": 1887,
        "questionFrontendId": "1761",
        "title": "Minimum Degree of a Connected Trio in a Graph",
        "titleSlug": "minimum-degree-of-a-connected-trio-in-a-graph",
        "topicTags": [
            {
                "name": "Graph",
                "slug": "graph"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/minimum-degree-of-a-connected-trio-in-a-graph/description"
    },
    "1917": {
        "difficulty": "MEDIUM",
        "id": 1917,
        "questionFrontendId": "1792",
        "title": "Maximum Average Pass Ratio",
        "titleSlug": "maximum-average-pass-ratio",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            },
            {
                "name": "Heap (Priority Queue)",
                "slug": "heap-priority-queue"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/maximum-average-pass-ratio/description"
    },
    "1926": {
        "difficulty": "EASY",
        "id": 1926,
        "questionFrontendId": "1777",
        "title": "Product's Price for Each Store",
        "titleSlug": "products-price-for-each-store",
        "topicTags": [
            {
                "name": "Database",
                "slug": "database"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/products-price-for-each-store/description"
    },
    "2108": {
        "difficulty": "MEDIUM",
        "id": 2108,
        "questionFrontendId": "1981",
        "title": "Minimize the Difference Between Target and Chosen Elements",
        "titleSlug": "minimize-the-difference-between-target-and-chosen-elements",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Matrix",
                "slug": "matrix"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/minimize-the-difference-between-target-and-chosen-elements/description"
    },
    "2125": {
        "difficulty": "HARD",
        "id": 2125,
        "questionFrontendId": "1998",
        "title": "GCD Sort of an Array",
        "titleSlug": "gcd-sort-of-an-array",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Union Find",
                "slug": "union-find"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            },
            {
                "name": "Number Theory",
                "slug": "number-theory"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/gcd-sort-of-an-array/description"
    },
    "2333": {
        "difficulty": "MEDIUM",
        "id": 2333,
        "questionFrontendId": "2250",
        "title": "Count Number of Rectangles Containing Each Point",
        "titleSlug": "count-number-of-rectangles-containing-each-point",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Binary Search",
                "slug": "binary-search"
            },
            {
                "name": "Binary Indexed Tree",
                "slug": "binary-indexed-tree"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/count-number-of-rectangles-containing-each-point/description"
    },
    "2520": {
        "difficulty": "MEDIUM",
        "id": 2520,
        "questionFrontendId": "2434",
        "title": "Using a Robot to Print the Lexicographically Smallest String",
        "titleSlug": "using-a-robot-to-print-the-lexicographically-smallest-string",
        "topicTags": [
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Stack",
                "slug": "stack"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/using-a-robot-to-print-the-lexicographically-smallest-string/description"
    },
    "2558": {
        "difficulty": "MEDIUM",
        "id": 2558,
        "questionFrontendId": "2471",
        "title": "Minimum Number of Operations to Sort a Binary Tree by Level",
        "titleSlug": "minimum-number-of-operations-to-sort-a-binary-tree-by-level",
        "topicTags": [
            {
                "name": "Tree",
                "slug": "tree"
            },
            {
                "name": "Breadth-First Search",
                "slug": "breadth-first-search"
            },
            {
                "name": "Binary Tree",
                "slug": "binary-tree"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/minimum-number-of-operations-to-sort-a-binary-tree-by-level/description"
    },
    "2586": {
        "difficulty": "MEDIUM",
        "id": 2586,
        "questionFrontendId": "2501",
        "title": "Longest Square Streak in an Array",
        "titleSlug": "longest-square-streak-in-an-array",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Binary Search",
                "slug": "binary-search"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/longest-square-streak-in-an-array/description"
    },
    "2650": {
        "difficulty": "EASY",
        "id": 2650,
        "questionFrontendId": "2578",
        "title": "Split With Minimum Sum",
        "titleSlug": "split-with-minimum-sum",
        "topicTags": [
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/split-with-minimum-sum/description"
    },
    "2669": {
        "difficulty": "MEDIUM",
        "id": 2669,
        "questionFrontendId": "2606",
        "title": "Find the Substring With Maximum Cost",
        "titleSlug": "find-the-substring-with-maximum-cost",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/find-the-substring-with-maximum-cost/description"
    },
    "2713": {
        "difficulty": "MEDIUM",
        "id": 2713,
        "questionFrontendId": "2575",
        "title": "Find the Divisibility Array of a String",
        "titleSlug": "find-the-divisibility-array-of-a-string",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "String",
                "slug": "string"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/find-the-divisibility-array-of-a-string/description"
    },
    "3199": {
        "difficulty": "EASY",
        "id": 3199,
        "questionFrontendId": "2928",
        "title": "Distribute Candies Among Children I",
        "titleSlug": "distribute-candies-among-children-i",
        "topicTags": [
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Combinatorics",
                "slug": "combinatorics"
            },
            {
                "name": "Enumeration",
                "slug": "enumeration"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/distribute-candies-among-children-i/description"
    },
    "3210": {
        "difficulty": "MEDIUM",
        "id": 3210,
        "questionFrontendId": "2947",
        "title": "Count Beautiful Substrings I",
        "titleSlug": "count-beautiful-substrings-i",
        "topicTags": [
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Enumeration",
                "slug": "enumeration"
            },
            {
                "name": "Number Theory",
                "slug": "number-theory"
            },
            {
                "name": "Prefix Sum",
                "slug": "prefix-sum"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/count-beautiful-substrings-i/description"
    },
    "3231": {
        "difficulty": "MEDIUM",
        "id": 3231,
        "questionFrontendId": "2952",
        "title": "Minimum Number of Coins to be Added",
        "titleSlug": "minimum-number-of-coins-to-be-added",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/minimum-number-of-coins-to-be-added/description"
    },
    "3363": {
        "difficulty": "MEDIUM",
        "id": 3363,
        "questionFrontendId": "3092",
        "title": "Most Frequent IDs",
        "titleSlug": "most-frequent-ids",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Heap (Priority Queue)",
                "slug": "heap-priority-queue"
            },
            {
                "name": "Ordered Set",
                "slug": "ordered-set"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/most-frequent-ids/description"
    },
    "536": {
        "difficulty": "MEDIUM",
        "id": 536,
        "questionFrontendId": "536",
        "title": "Construct Binary Tree from String",
        "titleSlug": "construct-binary-tree-from-string",
        "topicTags": [
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Stack",
                "slug": "stack"
            },
            {
                "name": "Tree",
                "slug": "tree"
            },
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Binary Tree",
                "slug": "binary-tree"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/construct-binary-tree-from-string/description"
    },
    "743": {
        "difficulty": "MEDIUM",
        "id": 743,
        "questionFrontendId": "742",
        "title": "Closest Leaf in a Binary Tree",
        "titleSlug": "closest-leaf-in-a-binary-tree",
        "topicTags": [
            {
                "name": "Tree",
                "slug": "tree"
            },
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Breadth-First Search",
                "slug": "breadth-first-search"
            },
            {
                "name": "Binary Tree",
                "slug": "binary-tree"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/closest-leaf-in-a-binary-tree/description"
    },
    "790": {
        "difficulty": "MEDIUM",
        "id": 790,
        "questionFrontendId": "775",
        "title": "Global and Local Inversions",
        "titleSlug": "global-and-local-inversions",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Math",
                "slug": "math"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/global-and-local-inversions/description"
    },
    "1084": {
        "difficulty": "MEDIUM",
        "id": 1084,
        "questionFrontendId": "1100",
        "title": "Find K-Length Substrings With No Repeated Characters",
        "titleSlug": "find-k-length-substrings-with-no-repeated-characters",
        "topicTags": [
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Sliding Window",
                "slug": "sliding-window"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/find-k-length-substrings-with-no-repeated-characters/description"
    },
    "1098": {
        "difficulty": "EASY",
        "id": 1098,
        "questionFrontendId": "1133",
        "title": "Largest Unique Number",
        "titleSlug": "largest-unique-number",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/largest-unique-number/description"
    },
    "1154": {
        "difficulty": "EASY",
        "id": 1154,
        "questionFrontendId": "1069",
        "title": "Product Sales Analysis II",
        "titleSlug": "product-sales-analysis-ii",
        "topicTags": [
            {
                "name": "Database",
                "slug": "database"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/product-sales-analysis-ii/description"
    },
    "1301": {
        "difficulty": "EASY",
        "id": 1301,
        "questionFrontendId": "1179",
        "title": "Reformat Department Table",
        "titleSlug": "reformat-department-table",
        "topicTags": [
            {
                "name": "Database",
                "slug": "database"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/reformat-department-table/description"
    },
    "1436": {
        "difficulty": "MEDIUM",
        "id": 1436,
        "questionFrontendId": "1311",
        "title": "Get Watched Videos by Your Friends",
        "titleSlug": "get-watched-videos-by-your-friends",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Breadth-First Search",
                "slug": "breadth-first-search"
            },
            {
                "name": "Graph",
                "slug": "graph"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/get-watched-videos-by-your-friends/description"
    },
    "1654": {
        "difficulty": "EASY",
        "id": 1654,
        "questionFrontendId": "1511",
        "title": "Customer Order Frequency",
        "titleSlug": "customer-order-frequency",
        "topicTags": [
            {
                "name": "Database",
                "slug": "database"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/customer-order-frequency/description"
    },
    "1662": {
        "difficulty": "MEDIUM",
        "id": 1662,
        "questionFrontendId": "1558",
        "title": "Minimum Numbers of Function Calls to Make Target Array",
        "titleSlug": "minimum-numbers-of-function-calls-to-make-target-array",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            },
            {
                "name": "Bit Manipulation",
                "slug": "bit-manipulation"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/minimum-numbers-of-function-calls-to-make-target-array/description"
    },
    "1759": {
        "difficulty": "MEDIUM",
        "id": 1759,
        "questionFrontendId": "1613",
        "title": "Find the Missing IDs",
        "titleSlug": "find-the-missing-ids",
        "topicTags": [
            {
                "name": "Database",
                "slug": "database"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/find-the-missing-ids/description"
    },
    "1767": {
        "difficulty": "MEDIUM",
        "id": 1767,
        "questionFrontendId": "1670",
        "title": "Design Front Middle Back Queue",
        "titleSlug": "design-front-middle-back-queue",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Linked List",
                "slug": "linked-list"
            },
            {
                "name": "Design",
                "slug": "design"
            },
            {
                "name": "Queue",
                "slug": "queue"
            },
            {
                "name": "Data Stream",
                "slug": "data-stream"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/design-front-middle-back-queue/description"
    },
    "1836": {
        "difficulty": "HARD",
        "id": 1836,
        "questionFrontendId": "1735",
        "title": "Count Ways to Make Array With Product",
        "titleSlug": "count-ways-to-make-array-with-product",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Combinatorics",
                "slug": "combinatorics"
            },
            {
                "name": "Number Theory",
                "slug": "number-theory"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/count-ways-to-make-array-with-product/description"
    },
    "1964": {
        "difficulty": "MEDIUM",
        "id": 1964,
        "questionFrontendId": "1811",
        "title": "Find Interview Candidates",
        "titleSlug": "find-interview-candidates",
        "topicTags": [
            {
                "name": "Database",
                "slug": "database"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/find-interview-candidates/description"
    },
    "2003": {
        "difficulty": "MEDIUM",
        "id": 2003,
        "questionFrontendId": "1852",
        "title": "Distinct Numbers in Each Subarray",
        "titleSlug": "distinct-numbers-in-each-subarray",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Sliding Window",
                "slug": "sliding-window"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/distinct-numbers-in-each-subarray/description"
    },
    "2056": {
        "difficulty": "MEDIUM",
        "id": 2056,
        "questionFrontendId": "2297",
        "title": "Jump Game VIII",
        "titleSlug": "jump-game-viii",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Stack",
                "slug": "stack"
            },
            {
                "name": "Graph",
                "slug": "graph"
            },
            {
                "name": "Monotonic Stack",
                "slug": "monotonic-stack"
            },
            {
                "name": "Shortest Path",
                "slug": "shortest-path"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/jump-game-viii/description"
    },
    "2080": {
        "difficulty": "MEDIUM",
        "id": 2080,
        "questionFrontendId": "1958",
        "title": "Check if Move is Legal",
        "titleSlug": "check-if-move-is-legal",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Matrix",
                "slug": "matrix"
            },
            {
                "name": "Enumeration",
                "slug": "enumeration"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/check-if-move-is-legal/description"
    },
    "2197": {
        "difficulty": "MEDIUM",
        "id": 2197,
        "questionFrontendId": "2075",
        "title": "Decode the Slanted Ciphertext",
        "titleSlug": "decode-the-slanted-ciphertext",
        "topicTags": [
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Simulation",
                "slug": "simulation"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/decode-the-slanted-ciphertext/description"
    },
    "2234": {
        "difficulty": "HARD",
        "id": 2234,
        "questionFrontendId": "2111",
        "title": "Minimum Operations to Make the Array K-Increasing",
        "titleSlug": "minimum-operations-to-make-the-array-k-increasing",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Binary Search",
                "slug": "binary-search"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/minimum-operations-to-make-the-array-k-increasing/description"
    },
    "2309": {
        "difficulty": "MEDIUM",
        "id": 2309,
        "questionFrontendId": "2207",
        "title": "Maximize Number of Subsequences in a String",
        "titleSlug": "maximize-number-of-subsequences-in-a-string",
        "topicTags": [
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            },
            {
                "name": "Prefix Sum",
                "slug": "prefix-sum"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/maximize-number-of-subsequences-in-a-string/description"
    },
    "2313": {
        "difficulty": "HARD",
        "id": 2313,
        "questionFrontendId": "2173",
        "title": "Longest Winning Streak",
        "titleSlug": "longest-winning-streak",
        "topicTags": [
            {
                "name": "Database",
                "slug": "database"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/longest-winning-streak/description"
    },
    "2388": {
        "difficulty": "MEDIUM",
        "id": 2388,
        "questionFrontendId": "2295",
        "title": "Replace Elements in an Array",
        "titleSlug": "replace-elements-in-an-array",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Simulation",
                "slug": "simulation"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/replace-elements-in-an-array/description"
    },
    "2452": {
        "difficulty": "EASY",
        "id": 2452,
        "questionFrontendId": "2329",
        "title": "Product Sales Analysis V",
        "titleSlug": "product-sales-analysis-v",
        "topicTags": [
            {
                "name": "Database",
                "slug": "database"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/product-sales-analysis-v/description"
    },
    "2464": {
        "difficulty": "MEDIUM",
        "id": 2464,
        "questionFrontendId": "2380",
        "title": "Time Needed to Rearrange a Binary String",
        "titleSlug": "time-needed-to-rearrange-a-binary-string",
        "topicTags": [
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Simulation",
                "slug": "simulation"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/time-needed-to-rearrange-a-binary-string/description"
    },
    "2534": {
        "difficulty": "MEDIUM",
        "id": 2534,
        "questionFrontendId": "2394",
        "title": "Employees With Deductions",
        "titleSlug": "employees-with-deductions",
        "topicTags": [
            {
                "name": "Database",
                "slug": "database"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/employees-with-deductions/description"
    },
    "2561": {
        "difficulty": "EASY",
        "id": 2561,
        "questionFrontendId": "2465",
        "title": "Number of Distinct Averages",
        "titleSlug": "number-of-distinct-averages",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Two Pointers",
                "slug": "two-pointers"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/number-of-distinct-averages/description"
    },
    "2738": {
        "difficulty": "MEDIUM",
        "id": 2738,
        "questionFrontendId": "2638",
        "title": "Count the Number of K-Free Subsets",
        "titleSlug": "count-the-number-of-k-free-subsets",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            },
            {
                "name": "Combinatorics",
                "slug": "combinatorics"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/count-the-number-of-k-free-subsets/description"
    },
    "2954": {
        "difficulty": "MEDIUM",
        "id": 2954,
        "questionFrontendId": "2841",
        "title": "Maximum Sum of Almost Unique Subarray",
        "titleSlug": "maximum-sum-of-almost-unique-subarray",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Sliding Window",
                "slug": "sliding-window"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/maximum-sum-of-almost-unique-subarray/description"
    },
    "3184": {
        "difficulty": "HARD",
        "id": 3184,
        "questionFrontendId": "2926",
        "title": "Maximum Balanced Subsequence Sum",
        "titleSlug": "maximum-balanced-subsequence-sum",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Binary Search",
                "slug": "binary-search"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Binary Indexed Tree",
                "slug": "binary-indexed-tree"
            },
            {
                "name": "Segment Tree",
                "slug": "segment-tree"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/maximum-balanced-subsequence-sum/description"
    },
    "3208": {
        "difficulty": "HARD",
        "id": 3208,
        "questionFrontendId": "2949",
        "title": "Count Beautiful Substrings II",
        "titleSlug": "count-beautiful-substrings-ii",
        "topicTags": [
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Number Theory",
                "slug": "number-theory"
            },
            {
                "name": "Prefix Sum",
                "slug": "prefix-sum"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/count-beautiful-substrings-ii/description"
    },
    "3414": {
        "difficulty": "HARD",
        "id": 3414,
        "questionFrontendId": "3154",
        "title": "Find Number of Ways to Reach the K-th Stair",
        "titleSlug": "find-number-of-ways-to-reach-the-k-th-stair",
        "topicTags": [
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Bit Manipulation",
                "slug": "bit-manipulation"
            },
            {
                "name": "Memoization",
                "slug": "memoization"
            },
            {
                "name": "Combinatorics",
                "slug": "combinatorics"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/find-number-of-ways-to-reach-the-k-th-stair/description"
    },
    "512": {
        "difficulty": "MEDIUM",
        "id": 512,
        "questionFrontendId": "2036",
        "title": "Maximum Alternating Subarray Sum",
        "titleSlug": "maximum-alternating-subarray-sum",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/maximum-alternating-subarray-sum/description"
    },
    "553": {
        "difficulty": "MEDIUM",
        "id": 553,
        "questionFrontendId": "553",
        "title": "Optimal Division",
        "titleSlug": "optimal-division",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/optimal-division/description"
    },
    "579": {
        "difficulty": "HARD",
        "id": 579,
        "questionFrontendId": "579",
        "title": "Find Cumulative Salary of an Employee",
        "titleSlug": "find-cumulative-salary-of-an-employee",
        "topicTags": [
            {
                "name": "Database",
                "slug": "database"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/find-cumulative-salary-of-an-employee/description"
    },
    "640": {
        "difficulty": "MEDIUM",
        "id": 640,
        "questionFrontendId": "640",
        "title": "Solve the Equation",
        "titleSlug": "solve-the-equation",
        "topicTags": [
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Simulation",
                "slug": "simulation"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/solve-the-equation/description"
    },
    "663": {
        "difficulty": "MEDIUM",
        "id": 663,
        "questionFrontendId": "663",
        "title": "Equal Tree Partition",
        "titleSlug": "equal-tree-partition",
        "topicTags": [
            {
                "name": "Tree",
                "slug": "tree"
            },
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Binary Tree",
                "slug": "binary-tree"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/equal-tree-partition/description"
    },
    "711": {
        "difficulty": "HARD",
        "id": 711,
        "questionFrontendId": "711",
        "title": "Number of Distinct Islands II",
        "titleSlug": "number-of-distinct-islands-ii",
        "topicTags": [
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Breadth-First Search",
                "slug": "breadth-first-search"
            },
            {
                "name": "Union Find",
                "slug": "union-find"
            },
            {
                "name": "Hash Function",
                "slug": "hash-function"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/number-of-distinct-islands-ii/description"
    },
    "872": {
        "difficulty": "MEDIUM",
        "id": 872,
        "questionFrontendId": "842",
        "title": "Split Array into Fibonacci Sequence",
        "titleSlug": "split-array-into-fibonacci-sequence",
        "topicTags": [
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Backtracking",
                "slug": "backtracking"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/split-array-into-fibonacci-sequence/description"
    },
    "935": {
        "difficulty": "HARD",
        "id": 935,
        "questionFrontendId": "899",
        "title": "Orderly Queue",
        "titleSlug": "orderly-queue",
        "topicTags": [
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/orderly-queue/description"
    },
    "938": {
        "difficulty": "HARD",
        "id": 938,
        "questionFrontendId": "902",
        "title": "Numbers At Most N Given Digit Set",
        "titleSlug": "numbers-at-most-n-given-digit-set",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Binary Search",
                "slug": "binary-search"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/numbers-at-most-n-given-digit-set/description"
    },
    "1075": {
        "difficulty": "EASY",
        "id": 1075,
        "questionFrontendId": "1065",
        "title": "Index Pairs of a String",
        "titleSlug": "index-pairs-of-a-string",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Trie",
                "slug": "trie"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/index-pairs-of-a-string/description"
    },
    "1082": {
        "difficulty": "EASY",
        "id": 1082,
        "questionFrontendId": "1085",
        "title": "Sum of Digits in the Minimum Number",
        "titleSlug": "sum-of-digits-in-the-minimum-number",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Math",
                "slug": "math"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/sum-of-digits-in-the-minimum-number/description"
    },
    "1088": {
        "difficulty": "EASY",
        "id": 1088,
        "questionFrontendId": "1118",
        "title": "Number of Days in a Month",
        "titleSlug": "number-of-days-in-a-month",
        "topicTags": [
            {
                "name": "Math",
                "slug": "math"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/number-of-days-in-a-month/description"
    },
    "1090": {
        "difficulty": "EASY",
        "id": 1090,
        "questionFrontendId": "1134",
        "title": "Armstrong Number",
        "titleSlug": "armstrong-number",
        "topicTags": [
            {
                "name": "Math",
                "slug": "math"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/armstrong-number/description"
    },
    "1091": {
        "difficulty": "MEDIUM",
        "id": 1091,
        "questionFrontendId": "1120",
        "title": "Maximum Average Subtree",
        "titleSlug": "maximum-average-subtree",
        "topicTags": [
            {
                "name": "Tree",
                "slug": "tree"
            },
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Binary Tree",
                "slug": "binary-tree"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/maximum-average-subtree/description"
    },
    "1150": {
        "difficulty": "MEDIUM",
        "id": 1150,
        "questionFrontendId": "1214",
        "title": "Two Sum BSTs",
        "titleSlug": "two-sum-bsts",
        "topicTags": [
            {
                "name": "Two Pointers",
                "slug": "two-pointers"
            },
            {
                "name": "Binary Search",
                "slug": "binary-search"
            },
            {
                "name": "Stack",
                "slug": "stack"
            },
            {
                "name": "Tree",
                "slug": "tree"
            },
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Binary Search Tree",
                "slug": "binary-search-tree"
            },
            {
                "name": "Binary Tree",
                "slug": "binary-tree"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/two-sum-bsts/description"
    },
    "1157": {
        "difficulty": "MEDIUM",
        "id": 1157,
        "questionFrontendId": "1080",
        "title": "Insufficient Nodes in Root to Leaf Paths",
        "titleSlug": "insufficient-nodes-in-root-to-leaf-paths",
        "topicTags": [
            {
                "name": "Tree",
                "slug": "tree"
            },
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Binary Tree",
                "slug": "binary-tree"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/insufficient-nodes-in-root-to-leaf-paths/description"
    },
    "1213": {
        "difficulty": "HARD",
        "id": 1213,
        "questionFrontendId": "1259",
        "title": "Handshakes That Don't Cross",
        "titleSlug": "handshakes-that-dont-cross",
        "topicTags": [
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/handshakes-that-dont-cross/description"
    },
    "1276": {
        "difficulty": "MEDIUM",
        "id": 1276,
        "questionFrontendId": "1362",
        "title": "Closest Divisors",
        "titleSlug": "closest-divisors",
        "topicTags": [
            {
                "name": "Math",
                "slug": "math"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/closest-divisors/description"
    },
    "1280": {
        "difficulty": "EASY",
        "id": 1280,
        "questionFrontendId": "1176",
        "title": "Diet Plan Performance",
        "titleSlug": "diet-plan-performance",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Sliding Window",
                "slug": "sliding-window"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/diet-plan-performance/description"
    },
    "1295": {
        "difficulty": "MEDIUM",
        "id": 1295,
        "questionFrontendId": "1954",
        "title": "Minimum Garden Perimeter to Collect Enough Apples",
        "titleSlug": "minimum-garden-perimeter-to-collect-enough-apples",
        "topicTags": [
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Binary Search",
                "slug": "binary-search"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/minimum-garden-perimeter-to-collect-enough-apples/description"
    },
    "1438": {
        "difficulty": "EASY",
        "id": 1438,
        "questionFrontendId": "1303",
        "title": "Find the Team Size",
        "titleSlug": "find-the-team-size",
        "topicTags": [
            {
                "name": "Database",
                "slug": "database"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/find-the-team-size/description"
    },
    "1454": {
        "difficulty": "EASY",
        "id": 1454,
        "questionFrontendId": "1332",
        "title": "Remove Palindromic Subsequences",
        "titleSlug": "remove-palindromic-subsequences",
        "topicTags": [
            {
                "name": "Two Pointers",
                "slug": "two-pointers"
            },
            {
                "name": "String",
                "slug": "string"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/remove-palindromic-subsequences/description"
    },
    "1481": {
        "difficulty": "EASY",
        "id": 1481,
        "questionFrontendId": "1350",
        "title": "Students With Invalid Departments",
        "titleSlug": "students-with-invalid-departments",
        "topicTags": [
            {
                "name": "Database",
                "slug": "database"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/students-with-invalid-departments/description"
    },
    "1525": {
        "difficulty": "MEDIUM",
        "id": 1525,
        "questionFrontendId": "1409",
        "title": "Queries on a Permutation With Key",
        "titleSlug": "queries-on-a-permutation-with-key",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Binary Indexed Tree",
                "slug": "binary-indexed-tree"
            },
            {
                "name": "Simulation",
                "slug": "simulation"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/queries-on-a-permutation-with-key/description"
    },
    "1551": {
        "difficulty": "EASY",
        "id": 1551,
        "questionFrontendId": "1421",
        "title": "NPV Queries",
        "titleSlug": "npv-queries",
        "topicTags": [
            {
                "name": "Database",
                "slug": "database"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/npv-queries/description"
    },
    "1623": {
        "difficulty": "HARD",
        "id": 1623,
        "questionFrontendId": "1479",
        "title": "Sales by Day of the Week",
        "titleSlug": "sales-by-day-of-the-week",
        "topicTags": [
            {
                "name": "Database",
                "slug": "database"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/sales-by-day-of-the-week/description"
    },
    "1634": {
        "difficulty": "MEDIUM",
        "id": 1634,
        "questionFrontendId": "1490",
        "title": "Clone N-ary Tree",
        "titleSlug": "clone-n-ary-tree",
        "topicTags": [
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Tree",
                "slug": "tree"
            },
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Breadth-First Search",
                "slug": "breadth-first-search"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/clone-n-ary-tree/description"
    },
    "1639": {
        "difficulty": "EASY",
        "id": 1639,
        "questionFrontendId": "1495",
        "title": "Friendly Movies Streamed Last Month",
        "titleSlug": "friendly-movies-streamed-last-month",
        "topicTags": [
            {
                "name": "Database",
                "slug": "database"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/friendly-movies-streamed-last-month/description"
    },
    "1672": {
        "difficulty": "MEDIUM",
        "id": 1672,
        "questionFrontendId": "1533",
        "title": "Find the Index of the Large Integer",
        "titleSlug": "find-the-index-of-the-large-integer",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Binary Search",
                "slug": "binary-search"
            },
            {
                "name": "Interactive",
                "slug": "interactive"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/find-the-index-of-the-large-integer/description"
    },
    "1690": {
        "difficulty": "MEDIUM",
        "id": 1690,
        "questionFrontendId": "1567",
        "title": "Maximum Length of Subarray With Positive Product",
        "titleSlug": "maximum-length-of-subarray-with-positive-product",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/maximum-length-of-subarray-with-positive-product/description"
    },
    "1725": {
        "difficulty": "MEDIUM",
        "id": 1725,
        "questionFrontendId": "1621",
        "title": "Number of Sets of K Non-Overlapping Line Segments",
        "titleSlug": "number-of-sets-of-k-non-overlapping-line-segments",
        "topicTags": [
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Combinatorics",
                "slug": "combinatorics"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/number-of-sets-of-k-non-overlapping-line-segments/description"
    },
    "1736": {
        "difficulty": "HARD",
        "id": 1736,
        "questionFrontendId": "1597",
        "title": "Build Binary Expression Tree From Infix Expression",
        "titleSlug": "build-binary-expression-tree-from-infix-expression",
        "topicTags": [
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Stack",
                "slug": "stack"
            },
            {
                "name": "Tree",
                "slug": "tree"
            },
            {
                "name": "Binary Tree",
                "slug": "binary-tree"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/build-binary-expression-tree-from-infix-expression/description"
    },
    "1763": {
        "difficulty": "EASY",
        "id": 1763,
        "questionFrontendId": "1623",
        "title": "All Valid Triplets That Can Represent a Country",
        "titleSlug": "all-valid-triplets-that-can-represent-a-country",
        "topicTags": [
            {
                "name": "Database",
                "slug": "database"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/all-valid-triplets-that-can-represent-a-country/description"
    },
    "1774": {
        "difficulty": "MEDIUM",
        "id": 1774,
        "questionFrontendId": "1634",
        "title": "Add Two Polynomials Represented as Linked Lists",
        "titleSlug": "add-two-polynomials-represented-as-linked-lists",
        "topicTags": [
            {
                "name": "Linked List",
                "slug": "linked-list"
            },
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Two Pointers",
                "slug": "two-pointers"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/add-two-polynomials-represented-as-linked-lists/description"
    },
    "1835": {
        "difficulty": "MEDIUM",
        "id": 1835,
        "questionFrontendId": "1734",
        "title": "Decode XORed Permutation",
        "titleSlug": "decode-xored-permutation",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Bit Manipulation",
                "slug": "bit-manipulation"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/decode-xored-permutation/description"
    },
    "1842": {
        "difficulty": "MEDIUM",
        "id": 1842,
        "questionFrontendId": "1699",
        "title": "Number of Calls Between Two Persons",
        "titleSlug": "number-of-calls-between-two-persons",
        "topicTags": [
            {
                "name": "Database",
                "slug": "database"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/number-of-calls-between-two-persons/description"
    },
    "1874": {
        "difficulty": "MEDIUM",
        "id": 1874,
        "questionFrontendId": "1764",
        "title": "Form Array by Concatenating Subarrays of Another Array",
        "titleSlug": "form-array-by-concatenating-subarrays-of-another-array",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Two Pointers",
                "slug": "two-pointers"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            },
            {
                "name": "String Matching",
                "slug": "string-matching"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/form-array-by-concatenating-subarrays-of-another-array/description"
    },
    "1891": {
        "difficulty": "HARD",
        "id": 1891,
        "questionFrontendId": "1782",
        "title": "Count Pairs Of Nodes",
        "titleSlug": "count-pairs-of-nodes",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Two Pointers",
                "slug": "two-pointers"
            },
            {
                "name": "Binary Search",
                "slug": "binary-search"
            },
            {
                "name": "Graph",
                "slug": "graph"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/count-pairs-of-nodes/description"
    },
    "1919": {
        "difficulty": "MEDIUM",
        "id": 1919,
        "questionFrontendId": "1772",
        "title": "Sort Features by Popularity",
        "titleSlug": "sort-features-by-popularity",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/sort-features-by-popularity/description"
    },
    "1932": {
        "difficulty": "MEDIUM",
        "id": 1932,
        "questionFrontendId": "1783",
        "title": "Grand Slam Titles",
        "titleSlug": "grand-slam-titles",
        "topicTags": [
            {
                "name": "Database",
                "slug": "database"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/grand-slam-titles/description"
    },
    "1937": {
        "difficulty": "HARD",
        "id": 1937,
        "questionFrontendId": "1788",
        "title": "Maximize the Beauty of the Garden",
        "titleSlug": "maximize-the-beauty-of-the-garden",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            },
            {
                "name": "Prefix Sum",
                "slug": "prefix-sum"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/maximize-the-beauty-of-the-garden/description"
    },
    "1957": {
        "difficulty": "HARD",
        "id": 1957,
        "questionFrontendId": "1847",
        "title": "Closest Room",
        "titleSlug": "closest-room",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Binary Search",
                "slug": "binary-search"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/closest-room/description"
    },
    "1958": {
        "difficulty": "EASY",
        "id": 1958,
        "questionFrontendId": "1809",
        "title": "Ad-Free Sessions",
        "titleSlug": "ad-free-sessions",
        "topicTags": [
            {
                "name": "Database",
                "slug": "database"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/ad-free-sessions/description"
    },
    "2051": {
        "difficulty": "HARD",
        "id": 2051,
        "questionFrontendId": "1923",
        "title": "Longest Common Subpath",
        "titleSlug": "longest-common-subpath",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Binary Search",
                "slug": "binary-search"
            },
            {
                "name": "Rolling Hash",
                "slug": "rolling-hash"
            },
            {
                "name": "Suffix Array",
                "slug": "suffix-array"
            },
            {
                "name": "Hash Function",
                "slug": "hash-function"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/longest-common-subpath/description"
    },
    "2072": {
        "difficulty": "MEDIUM",
        "id": 2072,
        "questionFrontendId": "1950",
        "title": "Maximum of Minimum Values in All Subarrays",
        "titleSlug": "maximum-of-minimum-values-in-all-subarrays",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Stack",
                "slug": "stack"
            },
            {
                "name": "Monotonic Stack",
                "slug": "monotonic-stack"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/maximum-of-minimum-values-in-all-subarrays/description"
    },
    "2086": {
        "difficulty": "HARD",
        "id": 2086,
        "questionFrontendId": "1955",
        "title": "Count Number of Special Subsequences",
        "titleSlug": "count-number-of-special-subsequences",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/count-number-of-special-subsequences/description"
    },
    "2232": {
        "difficulty": "MEDIUM",
        "id": 2232,
        "questionFrontendId": "2109",
        "title": "Adding Spaces to a String",
        "titleSlug": "adding-spaces-to-a-string",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Two Pointers",
                "slug": "two-pointers"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Simulation",
                "slug": "simulation"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/adding-spaces-to-a-string/description"
    },
    "2233": {
        "difficulty": "MEDIUM",
        "id": 2233,
        "questionFrontendId": "2110",
        "title": "Number of Smooth Descent Periods of a Stock",
        "titleSlug": "number-of-smooth-descent-periods-of-a-stock",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/number-of-smooth-descent-periods-of-a-stock/description"
    },
    "2259": {
        "difficulty": "HARD",
        "id": 2259,
        "questionFrontendId": "2123",
        "title": "Minimum Operations to Remove Adjacent Ones in Matrix",
        "titleSlug": "minimum-operations-to-remove-adjacent-ones-in-matrix",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Graph",
                "slug": "graph"
            },
            {
                "name": "Matrix",
                "slug": "matrix"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/minimum-operations-to-remove-adjacent-ones-in-matrix/description"
    },
    "2305": {
        "difficulty": "MEDIUM",
        "id": 2305,
        "questionFrontendId": "2195",
        "title": "Append K Integers With Minimal Sum",
        "titleSlug": "append-k-integers-with-minimal-sum",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/append-k-integers-with-minimal-sum/description"
    },
    "2307": {
        "difficulty": "HARD",
        "id": 2307,
        "questionFrontendId": "2197",
        "title": "Replace Non-Coprime Numbers in Array",
        "titleSlug": "replace-non-coprime-numbers-in-array",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Stack",
                "slug": "stack"
            },
            {
                "name": "Number Theory",
                "slug": "number-theory"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/replace-non-coprime-numbers-in-array/description"
    },
    "2358": {
        "difficulty": "MEDIUM",
        "id": 2358,
        "questionFrontendId": "2270",
        "title": "Number of Ways to Split Array",
        "titleSlug": "number-of-ways-to-split-array",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Prefix Sum",
                "slug": "prefix-sum"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/number-of-ways-to-split-array/description"
    },
    "2366": {
        "difficulty": "MEDIUM",
        "id": 2366,
        "questionFrontendId": "2279",
        "title": "Maximum Bags With Full Capacity of Rocks",
        "titleSlug": "maximum-bags-with-full-capacity-of-rocks",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/maximum-bags-with-full-capacity-of-rocks/description"
    },
    "2369": {
        "difficulty": "MEDIUM",
        "id": 2369,
        "questionFrontendId": "2219",
        "title": "Maximum Sum Score of Array",
        "titleSlug": "maximum-sum-score-of-array",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Prefix Sum",
                "slug": "prefix-sum"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/maximum-sum-score-of-array/description"
    },
    "2370": {
        "difficulty": "MEDIUM",
        "id": 2370,
        "questionFrontendId": "2228",
        "title": "Users With Two Purchases Within Seven Days",
        "titleSlug": "users-with-two-purchases-within-seven-days",
        "topicTags": [
            {
                "name": "Database",
                "slug": "database"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/users-with-two-purchases-within-seven-days/description"
    },
    "2376": {
        "difficulty": "MEDIUM",
        "id": 2376,
        "questionFrontendId": "2238",
        "title": "Number of Times a Driver Was a Passenger",
        "titleSlug": "number-of-times-a-driver-was-a-passenger",
        "topicTags": [
            {
                "name": "Database",
                "slug": "database"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/number-of-times-a-driver-was-a-passenger/description"
    },
    "2400": {
        "difficulty": "HARD",
        "id": 2400,
        "questionFrontendId": "2322",
        "title": "Minimum Score After Removals on a Tree",
        "titleSlug": "minimum-score-after-removals-on-a-tree",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Bit Manipulation",
                "slug": "bit-manipulation"
            },
            {
                "name": "Tree",
                "slug": "tree"
            },
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/minimum-score-after-removals-on-a-tree/description"
    },
    "2431": {
        "difficulty": "MEDIUM",
        "id": 2431,
        "questionFrontendId": "2292",
        "title": "Products With Three or More Orders in Two Consecutive Years",
        "titleSlug": "products-with-three-or-more-orders-in-two-consecutive-years",
        "topicTags": [
            {
                "name": "Database",
                "slug": "database"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/products-with-three-or-more-orders-in-two-consecutive-years/description"
    },
    "2451": {
        "difficulty": "MEDIUM",
        "id": 2451,
        "questionFrontendId": "2324",
        "title": "Product Sales Analysis IV",
        "titleSlug": "product-sales-analysis-iv",
        "topicTags": [
            {
                "name": "Database",
                "slug": "database"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/product-sales-analysis-iv/description"
    },
    "2468": {
        "difficulty": "MEDIUM",
        "id": 2468,
        "questionFrontendId": "2330",
        "title": "Valid Palindrome IV",
        "titleSlug": "valid-palindrome-iv",
        "topicTags": [
            {
                "name": "Two Pointers",
                "slug": "two-pointers"
            },
            {
                "name": "String",
                "slug": "string"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/valid-palindrome-iv/description"
    },
    "2497": {
        "difficulty": "MEDIUM",
        "id": 2497,
        "questionFrontendId": "2410",
        "title": "Maximum Matching of Players With Trainers",
        "titleSlug": "maximum-matching-of-players-with-trainers",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Two Pointers",
                "slug": "two-pointers"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/maximum-matching-of-players-with-trainers/description"
    },
    "2498": {
        "difficulty": "MEDIUM",
        "id": 2498,
        "questionFrontendId": "2411",
        "title": "Smallest Subarrays With Maximum Bitwise OR",
        "titleSlug": "smallest-subarrays-with-maximum-bitwise-or",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Binary Search",
                "slug": "binary-search"
            },
            {
                "name": "Bit Manipulation",
                "slug": "bit-manipulation"
            },
            {
                "name": "Sliding Window",
                "slug": "sliding-window"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/smallest-subarrays-with-maximum-bitwise-or/description"
    },
    "2499": {
        "difficulty": "HARD",
        "id": 2499,
        "questionFrontendId": "2412",
        "title": "Minimum Money Required Before Transactions",
        "titleSlug": "minimum-money-required-before-transactions",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/minimum-money-required-before-transactions/description"
    },
    "2541": {
        "difficulty": "MEDIUM",
        "id": 2541,
        "questionFrontendId": "2443",
        "title": "Sum of Number and Its Reverse",
        "titleSlug": "sum-of-number-and-its-reverse",
        "topicTags": [
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Enumeration",
                "slug": "enumeration"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/sum-of-number-and-its-reverse/description"
    },
    "2555": {
        "difficulty": "MEDIUM",
        "id": 2555,
        "questionFrontendId": "2408",
        "title": "Design SQL",
        "titleSlug": "design-sql",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Design",
                "slug": "design"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/design-sql/description"
    },
    "2590": {
        "difficulty": "MEDIUM",
        "id": 2590,
        "questionFrontendId": "2497",
        "title": "Maximum Star Sum of a Graph",
        "titleSlug": "maximum-star-sum-of-a-graph",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            },
            {
                "name": "Graph",
                "slug": "graph"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            },
            {
                "name": "Heap (Priority Queue)",
                "slug": "heap-priority-queue"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/maximum-star-sum-of-a-graph/description"
    },
    "2613": {
        "difficulty": "HARD",
        "id": 2613,
        "questionFrontendId": "2474",
        "title": "Customers With Strictly Increasing Purchases",
        "titleSlug": "customers-with-strictly-increasing-purchases",
        "topicTags": [
            {
                "name": "Database",
                "slug": "database"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/customers-with-strictly-increasing-purchases/description"
    },
    "2621": {
        "difficulty": "MEDIUM",
        "id": 2621,
        "questionFrontendId": "2527",
        "title": "Find Xor-Beauty of Array",
        "titleSlug": "find-xor-beauty-of-array",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Bit Manipulation",
                "slug": "bit-manipulation"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/find-xor-beauty-of-array/description"
    },
    "2995": {
        "difficulty": "MEDIUM",
        "id": 2995,
        "questionFrontendId": "2782",
        "title": "Number of Unique Categories",
        "titleSlug": "number-of-unique-categories",
        "topicTags": [
            {
                "name": "Union Find",
                "slug": "union-find"
            },
            {
                "name": "Interactive",
                "slug": "interactive"
            },
            {
                "name": "Counting",
                "slug": "counting"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/number-of-unique-categories/description"
    },
    "3088": {
        "difficulty": "MEDIUM",
        "id": 3088,
        "questionFrontendId": "2832",
        "title": "Maximal Range That Each Element Is Maximum in It",
        "titleSlug": "maximal-range-that-each-element-is-maximum-in-it",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Stack",
                "slug": "stack"
            },
            {
                "name": "Monotonic Stack",
                "slug": "monotonic-stack"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/maximal-range-that-each-element-is-maximum-in-it/description"
    },
    "3139": {
        "difficulty": "HARD",
        "id": 3139,
        "questionFrontendId": "2916",
        "title": "Subarrays Distinct Element Sum of Squares II",
        "titleSlug": "subarrays-distinct-element-sum-of-squares-ii",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Binary Indexed Tree",
                "slug": "binary-indexed-tree"
            },
            {
                "name": "Segment Tree",
                "slug": "segment-tree"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/subarrays-distinct-element-sum-of-squares-ii/description"
    },
    "3182": {
        "difficulty": "MEDIUM",
        "id": 3182,
        "questionFrontendId": "2898",
        "title": "Maximum Linear Stock Score",
        "titleSlug": "maximum-linear-stock-score",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/maximum-linear-stock-score/description"
    },
    "3201": {
        "difficulty": "MEDIUM",
        "id": 3201,
        "questionFrontendId": "2929",
        "title": "Distribute Candies Among Children II",
        "titleSlug": "distribute-candies-among-children-ii",
        "topicTags": [
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Combinatorics",
                "slug": "combinatorics"
            },
            {
                "name": "Enumeration",
                "slug": "enumeration"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/distribute-candies-among-children-ii/description"
    },
    "3207": {
        "difficulty": "EASY",
        "id": 3207,
        "questionFrontendId": "2937",
        "title": "Make Three Strings Equal",
        "titleSlug": "make-three-strings-equal",
        "topicTags": [
            {
                "name": "String",
                "slug": "string"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/make-three-strings-equal/description"
    },
    "3216": {
        "difficulty": "HARD",
        "id": 3216,
        "questionFrontendId": "2927",
        "title": "Distribute Candies Among Children III",
        "titleSlug": "distribute-candies-among-children-iii",
        "topicTags": [
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Combinatorics",
                "slug": "combinatorics"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/distribute-candies-among-children-iii/description"
    },
    "3234": {
        "difficulty": "MEDIUM",
        "id": 3234,
        "questionFrontendId": "2961",
        "title": "Double Modular Exponentiation",
        "titleSlug": "double-modular-exponentiation",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Simulation",
                "slug": "simulation"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/double-modular-exponentiation/description"
    },
    "3273": {
        "difficulty": "MEDIUM",
        "id": 3273,
        "questionFrontendId": "2979",
        "title": "Most Expensive Item That Can Not Be Bought",
        "titleSlug": "most-expensive-item-that-can-not-be-bought",
        "topicTags": [
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Number Theory",
                "slug": "number-theory"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/most-expensive-item-that-can-not-be-bought/description"
    },
    "3299": {
        "difficulty": "MEDIUM",
        "id": 3299,
        "questionFrontendId": "3020",
        "title": "Find the Maximum Number of Elements in Subset",
        "titleSlug": "find-the-maximum-number-of-elements-in-subset",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Enumeration",
                "slug": "enumeration"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/find-the-maximum-number-of-elements-in-subset/description"
    },
    "3343": {
        "difficulty": "EASY",
        "id": 3343,
        "questionFrontendId": "3032",
        "title": "Count Numbers With Unique Digits II",
        "titleSlug": "count-numbers-with-unique-digits-ii",
        "topicTags": [
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/count-numbers-with-unique-digits-ii/description"
    },
    "3354": {
        "difficulty": "MEDIUM",
        "id": 3354,
        "questionFrontendId": "3081",
        "title": "Replace Question Marks in String to Minimize Its Value",
        "titleSlug": "replace-question-marks-in-string-to-minimize-its-value",
        "topicTags": [
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            },
            {
                "name": "Heap (Priority Queue)",
                "slug": "heap-priority-queue"
            },
            {
                "name": "Counting",
                "slug": "counting"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/replace-question-marks-in-string-to-minimize-its-value/description"
    },
    "3382": {
        "difficulty": "HARD",
        "id": 3382,
        "questionFrontendId": "3113",
        "title": "Find the Number of Subarrays Where Boundary Elements Are Maximum",
        "titleSlug": "find-the-number-of-subarrays-where-boundary-elements-are-maximum",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Binary Search",
                "slug": "binary-search"
            },
            {
                "name": "Stack",
                "slug": "stack"
            },
            {
                "name": "Monotonic Stack",
                "slug": "monotonic-stack"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/find-the-number-of-subarrays-where-boundary-elements-are-maximum/description"
    },
    "3408": {
        "difficulty": "EASY",
        "id": 3408,
        "questionFrontendId": "3120",
        "title": "Count the Number of Special Characters I",
        "titleSlug": "count-the-number-of-special-characters-i",
        "topicTags": [
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "String",
                "slug": "string"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/count-the-number-of-special-characters-i/description"
    },
    "3410": {
        "difficulty": "HARD",
        "id": 3410,
        "questionFrontendId": "3104",
        "title": "Find Longest Self-Contained Substring",
        "titleSlug": "find-longest-self-contained-substring",
        "topicTags": [
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Binary Search",
                "slug": "binary-search"
            },
            {
                "name": "Prefix Sum",
                "slug": "prefix-sum"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/find-longest-self-contained-substring/description"
    },
    "3471": {
        "difficulty": "EASY",
        "id": 3471,
        "questionFrontendId": "3194",
        "title": "Minimum Average of Smallest and Largest Elements",
        "titleSlug": "minimum-average-of-smallest-and-largest-elements",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Two Pointers",
                "slug": "two-pointers"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/minimum-average-of-smallest-and-largest-elements/description"
    },
    "3506": {
        "difficulty": "EASY",
        "id": 3506,
        "questionFrontendId": "3199",
        "title": "Count Triplets with Even XOR Set Bits I",
        "titleSlug": "count-triplets-with-even-xor-set-bits-i",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Bit Manipulation",
                "slug": "bit-manipulation"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/count-triplets-with-even-xor-set-bits-i/description"
    },
    "3521": {
        "difficulty": "MEDIUM",
        "id": 3521,
        "questionFrontendId": "3215",
        "title": "Count Triplets with Even XOR Set Bits II",
        "titleSlug": "count-triplets-with-even-xor-set-bits-ii",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Bit Manipulation",
                "slug": "bit-manipulation"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/count-triplets-with-even-xor-set-bits-ii/description"
    },
    "1994": {
        "difficulty": "MEDIUM",
        "id": 1994,
        "questionFrontendId": "1864",
        "title": "Minimum Number of Swaps to Make the Binary String Alternating",
        "titleSlug": "minimum-number-of-swaps-to-make-the-binary-string-alternating",
        "topicTags": [
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/minimum-number-of-swaps-to-make-the-binary-string-alternating/description"
    },
    "1806": {
        "difficulty": "EASY",
        "id": 1806,
        "questionFrontendId": "1688",
        "title": "Count of Matches in Tournament",
        "titleSlug": "count-of-matches-in-tournament",
        "topicTags": [
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Simulation",
                "slug": "simulation"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/count-of-matches-in-tournament/description"
    },
    "3238": {
        "difficulty": "HARD",
        "id": 3238,
        "questionFrontendId": "2977",
        "title": "Minimum Cost to Convert String II",
        "titleSlug": "minimum-cost-to-convert-string-ii",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Graph",
                "slug": "graph"
            },
            {
                "name": "Trie",
                "slug": "trie"
            },
            {
                "name": "Shortest Path",
                "slug": "shortest-path"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/minimum-cost-to-convert-string-ii/description"
    },
    "1061": {
        "difficulty": "HARD",
        "id": 1061,
        "questionFrontendId": "1063",
        "title": "Number of Valid Subarrays",
        "titleSlug": "number-of-valid-subarrays",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Stack",
                "slug": "stack"
            },
            {
                "name": "Monotonic Stack",
                "slug": "monotonic-stack"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/number-of-valid-subarrays/description"
    },
    "1351": {
        "difficulty": "MEDIUM",
        "id": 1351,
        "questionFrontendId": "1234",
        "title": "Replace the Substring for Balanced String",
        "titleSlug": "replace-the-substring-for-balanced-string",
        "topicTags": [
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Sliding Window",
                "slug": "sliding-window"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/replace-the-substring-for-balanced-string/description"
    },
    "1410": {
        "difficulty": "EASY",
        "id": 1410,
        "questionFrontendId": "1279",
        "title": "Traffic Light Controlled Intersection",
        "titleSlug": "traffic-light-controlled-intersection",
        "topicTags": [
            {
                "name": "Concurrency",
                "slug": "concurrency"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/traffic-light-controlled-intersection/description"
    },
    "2012": {
        "difficulty": "MEDIUM",
        "id": 2012,
        "questionFrontendId": "1882",
        "title": "Process Tasks Using Servers",
        "titleSlug": "process-tasks-using-servers",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Heap (Priority Queue)",
                "slug": "heap-priority-queue"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/process-tasks-using-servers/description"
    },
    "2025": {
        "difficulty": "EASY",
        "id": 2025,
        "questionFrontendId": "1897",
        "title": "Redistribute Characters to Make All Strings Equal",
        "titleSlug": "redistribute-characters-to-make-all-strings-equal",
        "topicTags": [
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Counting",
                "slug": "counting"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/redistribute-characters-to-make-all-strings-equal/description"
    },
    "2740": {
        "difficulty": "MEDIUM",
        "id": 2740,
        "questionFrontendId": "2632",
        "title": "Curry",
        "titleSlug": "curry",
        "topicTags": [],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/curry/description"
    },
    "2751": {
        "difficulty": "MEDIUM",
        "id": 2751,
        "questionFrontendId": "2653",
        "title": "Sliding Subarray Beauty",
        "titleSlug": "sliding-subarray-beauty",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Sliding Window",
                "slug": "sliding-window"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/sliding-subarray-beauty/description"
    },
    "585": {
        "difficulty": "MEDIUM",
        "id": 585,
        "questionFrontendId": "585",
        "title": "Investments in 2016",
        "titleSlug": "investments-in-2016",
        "topicTags": [
            {
                "name": "Database",
                "slug": "database"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/investments-in-2016/description"
    },
    "603": {
        "difficulty": "EASY",
        "id": 603,
        "questionFrontendId": "603",
        "title": "Consecutive Available Seats",
        "titleSlug": "consecutive-available-seats",
        "topicTags": [
            {
                "name": "Database",
                "slug": "database"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/consecutive-available-seats/description"
    },
    "677": {
        "difficulty": "MEDIUM",
        "id": 677,
        "questionFrontendId": "677",
        "title": "Map Sum Pairs",
        "titleSlug": "map-sum-pairs",
        "topicTags": [
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Design",
                "slug": "design"
            },
            {
                "name": "Trie",
                "slug": "trie"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/map-sum-pairs/description"
    },
    "693": {
        "difficulty": "EASY",
        "id": 693,
        "questionFrontendId": "693",
        "title": "Binary Number with Alternating Bits",
        "titleSlug": "binary-number-with-alternating-bits",
        "topicTags": [
            {
                "name": "Bit Manipulation",
                "slug": "bit-manipulation"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/binary-number-with-alternating-bits/description"
    },
    "1010": {
        "difficulty": "MEDIUM",
        "id": 1010,
        "questionFrontendId": "970",
        "title": "Powerful Integers",
        "titleSlug": "powerful-integers",
        "topicTags": [
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Enumeration",
                "slug": "enumeration"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/powerful-integers/description"
    },
    "1195": {
        "difficulty": "EASY",
        "id": 1195,
        "questionFrontendId": "1103",
        "title": "Distribute Candies to People",
        "titleSlug": "distribute-candies-to-people",
        "topicTags": [
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Simulation",
                "slug": "simulation"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/distribute-candies-to-people/description"
    },
    "1260": {
        "difficulty": "EASY",
        "id": 1260,
        "questionFrontendId": "1154",
        "title": "Day of the Year",
        "titleSlug": "day-of-the-year",
        "topicTags": [
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "String",
                "slug": "string"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/day-of-the-year/description"
    },
    "1309": {
        "difficulty": "HARD",
        "id": 1309,
        "questionFrontendId": "1203",
        "title": "Sort Items by Groups Respecting Dependencies",
        "titleSlug": "sort-items-by-groups-respecting-dependencies",
        "topicTags": [
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Breadth-First Search",
                "slug": "breadth-first-search"
            },
            {
                "name": "Graph",
                "slug": "graph"
            },
            {
                "name": "Topological Sort",
                "slug": "topological-sort"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/sort-items-by-groups-respecting-dependencies/description"
    },
    "1471": {
        "difficulty": "HARD",
        "id": 1471,
        "questionFrontendId": "1349",
        "title": "Maximum Students Taking Exam",
        "titleSlug": "maximum-students-taking-exam",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Bit Manipulation",
                "slug": "bit-manipulation"
            },
            {
                "name": "Matrix",
                "slug": "matrix"
            },
            {
                "name": "Bitmask",
                "slug": "bitmask"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/maximum-students-taking-exam/description"
    },
    "1579": {
        "difficulty": "MEDIUM",
        "id": 1579,
        "questionFrontendId": "1454",
        "title": "Active Users",
        "titleSlug": "active-users",
        "topicTags": [
            {
                "name": "Database",
                "slug": "database"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/active-users/description"
    },
    "1652": {
        "difficulty": "MEDIUM",
        "id": 1652,
        "questionFrontendId": "1529",
        "title": "Minimum Suffix Flips",
        "titleSlug": "minimum-suffix-flips",
        "topicTags": [
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/minimum-suffix-flips/description"
    },
    "1685": {
        "difficulty": "HARD",
        "id": 1685,
        "questionFrontendId": "1563",
        "title": "Stone Game V",
        "titleSlug": "stone-game-v",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Game Theory",
                "slug": "game-theory"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/stone-game-v/description"
    },
    "1757": {
        "difficulty": "MEDIUM",
        "id": 1757,
        "questionFrontendId": "1654",
        "title": "Minimum Jumps to Reach Home",
        "titleSlug": "minimum-jumps-to-reach-home",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Breadth-First Search",
                "slug": "breadth-first-search"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/minimum-jumps-to-reach-home/description"
    },
    "1797": {
        "difficulty": "EASY",
        "id": 1797,
        "questionFrontendId": "1678",
        "title": "Goal Parser Interpretation",
        "titleSlug": "goal-parser-interpretation",
        "topicTags": [
            {
                "name": "String",
                "slug": "string"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/goal-parser-interpretation/description"
    },
    "1813": {
        "difficulty": "MEDIUM",
        "id": 1813,
        "questionFrontendId": "1695",
        "title": "Maximum Erasure Value",
        "titleSlug": "maximum-erasure-value",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Sliding Window",
                "slug": "sliding-window"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/maximum-erasure-value/description"
    },
    "2075": {
        "difficulty": "MEDIUM",
        "id": 2075,
        "questionFrontendId": "2021",
        "title": "Brightest Position on Street",
        "titleSlug": "brightest-position-on-street",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Prefix Sum",
                "slug": "prefix-sum"
            },
            {
                "name": "Ordered Set",
                "slug": "ordered-set"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/brightest-position-on-street/description"
    },
    "2094": {
        "difficulty": "MEDIUM",
        "id": 2094,
        "questionFrontendId": "1962",
        "title": "Remove Stones to Minimize the Total",
        "titleSlug": "remove-stones-to-minimize-the-total",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            },
            {
                "name": "Heap (Priority Queue)",
                "slug": "heap-priority-queue"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/remove-stones-to-minimize-the-total/description"
    },
    "2103": {
        "difficulty": "MEDIUM",
        "id": 2103,
        "questionFrontendId": "1992",
        "title": "Find All Groups of Farmland",
        "titleSlug": "find-all-groups-of-farmland",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Breadth-First Search",
                "slug": "breadth-first-search"
            },
            {
                "name": "Matrix",
                "slug": "matrix"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/find-all-groups-of-farmland/description"
    },
    "2128": {
        "difficulty": "EASY",
        "id": 2128,
        "questionFrontendId": "2000",
        "title": "Reverse Prefix of Word",
        "titleSlug": "reverse-prefix-of-word",
        "topicTags": [
            {
                "name": "Two Pointers",
                "slug": "two-pointers"
            },
            {
                "name": "String",
                "slug": "string"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/reverse-prefix-of-word/description"
    },
    "2215": {
        "difficulty": "EASY",
        "id": 2215,
        "questionFrontendId": "2094",
        "title": "Finding 3-Digit Even Numbers",
        "titleSlug": "finding-3-digit-even-numbers",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            },
            {
                "name": "Enumeration",
                "slug": "enumeration"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/finding-3-digit-even-numbers/description"
    },
    "2566": {
        "difficulty": "EASY",
        "id": 2566,
        "questionFrontendId": "2475",
        "title": "Number of Unequal Triplets in Array",
        "titleSlug": "number-of-unequal-triplets-in-array",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/number-of-unequal-triplets-in-array/description"
    },
    "2585": {
        "difficulty": "EASY",
        "id": 2585,
        "questionFrontendId": "2500",
        "title": "Delete Greatest Value in Each Row",
        "titleSlug": "delete-greatest-value-in-each-row",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            },
            {
                "name": "Heap (Priority Queue)",
                "slug": "heap-priority-queue"
            },
            {
                "name": "Matrix",
                "slug": "matrix"
            },
            {
                "name": "Simulation",
                "slug": "simulation"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/delete-greatest-value-in-each-row/description"
    },
    "2603": {
        "difficulty": "MEDIUM",
        "id": 2603,
        "questionFrontendId": "2512",
        "title": "Reward Top K Students",
        "titleSlug": "reward-top-k-students",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            },
            {
                "name": "Heap (Priority Queue)",
                "slug": "heap-priority-queue"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/reward-top-k-students/description"
    },
    "2624": {
        "difficulty": "EASY",
        "id": 2624,
        "questionFrontendId": "2535",
        "title": "Difference Between Element Sum and Digit Sum of an Array",
        "titleSlug": "difference-between-element-sum-and-digit-sum-of-an-array",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Math",
                "slug": "math"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/difference-between-element-sum-and-digit-sum-of-an-array/description"
    },
    "2663": {
        "difficulty": "EASY",
        "id": 2663,
        "questionFrontendId": "2591",
        "title": "Distribute Money to Maximum Children",
        "titleSlug": "distribute-money-to-maximum-children",
        "topicTags": [
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/distribute-money-to-maximum-children/description"
    },
    "2670": {
        "difficulty": "MEDIUM",
        "id": 2670,
        "questionFrontendId": "2607",
        "title": "Make K-Subarray Sums Equal",
        "titleSlug": "make-k-subarray-sums-equal",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            },
            {
                "name": "Number Theory",
                "slug": "number-theory"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/make-k-subarray-sums-equal/description"
    },
    "2684": {
        "difficulty": "EASY",
        "id": 2684,
        "questionFrontendId": "2660",
        "title": "Determine the Winner of a Bowling Game",
        "titleSlug": "determine-the-winner-of-a-bowling-game",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Simulation",
                "slug": "simulation"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/determine-the-winner-of-a-bowling-game/description"
    },
    "2692": {
        "difficulty": "EASY",
        "id": 2692,
        "questionFrontendId": "2558",
        "title": "Take Gifts From the Richest Pile",
        "titleSlug": "take-gifts-from-the-richest-pile",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Heap (Priority Queue)",
                "slug": "heap-priority-queue"
            },
            {
                "name": "Simulation",
                "slug": "simulation"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/take-gifts-from-the-richest-pile/description"
    },
    "2726": {
        "difficulty": "HARD",
        "id": 2726,
        "questionFrontendId": "2612",
        "title": "Minimum Reverse Operations",
        "titleSlug": "minimum-reverse-operations",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Breadth-First Search",
                "slug": "breadth-first-search"
            },
            {
                "name": "Ordered Set",
                "slug": "ordered-set"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/minimum-reverse-operations/description"
    },
    "2737": {
        "difficulty": "EASY",
        "id": 2737,
        "questionFrontendId": "2643",
        "title": "Row With Maximum Ones",
        "titleSlug": "row-with-maximum-ones",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Matrix",
                "slug": "matrix"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/row-with-maximum-ones/description"
    },
    "2766": {
        "difficulty": "MEDIUM",
        "id": 2766,
        "questionFrontendId": "2657",
        "title": "Find the Prefix Common Array of Two Arrays",
        "titleSlug": "find-the-prefix-common-array-of-two-arrays",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Bit Manipulation",
                "slug": "bit-manipulation"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/find-the-prefix-common-array-of-two-arrays/description"
    },
    "2794": {
        "difficulty": "MEDIUM",
        "id": 2794,
        "questionFrontendId": "2684",
        "title": "Maximum Number of Moves in a Grid",
        "titleSlug": "maximum-number-of-moves-in-a-grid",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Matrix",
                "slug": "matrix"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/maximum-number-of-moves-in-a-grid/description"
    },
    "2797": {
        "difficulty": "MEDIUM",
        "id": 2797,
        "questionFrontendId": "2694",
        "title": "Event Emitter",
        "titleSlug": "event-emitter",
        "topicTags": [],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/event-emitter/description"
    },
    "2810": {
        "difficulty": "MEDIUM",
        "id": 2810,
        "questionFrontendId": "2735",
        "title": "Collecting Chocolates",
        "titleSlug": "collecting-chocolates",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Enumeration",
                "slug": "enumeration"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/collecting-chocolates/description"
    },
    "3019": {
        "difficulty": "EASY",
        "id": 3019,
        "questionFrontendId": "2833",
        "title": "Furthest Point From Origin",
        "titleSlug": "furthest-point-from-origin",
        "topicTags": [
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Counting",
                "slug": "counting"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/furthest-point-from-origin/description"
    },
    "3030": {
        "difficulty": "MEDIUM",
        "id": 3030,
        "questionFrontendId": "2802",
        "title": "Find The K-th Lucky Number",
        "titleSlug": "find-the-k-th-lucky-number",
        "topicTags": [
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Bit Manipulation",
                "slug": "bit-manipulation"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/find-the-k-th-lucky-number/description"
    },
    "3065": {
        "difficulty": "EASY",
        "id": 3065,
        "questionFrontendId": "2879",
        "title": "Display the First Three Rows",
        "titleSlug": "display-the-first-three-rows",
        "topicTags": [],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/display-the-first-three-rows/description"
    },
    "3106": {
        "difficulty": "MEDIUM",
        "id": 3106,
        "questionFrontendId": "2915",
        "title": "Length of the Longest Subsequence That Sums to Target",
        "titleSlug": "length-of-the-longest-subsequence-that-sums-to-target",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/length-of-the-longest-subsequence-that-sums-to-target/description"
    },
    "3150": {
        "difficulty": "MEDIUM",
        "id": 3150,
        "questionFrontendId": "2904",
        "title": "Shortest and Lexicographically Smallest Beautiful String",
        "titleSlug": "shortest-and-lexicographically-smallest-beautiful-string",
        "topicTags": [
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Sliding Window",
                "slug": "sliding-window"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/shortest-and-lexicographically-smallest-beautiful-string/description"
    },
    "3226": {
        "difficulty": "EASY",
        "id": 3226,
        "questionFrontendId": "2974",
        "title": "Minimum Number Game",
        "titleSlug": "minimum-number-game",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            },
            {
                "name": "Heap (Priority Queue)",
                "slug": "heap-priority-queue"
            },
            {
                "name": "Simulation",
                "slug": "simulation"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/minimum-number-game/description"
    },
    "3227": {
        "difficulty": "EASY",
        "id": 3227,
        "questionFrontendId": "2965",
        "title": "Find Missing and Repeated Values",
        "titleSlug": "find-missing-and-repeated-values",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Matrix",
                "slug": "matrix"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/find-missing-and-repeated-values/description"
    },
    "467": {
        "difficulty": "MEDIUM",
        "id": 467,
        "questionFrontendId": "467",
        "title": "Unique Substrings in Wraparound String",
        "titleSlug": "unique-substrings-in-wraparound-string",
        "topicTags": [
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/unique-substrings-in-wraparound-string/description"
    },
    "599": {
        "difficulty": "EASY",
        "id": 599,
        "questionFrontendId": "599",
        "title": "Minimum Index Sum of Two Lists",
        "titleSlug": "minimum-index-sum-of-two-lists",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "String",
                "slug": "string"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/minimum-index-sum-of-two-lists/description"
    },
    "630": {
        "difficulty": "HARD",
        "id": 630,
        "questionFrontendId": "630",
        "title": "Course Schedule III",
        "titleSlug": "course-schedule-iii",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            },
            {
                "name": "Heap (Priority Queue)",
                "slug": "heap-priority-queue"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/course-schedule-iii/description"
    },
    "736": {
        "difficulty": "HARD",
        "id": 736,
        "questionFrontendId": "736",
        "title": "Parse Lisp Expression",
        "titleSlug": "parse-lisp-expression",
        "topicTags": [
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Stack",
                "slug": "stack"
            },
            {
                "name": "Recursion",
                "slug": "recursion"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/parse-lisp-expression/description"
    },
    "897": {
        "difficulty": "MEDIUM",
        "id": 897,
        "questionFrontendId": "866",
        "title": "Prime Palindrome",
        "titleSlug": "prime-palindrome",
        "topicTags": [
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Number Theory",
                "slug": "number-theory"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/prime-palindrome/description"
    },
    "899": {
        "difficulty": "EASY",
        "id": 899,
        "questionFrontendId": "868",
        "title": "Binary Gap",
        "titleSlug": "binary-gap",
        "topicTags": [
            {
                "name": "Bit Manipulation",
                "slug": "bit-manipulation"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/binary-gap/description"
    },
    "906": {
        "difficulty": "MEDIUM",
        "id": 906,
        "questionFrontendId": "874",
        "title": "Walking Robot Simulation",
        "titleSlug": "walking-robot-simulation",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Simulation",
                "slug": "simulation"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/walking-robot-simulation/description"
    },
    "1020": {
        "difficulty": "MEDIUM",
        "id": 1020,
        "questionFrontendId": "978",
        "title": "Longest Turbulent Subarray",
        "titleSlug": "longest-turbulent-subarray",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Sliding Window",
                "slug": "sliding-window"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/longest-turbulent-subarray/description"
    },
    "1094": {
        "difficulty": "EASY",
        "id": 1094,
        "questionFrontendId": "1030",
        "title": "Matrix Cells in Distance Order",
        "titleSlug": "matrix-cells-in-distance-order",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Geometry",
                "slug": "geometry"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            },
            {
                "name": "Matrix",
                "slug": "matrix"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/matrix-cells-in-distance-order/description"
    },
    "1178": {
        "difficulty": "HARD",
        "id": 1178,
        "questionFrontendId": "1216",
        "title": "Valid Palindrome III",
        "titleSlug": "valid-palindrome-iii",
        "topicTags": [
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/valid-palindrome-iii/description"
    },
    "1218": {
        "difficulty": "MEDIUM",
        "id": 1218,
        "questionFrontendId": "1123",
        "title": "Lowest Common Ancestor of Deepest Leaves",
        "titleSlug": "lowest-common-ancestor-of-deepest-leaves",
        "topicTags": [
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Tree",
                "slug": "tree"
            },
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Breadth-First Search",
                "slug": "breadth-first-search"
            },
            {
                "name": "Binary Tree",
                "slug": "binary-tree"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/lowest-common-ancestor-of-deepest-leaves/description"
    },
    "1268": {
        "difficulty": "MEDIUM",
        "id": 1268,
        "questionFrontendId": "1158",
        "title": "Market Analysis I",
        "titleSlug": "market-analysis-i",
        "topicTags": [
            {
                "name": "Database",
                "slug": "database"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/market-analysis-i/description"
    },
    "1270": {
        "difficulty": "HARD",
        "id": 1270,
        "questionFrontendId": "1172",
        "title": "Dinner Plate Stacks",
        "titleSlug": "dinner-plate-stacks",
        "topicTags": [
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Stack",
                "slug": "stack"
            },
            {
                "name": "Design",
                "slug": "design"
            },
            {
                "name": "Heap (Priority Queue)",
                "slug": "heap-priority-queue"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/dinner-plate-stacks/description"
    },
    "1303": {
        "difficulty": "MEDIUM",
        "id": 1303,
        "questionFrontendId": "2139",
        "title": "Minimum Moves to Reach Target Score",
        "titleSlug": "minimum-moves-to-reach-target-score",
        "topicTags": [
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/minimum-moves-to-reach-target-score/description"
    },
    "1316": {
        "difficulty": "MEDIUM",
        "id": 1316,
        "questionFrontendId": "1195",
        "title": "Fizz Buzz Multithreaded",
        "titleSlug": "fizz-buzz-multithreaded",
        "topicTags": [
            {
                "name": "Concurrency",
                "slug": "concurrency"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/fizz-buzz-multithreaded/description"
    },
    "1339": {
        "difficulty": "MEDIUM",
        "id": 1339,
        "questionFrontendId": "1212",
        "title": "Team Scores in Football Tournament",
        "titleSlug": "team-scores-in-football-tournament",
        "topicTags": [
            {
                "name": "Database",
                "slug": "database"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/team-scores-in-football-tournament/description"
    },
    "1341": {
        "difficulty": "EASY",
        "id": 1341,
        "questionFrontendId": "1221",
        "title": "Split a String in Balanced Strings",
        "titleSlug": "split-a-string-in-balanced-strings",
        "topicTags": [
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            },
            {
                "name": "Counting",
                "slug": "counting"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/split-a-string-in-balanced-strings/description"
    },
    "1357": {
        "difficulty": "HARD",
        "id": 1357,
        "questionFrontendId": "1225",
        "title": "Report Contiguous Dates",
        "titleSlug": "report-contiguous-dates",
        "topicTags": [
            {
                "name": "Database",
                "slug": "database"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/report-contiguous-dates/description"
    },
    "1423": {
        "difficulty": "MEDIUM",
        "id": 1423,
        "questionFrontendId": "1297",
        "title": "Maximum Number of Occurrences of a Substring",
        "titleSlug": "maximum-number-of-occurrences-of-a-substring",
        "topicTags": [
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Sliding Window",
                "slug": "sliding-window"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/maximum-number-of-occurrences-of-a-substring/description"
    },
    "1435": {
        "difficulty": "MEDIUM",
        "id": 1435,
        "questionFrontendId": "1310",
        "title": "XOR Queries of a Subarray",
        "titleSlug": "xor-queries-of-a-subarray",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Bit Manipulation",
                "slug": "bit-manipulation"
            },
            {
                "name": "Prefix Sum",
                "slug": "prefix-sum"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/xor-queries-of-a-subarray/description"
    },
    "1466": {
        "difficulty": "HARD",
        "id": 1466,
        "questionFrontendId": "1340",
        "title": "Jump Game V",
        "titleSlug": "jump-game-v",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/jump-game-v/description"
    },
    "1575": {
        "difficulty": "MEDIUM",
        "id": 1575,
        "questionFrontendId": "1465",
        "title": "Maximum Area of a Piece of Cake After Horizontal and Vertical Cuts",
        "titleSlug": "maximum-area-of-a-piece-of-cake-after-horizontal-and-vertical-cuts",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/maximum-area-of-a-piece-of-cake-after-horizontal-and-vertical-cuts/description"
    },
    "1625": {
        "difficulty": "EASY",
        "id": 1625,
        "questionFrontendId": "1484",
        "title": "Group Sold Products By The Date",
        "titleSlug": "group-sold-products-by-the-date",
        "topicTags": [
            {
                "name": "Database",
                "slug": "database"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/group-sold-products-by-the-date/description"
    },
    "1680": {
        "difficulty": "HARD",
        "id": 1680,
        "questionFrontendId": "1575",
        "title": "Count All Possible Routes",
        "titleSlug": "count-all-possible-routes",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Memoization",
                "slug": "memoization"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/count-all-possible-routes/description"
    },
    "1688": {
        "difficulty": "MEDIUM",
        "id": 1688,
        "questionFrontendId": "1549",
        "title": "The Most Recent Orders for Each Product",
        "titleSlug": "the-most-recent-orders-for-each-product",
        "topicTags": [
            {
                "name": "Database",
                "slug": "database"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/the-most-recent-orders-for-each-product/description"
    },
    "1740": {
        "difficulty": "HARD",
        "id": 1740,
        "questionFrontendId": "1617",
        "title": "Count Subtrees With Max Distance Between Cities",
        "titleSlug": "count-subtrees-with-max-distance-between-cities",
        "topicTags": [
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Bit Manipulation",
                "slug": "bit-manipulation"
            },
            {
                "name": "Tree",
                "slug": "tree"
            },
            {
                "name": "Enumeration",
                "slug": "enumeration"
            },
            {
                "name": "Bitmask",
                "slug": "bitmask"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/count-subtrees-with-max-distance-between-cities/description"
    },
    "1755": {
        "difficulty": "EASY",
        "id": 1755,
        "questionFrontendId": "1652",
        "title": "Defuse the Bomb",
        "titleSlug": "defuse-the-bomb",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Sliding Window",
                "slug": "sliding-window"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/defuse-the-bomb/description"
    },
    "1764": {
        "difficulty": "EASY",
        "id": 1764,
        "questionFrontendId": "1668",
        "title": "Maximum Repeating Substring",
        "titleSlug": "maximum-repeating-substring",
        "topicTags": [
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "String Matching",
                "slug": "string-matching"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/maximum-repeating-substring/description"
    },
    "1769": {
        "difficulty": "EASY",
        "id": 1769,
        "questionFrontendId": "1646",
        "title": "Get Maximum in Generated Array",
        "titleSlug": "get-maximum-in-generated-array",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Simulation",
                "slug": "simulation"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/get-maximum-in-generated-array/description"
    },
    "1819": {
        "difficulty": "MEDIUM",
        "id": 1819,
        "questionFrontendId": "1718",
        "title": "Construct the Lexicographically Largest Valid Sequence",
        "titleSlug": "construct-the-lexicographically-largest-valid-sequence",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Backtracking",
                "slug": "backtracking"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/construct-the-lexicographically-largest-valid-sequence/description"
    },
    "1849": {
        "difficulty": "MEDIUM",
        "id": 1849,
        "questionFrontendId": "1749",
        "title": "Maximum Absolute Sum of Any Subarray",
        "titleSlug": "maximum-absolute-sum-of-any-subarray",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/maximum-absolute-sum-of-any-subarray/description"
    },
    "1886": {
        "difficulty": "MEDIUM",
        "id": 1886,
        "questionFrontendId": "1760",
        "title": "Minimum Limit of Balls in a Bag",
        "titleSlug": "minimum-limit-of-balls-in-a-bag",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Binary Search",
                "slug": "binary-search"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/minimum-limit-of-balls-in-a-bag/description"
    },
    "1947": {
        "difficulty": "HARD",
        "id": 1947,
        "questionFrontendId": "1819",
        "title": "Number of Different Subsequences GCDs",
        "titleSlug": "number-of-different-subsequences-gcds",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Counting",
                "slug": "counting"
            },
            {
                "name": "Number Theory",
                "slug": "number-theory"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/number-of-different-subsequences-gcds/description"
    },
    "2019": {
        "difficulty": "MEDIUM",
        "id": 2019,
        "questionFrontendId": "1868",
        "title": "Product of Two Run-Length Encoded Arrays",
        "titleSlug": "product-of-two-run-length-encoded-arrays",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Two Pointers",
                "slug": "two-pointers"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/product-of-two-run-length-encoded-arrays/description"
    },
    "2100": {
        "difficulty": "MEDIUM",
        "id": 2100,
        "questionFrontendId": "1969",
        "title": "Minimum Non-Zero Product of the Array Elements",
        "titleSlug": "minimum-non-zero-product-of-the-array-elements",
        "topicTags": [
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            },
            {
                "name": "Recursion",
                "slug": "recursion"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/minimum-non-zero-product-of-the-array-elements/description"
    },
    "2113": {
        "difficulty": "MEDIUM",
        "id": 2113,
        "questionFrontendId": "1985",
        "title": "Find the Kth Largest Integer in the Array",
        "titleSlug": "find-the-kth-largest-integer-in-the-array",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Divide and Conquer",
                "slug": "divide-and-conquer"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            },
            {
                "name": "Heap (Priority Queue)",
                "slug": "heap-priority-queue"
            },
            {
                "name": "Quickselect",
                "slug": "quickselect"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/find-the-kth-largest-integer-in-the-array/description"
    },
    "2120": {
        "difficulty": "HARD",
        "id": 2120,
        "questionFrontendId": "1972",
        "title": "First and Last Call On the Same Day",
        "titleSlug": "first-and-last-call-on-the-same-day",
        "topicTags": [
            {
                "name": "Database",
                "slug": "database"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/first-and-last-call-on-the-same-day/description"
    },
    "2174": {
        "difficulty": "MEDIUM",
        "id": 2174,
        "questionFrontendId": "2048",
        "title": "Next Greater Numerically Balanced Number",
        "titleSlug": "next-greater-numerically-balanced-number",
        "topicTags": [
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Backtracking",
                "slug": "backtracking"
            },
            {
                "name": "Enumeration",
                "slug": "enumeration"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/next-greater-numerically-balanced-number/description"
    },
    "2196": {
        "difficulty": "MEDIUM",
        "id": 2196,
        "questionFrontendId": "2074",
        "title": "Reverse Nodes in Even Length Groups",
        "titleSlug": "reverse-nodes-in-even-length-groups",
        "topicTags": [
            {
                "name": "Linked List",
                "slug": "linked-list"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/reverse-nodes-in-even-length-groups/description"
    },
    "2248": {
        "difficulty": "EASY",
        "id": 2248,
        "questionFrontendId": "2144",
        "title": "Minimum Cost of Buying Candies With Discount",
        "titleSlug": "minimum-cost-of-buying-candies-with-discount",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/minimum-cost-of-buying-candies-with-discount/description"
    },
    "2257": {
        "difficulty": "HARD",
        "id": 2257,
        "questionFrontendId": "2136",
        "title": "Earliest Possible Day of Full Bloom",
        "titleSlug": "earliest-possible-day-of-full-bloom",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/earliest-possible-day-of-full-bloom/description"
    },
    "2285": {
        "difficulty": "MEDIUM",
        "id": 2285,
        "questionFrontendId": "2166",
        "title": "Design Bitset",
        "titleSlug": "design-bitset",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Design",
                "slug": "design"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/design-bitset/description"
    },
    "2289": {
        "difficulty": "MEDIUM",
        "id": 2289,
        "questionFrontendId": "2170",
        "title": "Minimum Operations to Make the Array Alternating",
        "titleSlug": "minimum-operations-to-make-the-array-alternating",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            },
            {
                "name": "Counting",
                "slug": "counting"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/minimum-operations-to-make-the-array-alternating/description"
    },
    "2329": {
        "difficulty": "MEDIUM",
        "id": 2329,
        "questionFrontendId": "2233",
        "title": "Maximum Product After K Increments",
        "titleSlug": "maximum-product-after-k-increments",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            },
            {
                "name": "Heap (Priority Queue)",
                "slug": "heap-priority-queue"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/maximum-product-after-k-increments/description"
    },
    "2438": {
        "difficulty": "MEDIUM",
        "id": 2438,
        "questionFrontendId": "2359",
        "title": "Find Closest Node to Given Two Nodes",
        "titleSlug": "find-closest-node-to-given-two-nodes",
        "topicTags": [
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Graph",
                "slug": "graph"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/find-closest-node-to-given-two-nodes/description"
    },
    "2448": {
        "difficulty": "MEDIUM",
        "id": 2448,
        "questionFrontendId": "2364",
        "title": "Count Number of Bad Pairs",
        "titleSlug": "count-number-of-bad-pairs",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/count-number-of-bad-pairs/description"
    },
    "2476": {
        "difficulty": "EASY",
        "id": 2476,
        "questionFrontendId": "2399",
        "title": "Check Distances Between Same Letters",
        "titleSlug": "check-distances-between-same-letters",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "String",
                "slug": "string"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/check-distances-between-same-letters/description"
    },
    "2662": {
        "difficulty": "MEDIUM",
        "id": 2662,
        "questionFrontendId": "2596",
        "title": "Check Knight Tour Configuration",
        "titleSlug": "check-knight-tour-configuration",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Breadth-First Search",
                "slug": "breadth-first-search"
            },
            {
                "name": "Matrix",
                "slug": "matrix"
            },
            {
                "name": "Simulation",
                "slug": "simulation"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/check-knight-tour-configuration/description"
    },
    "2705": {
        "difficulty": "MEDIUM",
        "id": 2705,
        "questionFrontendId": "2568",
        "title": "Minimum Impossible OR",
        "titleSlug": "minimum-impossible-or",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Bit Manipulation",
                "slug": "bit-manipulation"
            },
            {
                "name": "Brainteaser",
                "slug": "brainteaser"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/minimum-impossible-or/description"
    },
    "2748": {
        "difficulty": "EASY",
        "id": 2748,
        "questionFrontendId": "2651",
        "title": "Calculate Delayed Arrival Time",
        "titleSlug": "calculate-delayed-arrival-time",
        "topicTags": [
            {
                "name": "Math",
                "slug": "math"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/calculate-delayed-arrival-time/description"
    },
    "2777": {
        "difficulty": "EASY",
        "id": 2777,
        "questionFrontendId": "2670",
        "title": "Find the Distinct Difference Array",
        "titleSlug": "find-the-distinct-difference-array",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/find-the-distinct-difference-array/description"
    },
    "2784": {
        "difficulty": "HARD",
        "id": 2784,
        "questionFrontendId": "2681",
        "title": "Power of Heroes",
        "titleSlug": "power-of-heroes",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            },
            {
                "name": "Prefix Sum",
                "slug": "prefix-sum"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/power-of-heroes/description"
    },
    "2790": {
        "difficulty": "MEDIUM",
        "id": 2790,
        "questionFrontendId": "2693",
        "title": "Call Function with Custom Context",
        "titleSlug": "call-function-with-custom-context",
        "topicTags": [],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/call-function-with-custom-context/description"
    },
    "2791": {
        "difficulty": "EASY",
        "id": 2791,
        "questionFrontendId": "2682",
        "title": "Find the Losers of the Circular Game",
        "titleSlug": "find-the-losers-of-the-circular-game",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Simulation",
                "slug": "simulation"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/find-the-losers-of-the-circular-game/description"
    },
    "2793": {
        "difficulty": "MEDIUM",
        "id": 2793,
        "questionFrontendId": "2685",
        "title": "Count the Number of Complete Components",
        "titleSlug": "count-the-number-of-complete-components",
        "topicTags": [
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Breadth-First Search",
                "slug": "breadth-first-search"
            },
            {
                "name": "Graph",
                "slug": "graph"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/count-the-number-of-complete-components/description"
    },
    "2798": {
        "difficulty": "EASY",
        "id": 2798,
        "questionFrontendId": "2677",
        "title": "Chunk Array",
        "titleSlug": "chunk-array",
        "topicTags": [],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/chunk-array/description"
    },
    "2817": {
        "difficulty": "MEDIUM",
        "id": 2817,
        "questionFrontendId": "2712",
        "title": "Minimum Cost to Make All Characters Equal",
        "titleSlug": "minimum-cost-to-make-all-characters-equal",
        "topicTags": [
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/minimum-cost-to-make-all-characters-equal/description"
    },
    "2866": {
        "difficulty": "EASY",
        "id": 2866,
        "questionFrontendId": "2760",
        "title": "Longest Even Odd Subarray With Threshold",
        "titleSlug": "longest-even-odd-subarray-with-threshold",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Sliding Window",
                "slug": "sliding-window"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/longest-even-odd-subarray-with-threshold/description"
    },
    "2915": {
        "difficulty": "MEDIUM",
        "id": 2915,
        "questionFrontendId": "2845",
        "title": "Count of Interesting Subarrays",
        "titleSlug": "count-of-interesting-subarrays",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Prefix Sum",
                "slug": "prefix-sum"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/count-of-interesting-subarrays/description"
    },
    "3067": {
        "difficulty": "EASY",
        "id": 3067,
        "questionFrontendId": "2884",
        "title": "Modify Columns",
        "titleSlug": "modify-columns",
        "topicTags": [],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/modify-columns/description"
    },
    "3095": {
        "difficulty": "MEDIUM",
        "id": 3095,
        "questionFrontendId": "2861",
        "title": "Maximum Number of Alloys",
        "titleSlug": "maximum-number-of-alloys",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Binary Search",
                "slug": "binary-search"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/maximum-number-of-alloys/description"
    },
    "3104": {
        "difficulty": "MEDIUM",
        "id": 3104,
        "questionFrontendId": "2860",
        "title": "Happy Students",
        "titleSlug": "happy-students",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            },
            {
                "name": "Enumeration",
                "slug": "enumeration"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/happy-students/description"
    },
    "3113": {
        "difficulty": "MEDIUM",
        "id": 3113,
        "questionFrontendId": "2866",
        "title": "Beautiful Towers II",
        "titleSlug": "beautiful-towers-ii",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Stack",
                "slug": "stack"
            },
            {
                "name": "Monotonic Stack",
                "slug": "monotonic-stack"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/beautiful-towers-ii/description"
    },
    "3140": {
        "difficulty": "HARD",
        "id": 3140,
        "questionFrontendId": "2876",
        "title": "Count Visited Nodes in a Directed Graph",
        "titleSlug": "count-visited-nodes-in-a-directed-graph",
        "topicTags": [
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Graph",
                "slug": "graph"
            },
            {
                "name": "Memoization",
                "slug": "memoization"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/count-visited-nodes-in-a-directed-graph/description"
    },
    "3163": {
        "difficulty": "EASY",
        "id": 3163,
        "questionFrontendId": "2913",
        "title": "Subarrays Distinct Element Sum of Squares I",
        "titleSlug": "subarrays-distinct-element-sum-of-squares-i",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/subarrays-distinct-element-sum-of-squares-i/description"
    },
    "3193": {
        "difficulty": "EASY",
        "id": 3193,
        "questionFrontendId": "2932",
        "title": "Maximum Strong Pair XOR I",
        "titleSlug": "maximum-strong-pair-xor-i",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Bit Manipulation",
                "slug": "bit-manipulation"
            },
            {
                "name": "Trie",
                "slug": "trie"
            },
            {
                "name": "Sliding Window",
                "slug": "sliding-window"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/maximum-strong-pair-xor-i/description"
    },
    "3209": {
        "difficulty": "MEDIUM",
        "id": 3209,
        "questionFrontendId": "2944",
        "title": "Minimum Number of Coins for Fruits",
        "titleSlug": "minimum-number-of-coins-for-fruits",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Queue",
                "slug": "queue"
            },
            {
                "name": "Heap (Priority Queue)",
                "slug": "heap-priority-queue"
            },
            {
                "name": "Monotonic Queue",
                "slug": "monotonic-queue"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/minimum-number-of-coins-for-fruits/description"
    },
    "3223": {
        "difficulty": "HARD",
        "id": 3223,
        "questionFrontendId": "2953",
        "title": "Count Complete Substrings",
        "titleSlug": "count-complete-substrings",
        "topicTags": [
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Sliding Window",
                "slug": "sliding-window"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/count-complete-substrings/description"
    },
    "3344": {
        "difficulty": "HARD",
        "id": 3344,
        "questionFrontendId": "3102",
        "title": "Minimize Manhattan Distances",
        "titleSlug": "minimize-manhattan-distances",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Geometry",
                "slug": "geometry"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            },
            {
                "name": "Ordered Set",
                "slug": "ordered-set"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/minimize-manhattan-distances/description"
    },
    "3348": {
        "difficulty": "HARD",
        "id": 3348,
        "questionFrontendId": "3108",
        "title": "Minimum Cost Walk in Weighted Graph",
        "titleSlug": "minimum-cost-walk-in-weighted-graph",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Bit Manipulation",
                "slug": "bit-manipulation"
            },
            {
                "name": "Union Find",
                "slug": "union-find"
            },
            {
                "name": "Graph",
                "slug": "graph"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/minimum-cost-walk-in-weighted-graph/description"
    },
    "3389": {
        "difficulty": "MEDIUM",
        "id": 3389,
        "questionFrontendId": "3112",
        "title": "Minimum Time to Visit Disappearing Nodes",
        "titleSlug": "minimum-time-to-visit-disappearing-nodes",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Graph",
                "slug": "graph"
            },
            {
                "name": "Heap (Priority Queue)",
                "slug": "heap-priority-queue"
            },
            {
                "name": "Shortest Path",
                "slug": "shortest-path"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/minimum-time-to-visit-disappearing-nodes/description"
    },
    "3394": {
        "difficulty": "MEDIUM",
        "id": 3394,
        "questionFrontendId": "3133",
        "title": "Minimum Array End",
        "titleSlug": "minimum-array-end",
        "topicTags": [
            {
                "name": "Bit Manipulation",
                "slug": "bit-manipulation"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/minimum-array-end/description"
    },
    "3396": {
        "difficulty": "EASY",
        "id": 3396,
        "questionFrontendId": "3136",
        "title": "Valid Word",
        "titleSlug": "valid-word",
        "topicTags": [
            {
                "name": "String",
                "slug": "string"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/valid-word/description"
    },
    "3403": {
        "difficulty": "MEDIUM",
        "id": 3403,
        "questionFrontendId": "3144",
        "title": "Minimum Substring Partition of Equal Character Frequency",
        "titleSlug": "minimum-substring-partition-of-equal-character-frequency",
        "topicTags": [
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Counting",
                "slug": "counting"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/minimum-substring-partition-of-equal-character-frequency/description"
    },
    "3429": {
        "difficulty": "EASY",
        "id": 3429,
        "questionFrontendId": "3151",
        "title": "Special Array I",
        "titleSlug": "special-array-i",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/special-array-i/description"
    },
    "3482": {
        "difficulty": "HARD",
        "id": 3482,
        "questionFrontendId": "3213",
        "title": "Construct String with Minimum Cost",
        "titleSlug": "construct-string-with-minimum-cost",
        "topicTags": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Suffix Array",
                "slug": "suffix-array"
            }
        ],
        "companyNames": [
            "amazon"
        ],
        "frequencyCount": 1,
        "url": "https://leetcode.com/problems/construct-string-with-minimum-cost/description"
    }
}